From 908854a7b281454332af434be9468ec45d420030 Mon Sep 17 00:00:00 2001
From: Eike Rathke <erack@redhat.com>
Date: Mon, 29 Jan 2018 18:19:33 +0100
Subject: CheckLinkFormulaNeedingCheck() for named expressions
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

 This is a combination of 3 commits.

CheckLinkFormulaNeedingCheck() for .ods named expressions

This is specifically necessary for named expressions that are used
in conditional format formulas, for which RPN is generated at a
later stage, not during import.

(cherry picked from commit eae9648e99be53ba441d9d8207aac6f3ce211ef2)

CheckLinkFormulaNeedingCheck() for .xls named expressions

(cherry picked from commit 8512f13c42ae3fbb287a555616fe10ff04295616)

CheckLinkFormulaNeedingCheck() for .xlsx named expressions

(cherry picked from commit a1f933ee2b9e23a505d937035821e9571cf4119c)

 Conflicts:
	sc/source/filter/oox/defnamesbuffer.cxx

e03cb5767c34f8157a492a6d6c3b0700d065052d
217c89822ab477a6c383d170ae739e44efd10fa3

Change-Id: I54ab8dc14f81d6b18b0d17f448187d19d8e396fc
Reviewed-on: https://gerrit.libreoffice.org/48858
Tested-by: Jenkins <ci@libreoffice.org>
Reviewed-by: Caolán McNamara <caolanm@redhat.com>
Tested-by: Caolán McNamara <caolanm@redhat.com>
---
 sc/source/core/tool/rangenam.cxx        | 8 +++++++-
 sc/source/filter/excel/xiname.cxx       | 3 +++
 sc/source/filter/oox/defnamesbuffer.cxx | 2 ++
 3 files changed, 12 insertions(+), 1 deletion(-)

Index: libreoffice-5.1.6~rc2/sc/source/core/tool/rangenam.cxx
===================================================================
--- libreoffice-5.1.6~rc2.orig/sc/source/core/tool/rangenam.cxx	2018-02-12 15:41:09.286767163 -0500
+++ libreoffice-5.1.6~rc2/sc/source/core/tool/rangenam.cxx	2018-02-12 15:41:09.286767163 -0500
@@ -64,9 +64,14 @@ ScRangeData::ScRangeData( ScDocument* pD
                 mnMaxCol    (-1)
 {
     if (!rSymbol.isEmpty())
-        CompileRangeData( rSymbol, pDoc->IsImportingXML());
+    {
         // Let the compiler set an error on unknown names for a subsequent
         // CompileUnresolvedXML().
+        const bool bImporting = pDoc->IsImportingXML();
+        CompileRangeData( rSymbol, bImporting);
+        if (bImporting)
+            pDoc->CheckLinkFormulaNeedingCheck( *pCode);
+    }
     else
     {
         // #i63513#/#i65690# don't leave pCode as NULL.
@@ -199,6 +204,7 @@ void ScRangeData::CompileUnresolvedXML(
         // Don't let the compiler set an error for unknown names on final
         // compile, errors are handled by the interpreter thereafter.
         CompileRangeData( aSymbol, false);
+        rCxt.getDoc()->CheckLinkFormulaNeedingCheck( *pCode);
     }
 }
 
Index: libreoffice-5.1.6~rc2/sc/source/filter/excel/xiname.cxx
===================================================================
--- libreoffice-5.1.6~rc2.orig/sc/source/filter/excel/xiname.cxx	2018-02-12 15:41:09.286767163 -0500
+++ libreoffice-5.1.6~rc2/sc/source/filter/excel/xiname.cxx	2018-02-12 15:41:09.286767163 -0500
@@ -265,7 +265,10 @@ void XclImpName::InsertName(const ScToke
         }
     }
     if (pData)
+    {
+        GetDoc().CheckLinkFormulaNeedingCheck( *pData->GetCode());
         mpScData = pData;               // cache for later use
+    }
 }
 
 XclImpNameManager::XclImpNameManager( const XclImpRoot& rRoot ) :
Index: libreoffice-5.1.6~rc2/sc/source/filter/oox/defnamesbuffer.cxx
===================================================================
--- libreoffice-5.1.6~rc2.orig/sc/source/filter/oox/defnamesbuffer.cxx	2018-02-12 15:41:09.286767163 -0500
+++ libreoffice-5.1.6~rc2/sc/source/filter/oox/defnamesbuffer.cxx	2018-02-12 15:41:09.286767163 -0500
@@ -38,6 +38,7 @@
 #include "tokenarray.hxx"
 #include "tokenuno.hxx"
 #include "compiler.hxx"
+#include "document.hxx"
 
 namespace oox {
 namespace xls {
@@ -336,6 +337,7 @@ std::unique_ptr<ScTokenArray> DefinedNam
     // after, a resulting error must be reset.
     sal_uInt16 nErr = pArray->GetCodeError();
     aCompiler.CompileTokenArray();
+    getScDocument().CheckLinkFormulaNeedingCheck( *pArray);
     pArray->DelRPN();
     pArray->SetCodeError(nErr);
 
