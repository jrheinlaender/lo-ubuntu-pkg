--- /dev/null	2012-05-22 08:56:33.799720249 +0200
+++ libreoffice-3.4.2/libreoffice-build/patches/hotfixes/cve-2012-1149-a.diff  2012-05-22 13:14:34.499049587 +0200
@@ -0,0 +1,61 @@
+git format-patch --stdout c4088ad4ef53284af8136cca5eab7714307ce152^..c4088ad4ef53284af8136cca5eab7714307ce152 |sed -e 's|^--- a/|--- |' -e 's|^+++ b/|+++ |' > ~/checkouts/pkg-libreoffice-3-4/patches/cve-2012-1149-a.diff
+From c4088ad4ef53284af8136cca5eab7714307ce152 Mon Sep 17 00:00:00 2001
+From: =?UTF-8?q?Caol=C3=A1n=20McNamara?= <caolanm@redhat.com>
+Date: Thu, 19 Apr 2012 20:46:59 +0100
+Subject: [PATCH] fail earlier on oversized images
+
+Signed-off-by: Petr Mladek <pmladek@suse.cz>
+Signed-off-by: Michael Meeks <michael.meeks@suse.com>
+Signed-off-by: Miklos Vajna <vmiklos@frugalware.org>
+---
+ vcl/source/gdi/pngread.cxx |   27 +++++++++++++++++++--------
+ 1 file changed, 19 insertions(+), 8 deletions(-)
+
+diff --git a/vcl/source/gdi/pngread.cxx b/vcl/source/gdi/pngread.cxx
+index 1c590b5..2302e33 100644
+--- vcl/source/gdi/pngread.cxx
++++ vcl/source/gdi/pngread.cxx
+@@ -620,14 +620,6 @@ sal_Bool PNGReaderImpl::ImplReadHeader( const Size& rPreviewSizeHint )
+ 
+     mnScansize = static_cast< sal_uInt32 >( nScansize64 );
+ 
+-    // TODO: switch between both scanlines instead of copying
+-    mpInflateInBuf = new (std::nothrow) sal_uInt8[ mnScansize ];
+-    mpScanCurrent = mpInflateInBuf;
+-    mpScanPrior = new (std::nothrow) sal_uInt8[ mnScansize ];
+-
+-    if ( !mpInflateInBuf || !mpScanPrior )
+-        return sal_False;
+-
+     // calculate target size from original size and the preview hint
+     if( rPreviewSizeHint.Width() || rPreviewSizeHint.Height() )
+     {
+@@ -662,6 +654,25 @@ sal_Bool PNGReaderImpl::ImplReadHeader( const Size& rPreviewSizeHint )
+     maTargetSize.Width()  = (maOrigSize.Width() + mnPreviewMask) >> mnPreviewShift;
+     maTargetSize.Height() = (maOrigSize.Height() + mnPreviewMask) >> mnPreviewShift;
+ 
++    //round bits up to nearest multiple of 8 and divide by 8 to get num of bytes per pixel
++    int nBytesPerPixel = ((mnTargetDepth + 7) & ~7)/8;
++
++    //stupidly big, forget about it
++    if (maTargetSize.Width() >= SAL_MAX_INT32 / nBytesPerPixel / maTargetSize.Height())
++    {
++        // SAL_WARN( "vcl", "overlarge png dimensions: " <<
++        //    maTargetSize.Width() << " x " << maTargetSize.Height() << " depth: " << mnTargetDepth);
++        return sal_False;
++    }
++
++    // TODO: switch between both scanlines instead of copying
++    mpInflateInBuf = new (std::nothrow) sal_uInt8[ mnScansize ];
++    mpScanCurrent = mpInflateInBuf;
++    mpScanPrior = new (std::nothrow) sal_uInt8[ mnScansize ];
++
++    if ( !mpInflateInBuf || !mpScanPrior )
++        return sal_False;
++
+     mpBmp = new Bitmap( maTargetSize, mnTargetDepth );
+     mpAcc = mpBmp->AcquireWriteAccess();
+     if( !mpAcc )
+-- 
+1.7.9.5
+
