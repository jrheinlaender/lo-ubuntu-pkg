# fails with internal cppunit:
#
# [build LNK] CppunitTest/libtest_sc_subsequent_filters_test.so
# S=/data/rene/git/LibreOffice/master && I=$S/instdir && W=$S/workdir &&  /usr/bin/ccache x86_64-linux-gnu-g++ -shared -Wl,-z,noexecstack   -Wl,-z,origin '-Wl,-rpath,$ORIGIN/../Library' -Wl,-rpath-link,$I/program -Wl,-z,defs -Wl,-rpath-link,/lib:/usr/lib -Wl,-z,combreloc  -Wl,--hash-style=gnu  -Wl,--dynamic-list-cpp-new -Wl,--dynamic-list-cpp-typeinfo -Wl,-Bsymbolic-functions  -L$W/LinkTarget/StaticLibrary -L$I/sdk/lib  -L$I/program  -L$I/program  -L$W/LinkTarget/Library -Wl,-z,relro   -L/usr/lib/x86_64-linux-gnu  -L/usr/lib/x86_64-linux-gnu  -L/usr/lib/x86_64-linux-gnu   $W/CxxObject/sc/qa/unit/subsequent_filters-test.o      -Wl,--start-group    -L$W/UnpackedTarball/cppunit/src/cppunit/.libs -lcppunit  -lxml2 -lorcus-0.12 -lorcus-parser-0.12 -lboost_filesystem  -lboost_iostreams -lz -Wl,--end-group -Wl,--no-as-needed -lmergedlo -luno_cppu -luno_cppuhelpergcc3 -lforlo -lforuilo -li18nlangtag -looxlo -luno_sal -luno_salhelpergcc3 -lsclo -lscqahelper -lsubsequenttest -ltest -lunotest -lvbahelperlo  -o $W/LinkTarget/CppunitTest/libtest_sc_subsequent_filters_test.so 
# /data/rene/git/LibreOffice/master/workdir/CxxObject/sc/qa/unit/subsequent_filters-test.o:(.data.rel.ro._ZTIN7CppUnit17AdditionalMessageE[_ZTIN7CppUnit17AdditionalMessageE]+0x10): undefined reference to `typeinfo for CppUnit::Message'
# collect2: error: ld returned 1 exit status
# /data/rene/git/LibreOffice/master/solenv/gbuild/LinkTarget.mk:598: recipe for target '/data/rene/git/LibreOffice/master/workdir/LinkTarget/CppunitTest/libtest_sc_subsequent_filters_test.so' failed
# make[4]: *** [/data/rene/git/LibreOffice/master/workdir/LinkTarget/CppunitTest/libtest_sc_subsequent_filters_test.so] Error 1
#
# interestingly, this works with system-cppunit...

diff --git a/sc/Module_sc.mk b/sc/Module_sc.mk
index ca37c6413780..6744ae54453f 100644
--- a/sc/Module_sc.mk
+++ b/sc/Module_sc.mk
@@ -35,17 +35,12 @@ endif
 ifneq ($(OS),IOS)
 $(eval $(call gb_Module_add_check_targets,sc,\
 	Library_scqahelper \
-	$(if $(and $(filter $(COM),MSC),$(MERGELIBS)),, \
-		CppunitTest_sc_ucalc) \
 	CppunitTest_sc_bugfix_test \
 	CppunitTest_sc_filters_test \
 	CppunitTest_sc_rangelst_test \
 	CppunitTest_sc_range_test \
 	CppunitTest_sc_mark_test \
 	CppunitTest_sc_core \
-	CppunitTest_sc_dataprovider \
-	CppunitTest_sc_datatransformation \
-	CppunitTest_sc_cache_test \
 ))
 
 ifneq ($(ENABLE_HEADLESS),TRUE)
@@ -59,13 +54,25 @@ endif
 $(eval $(call gb_Module_add_slowcheck_targets,sc, \
 	CppunitTest_sc_cond_format_merge \
 	CppunitTest_sc_new_cond_format_api \
-	CppunitTest_sc_subsequent_filters_test \
 	CppunitTest_sc_subsequent_export_test \
 	CppunitTest_sc_html_export_test \
 	CppunitTest_sc_copypaste \
 	CppunitTest_sc_pivottable_filters_test \
 ))
 
+ifeq ($(SYSTEM_CPPUNIT),TRUE)
+$(eval $(call gb_Module_add_check_targets,sc, \
+	$(if $(and $(filter $(COM),MSC),$(MERGELIBS)),, \
+		CppunitTest_sc_ucalc) \
+	CppunitTest_sc_dataprovider \
+	CppunitTest_sc_datatransformation \
+	CppunitTest_sc_cache_test \
+))
+$(eval $(call gb_Module_add_slowcheck_targets,sc, \
+	CppunitTest_sc_subsequent_filters_test \
+))
+endif
+
 # Various function tests fail in 32-bit linux_x86 build due to dreaded floating
 # point weirdness (x87, registers, compiler optimization, ... whatever),
 # disable them until someone finds a real cure.
diff --git a/sccomp/Module_sccomp.mk b/sccomp/Module_sccomp.mk
index ef6d47984bf2..c92afe3fbb38 100644
--- a/sccomp/Module_sccomp.mk
+++ b/sccomp/Module_sccomp.mk
@@ -29,7 +29,12 @@ $(eval $(call gb_Module_add_l10n_targets,sccomp,\
 
 $(eval $(call gb_Module_add_check_targets,sccomp,\
 	CppunitTest_sccomp_solver \
+))
+
+ifeq ($(SYSTEM_CPPUNIT),TRUE)
+$(eval $(call gb_Module_add_check_targets,sccomp,\
 	$(if $(and $(filter INTEL,$(CPUNAME)),$(filter -fsanitize=%,$(gb_CXX))),,CppunitTest_sccomp_swarmsolvertest) \
 ))
+endif
 
 # vim: set noet sw=4 ts=4:
