--- /dev/null	2011-04-24 04:52:22.984502351 +0000
+++ libreoffice-3.3.2/libreoffice-build/patches/dev300/gcc4.6.0.diff	2011-04-29 22:34:08.000000000 +0000
@@ -0,0 +1,303 @@
+diff --git basegfx/source/polygon/b2dpolygon.cxx basegfx/source/polygon/b2dpolygon.cxx
+index f88069b..4e578a9 100644
+--- basegfx/source/polygon/b2dpolygon.cxx
++++ basegfx/source/polygon/b2dpolygon.cxx
+@@ -257,6 +257,8 @@ class ControlVectorPair2D
+     basegfx::B2DVector							maNextVector;
+ 
+ public:
++    ControlVectorPair2D() {}
++
+     const basegfx::B2DVector& getPrevVector() const 
+     { 
+         return maPrevVector; 
+diff --git basegfx/source/polygon/b2dsvgpolypolygon.cxx basegfx/source/polygon/b2dsvgpolypolygon.cxx
+index 7f5ed07..51b8740 100644
+--- basegfx/source/polygon/b2dsvgpolypolygon.cxx
++++ basegfx/source/polygon/b2dsvgpolypolygon.cxx
+@@ -787,9 +787,9 @@ namespace basegfx
+                                 // (since
+                                 // createPolygonFromEllipseSegment()
+                                 // normalizes to e.g. cw arc)
+-                                const bool bFlipSegment( (bLargeArcFlag!=0) == 
+-                                    (fmod(fTheta2+2*M_PI-fTheta1,
+-                                          2*M_PI)<M_PI) );
++                                const bool bLessThanPi(fmod(fTheta2+2*M_PI-fTheta1,
++                                          2*M_PI)<M_PI);
++                                const bool bFlipSegment( (bLargeArcFlag!=0) == bLessThanPi );
+                                 if( bFlipSegment )
+                                     std::swap(fTheta1,fTheta2);
+ 
+diff --git cosv/inc/cosv/tpl/vvector.hxx cosv/inc/cosv/tpl/vvector.hxx
+index 4848d97..1903dce 100644
+--- cosv/inc/cosv/tpl/vvector.hxx
++++ cosv/inc/cosv/tpl/vvector.hxx
+@@ -132,7 +132,7 @@ class VirtualVector
+     typedef VirtualVector<XX,PTRDEL>            self;
+     typedef std::vector< DYN XX* >              impl_type;
+     typedef typename impl_type::size_type       size_type;
+-    typedef ptrdiff_t                           difference_type;
++    typedef std::ptrdiff_t                      difference_type;
+ 
+     class const_iterator;
+     class iterator;
+diff --git autodoc/source/display/idl/hi_linkhelper.hxx autodoc/source/display/idl/hi_linkhelper.hxx
+index c08be55..1cdfaa7 100644
+--- autodoc/source/display/idl/hi_linkhelper.hxx
++++ autodoc/source/display/idl/hi_linkhelper.hxx
+@@ -85,9 +85,7 @@ class LinkHelper
+     const String &      XrefsSuffix() const;                               
+                           
+   private:                                                     
+-    // DATA
+-    mutable HtmlEnvironment_Idl &
+-                        rEnv;
++    HtmlEnvironment_Idl & rEnv;
+ };     
+ 
+ inline const ary::idl::CodeEntity *          
+diff --git autodoc/inc/ary/idl/i_ce2s.hxx autodoc/inc/ary/idl/i_ce2s.hxx
+index c490980..efb2711 100644
+--- autodoc/inc/ary/idl/i_ce2s.hxx
++++ autodoc/inc/ary/idl/i_ce2s.hxx
+@@ -51,6 +51,7 @@ class Ce_2s
+ {
+   public:
+     // LIFECYCLE
++    Ce_2s() {}
+     virtual             ~Ce_2s();
+ 
+     static DYN Ce_2s *  Create_(
+diff --git unotools/inc/unotools/streamwrap.hxx unotools/inc/unotools/streamwrap.hxx
+index 80cde76..4b53500 100644
+--- unotools/inc/unotools/streamwrap.hxx
++++ unotools/inc/unotools/streamwrap.hxx
+@@ -51,7 +51,7 @@ namespace utl
+ //==================================================================
+ typedef ::cppu::WeakImplHelper1	<	stario::XInputStream
+                                 > InputStreamWrapper_Base;
+-    // needed for some compilers
++// needed for some compilers
+ /// helper class for wrapping an SvStream into an <type scope="com.sun.star.io">XInputStream</type>
+ class UNOTOOLS_DLLPUBLIC OInputStreamWrapper : public InputStreamWrapper_Base
+ {
+@@ -69,9 +69,6 @@ public:
+     OInputStreamWrapper(SvStream* pStream, sal_Bool bOwner=sal_False);
+     virtual ~OInputStreamWrapper();
+ 
+-// UNO Anbindung
+-    DECLARE_UNO3_AGG_DEFAULTS(OInputStreamWrapper, InputStreamWrapper_Base);
+-
+ // stario::XInputStream
+     virtual sal_Int32	SAL_CALL	readBytes(staruno::Sequence< sal_Int8 >& aData, sal_Int32 nBytesToRead) throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+     virtual sal_Int32	SAL_CALL	readSomeBytes(staruno::Sequence< sal_Int8 >& aData, sal_Int32 nMaxBytesToRead) throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+@@ -122,9 +119,6 @@ protected:
+ public:
+     OOutputStreamWrapper(SvStream& _rStream) :rStream(_rStream) { }
+ 
+-// UNO Anbindung
+-    DECLARE_UNO3_AGG_DEFAULTS(OOutputStreamWrapper, OutputStreamWrapper_Base);
+-
+ // stario::XOutputStream
+     virtual void SAL_CALL writeBytes(const staruno::Sequence< sal_Int8 >& aData) throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+     virtual void SAL_CALL flush() throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+diff --git lotuswordpro/source/filter/xfilter/xfparastyle.hxx lotuswordpro/source/filter/xfilter/xfparastyle.hxx
+index fde03ae..ead40ff 100644
+--- lotuswordpro/source/filter/xfilter/xfparastyle.hxx
++++ lotuswordpro/source/filter/xfilter/xfparastyle.hxx
+@@ -235,10 +235,7 @@ public:
+ 
+     sal_uInt32 GetFlag(){ return m_nFlag; }
+ 
+-    /**
+-     * @descr	return margins.
+-     */
+-    XFMargins GetMargins(){return m_aMargin;}
++    XFMargins& GetMargins(){return m_aMargin;}
+ 
+     virtual enumXFStyle	GetStyleFamily();
+ 
+diff --git chart2/source/controller/main/ChartController.hxx chart2/source/controller/main/ChartController.hxx
+index 3927da9..93b1706 100644
+--- chart2/source/controller/main/ChartController.hxx
++++ chart2/source/controller/main/ChartController.hxx
+@@ -545,7 +545,7 @@ private:
+                 TheModel* operator->() const { return m_pTheModel; }
+         private:
+             TheModel*				m_pTheModel;
+-            mutable ::osl::Mutex&	m_rModelMutex;
++            ::osl::Mutex&	m_rModelMutex;
+     };
+ 
+ private:
+diff --git writerperfect/source/filter/Style.hxx writerperfect/source/filter/Style.hxx
+index 2820415..d54f0c8 100644
+--- writerperfect/source/filter/Style.hxx
++++ writerperfect/source/filter/Style.hxx
+@@ -34,7 +34,7 @@
+ class TopLevelElementStyle
+ {
+ public:
+-    TopLevelElementStyle() : mpsMasterPageName(NULL) { }
++    TopLevelElementStyle() : mpsMasterPageName(0) { }
+     virtual ~TopLevelElementStyle() { if (mpsMasterPageName) delete mpsMasterPageName; }
+     void setMasterPageName(WPXString &sMasterPageName) { mpsMasterPageName = new WPXString(sMasterPageName); }
+     const WPXString * getMasterPageName() const { return mpsMasterPageName; }
+diff --git filter/source/xmlfilteradaptor/streamwrap.hxx filter/source/xmlfilteradaptor/streamwrap.hxx
+index 369a7bb..2a1a2ce 100644
+--- filter/source/xmlfilteradaptor/streamwrap.hxx
++++ filter/source/xmlfilteradaptor/streamwrap.hxx
+@@ -34,13 +34,6 @@
+ #include <com/sun/star/io/XSeekable.hpp>
+ #include <cppuhelper/implbase1.hxx>
+ 
+-#define DECLARE_UNO3_AGG_DEFAULTS(classname, baseclass) \
+-virtual void            SAL_CALL acquire() throw() { baseclass::acquire(); } \
+-virtual void            SAL_CALL release() throw() { baseclass::release(); }    \
+-virtual ::com::sun::star::uno::Any  SAL_CALL queryInterface(const ::com::sun::star::uno::Type& _rType) throw (::com::sun::star::uno::RuntimeException) \
+-{ return baseclass::queryInterface(_rType); } \
+-void            SAL_CALL PUT_SEMICOLON_AT_THE_END()
+-
+ namespace osl
+ {
+     class File;
+@@ -63,9 +56,6 @@ class OOutputStreamWrapper : public OutputStreamWrapper_Base
+ public:
+     OOutputStreamWrapper(::osl::File& _rStream) :rStream(_rStream) { }
+ 
+-// UNO Anbindung
+-    DECLARE_UNO3_AGG_DEFAULTS(OOutputStreamWrapper, OutputStreamWrapper_Base);
+-
+ // stario::XOutputStream
+     virtual void SAL_CALL writeBytes(const staruno::Sequence< sal_Int8 >& aData) throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+     virtual void SAL_CALL flush() throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+diff --git comphelper/inc/comphelper/oslfile2streamwrap.hxx comphelper/inc/comphelper/oslfile2streamwrap.hxx
+index d636666..4d6c454 100644
+--- comphelper/inc/comphelper/oslfile2streamwrap.hxx
++++ comphelper/inc/comphelper/oslfile2streamwrap.hxx
+@@ -44,10 +44,7 @@ namespace comphelper
+ // FmUnoIOStream,
+ // stream zum schreiben un lesen von Daten, basieren  auf File
+ //==================================================================
+-struct InputStreamWrapper_Base : public ::cppu::WeakImplHelper1<stario::XInputStream> 
+-{};
+-
+-class COMPHELPER_DLLPUBLIC OSLInputStreamWrapper : public InputStreamWrapper_Base
++class COMPHELPER_DLLPUBLIC OSLInputStreamWrapper : public ::cppu::WeakImplHelper1<stario::XInputStream>
+ {
+     ::osl::Mutex	m_aMutex;
+     ::osl::File*	m_pFile;
+@@ -58,14 +55,6 @@ public:
+     OSLInputStreamWrapper(::osl::File* pStream, sal_Bool bOwner=sal_False);
+     virtual ~OSLInputStreamWrapper();
+ 
+-// UNO Anbindung
+-    virtual void			SAL_CALL acquire() throw()
+-        { InputStreamWrapper_Base::acquire(); }
+-    virtual void			SAL_CALL release() throw()
+-        { InputStreamWrapper_Base::release(); }
+-    virtual ::com::sun::star::uno::Any	SAL_CALL queryInterface(const ::com::sun::star::uno::Type& _rType) throw (::com::sun::star::uno::RuntimeException)
+-        { return InputStreamWrapper_Base::queryInterface(_rType); }
+-
+ // stario::XInputStream
+     virtual sal_Int32	SAL_CALL	readBytes(staruno::Sequence< sal_Int8 >& aData, sal_Int32 nBytesToRead) throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+     virtual sal_Int32	SAL_CALL	readSomeBytes(staruno::Sequence< sal_Int8 >& aData, sal_Int32 nMaxBytesToRead) throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+@@ -78,24 +67,13 @@ public:
+ // FmUnoOutStream,
+ // Datensenke fuer Files
+ //==================================================================
+-struct OutputStreamWrapper_Base : public ::cppu::WeakImplHelper1<stario::XOutputStream> 
+-{};
+-
+-class COMPHELPER_DLLPUBLIC OSLOutputStreamWrapper : public OutputStreamWrapper_Base
++class COMPHELPER_DLLPUBLIC OSLOutputStreamWrapper : public ::cppu::WeakImplHelper1<stario::XOutputStream>
+ {
+     ::osl::File&		rFile;
+ 
+ public:
+     OSLOutputStreamWrapper(::osl::File& _rFile) :rFile(_rFile) { }
+ 
+-// UNO Anbindung
+-    virtual void			SAL_CALL acquire() throw()
+-        { OutputStreamWrapper_Base::acquire(); }
+-    virtual void			SAL_CALL release() throw()
+-        { OutputStreamWrapper_Base::release(); }
+-    virtual ::com::sun::star::uno::Any	SAL_CALL queryInterface(const ::com::sun::star::uno::Type& _rType) throw (::com::sun::star::uno::RuntimeException)
+-        { return OutputStreamWrapper_Base::queryInterface(_rType); }
+-
+ // stario::XOutputStream
+     virtual void SAL_CALL writeBytes(const staruno::Sequence< sal_Int8 >& aData) throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+     virtual void SAL_CALL flush() throw(stario::NotConnectedException, stario::BufferSizeExceededException, staruno::RuntimeException);
+diff --git sc/source/filter/inc/xeroot.hxx sc/source/filter/inc/xeroot.hxx
+index cac22f4..dc8652e 100644
+--- sc/source/filter/inc/xeroot.hxx
++++ sc/source/filter/inc/xeroot.hxx
+@@ -168,7 +168,7 @@ private:
+     XclExpRootData::XclExpLinkMgrRef GetLocalLinkMgrRef() const;
+ 
+ private:
+-    mutable XclExpRootData& mrExpData;      /// Reference to the global export data struct.
++    XclExpRootData& mrExpData;      /// Reference to the global export data struct.
+ };
+ 
+ // ============================================================================
+diff --git sc/source/filter/inc/xiroot.hxx sc/source/filter/inc/xiroot.hxx
+index 1b4153e..83953e3 100644
+--- sc/source/filter/inc/xiroot.hxx
++++ sc/source/filter/inc/xiroot.hxx
+@@ -218,7 +218,7 @@ public:
+     void                ReadCodeName( XclImpStream& rStrm, bool bGlobals );
+ 
+ private:
+-    mutable XclImpRootData& mrImpData;      /// Reference to the global import data struct.
++    XclImpRootData& mrImpData;      /// Reference to the global import data struct.
+ };
+ 
+ // ============================================================================
+diff --git sc/source/filter/inc/xlroot.hxx sc/source/filter/inc/xlroot.hxx
+index 5e132fa..3f9f6fa 100644
+--- sc/source/filter/inc/xlroot.hxx
++++ sc/source/filter/inc/xlroot.hxx
+@@ -285,7 +285,7 @@ public:
+     inline void         IncCurrScTab() { ++mrData.mnScTab; }
+ 
+ private:
+-    mutable XclRootData& mrData;        /// Reference to the global data struct.
++    XclRootData& mrData;        /// Reference to the global data struct.
+ };
+ 
+ // ============================================================================
+diff --git dbaccess/source/core/dataaccess/documentdefinition.hxx dbaccess/source/core/dataaccess/documentdefinition.hxx
+index f74b6ac..e51b959 100644
+--- dbaccess/source/core/dataaccess/documentdefinition.hxx
++++ dbaccess/source/core/dataaccess/documentdefinition.hxx
+@@ -374,7 +374,7 @@ private:
+             ODocumentDefinition&            m_rDocumentDefinition;
+     const   ::com::sun::star::uno::Any      m_aOldValue;
+     const   ::com::sun::star::uno::Any      m_aNewValue;
+-    mutable ::osl::ResettableMutexGuard&    m_rClearForNotify;
++    ::osl::ResettableMutexGuard&    m_rClearForNotify;
+ 
+     void    impl_fireEvent_throw( const sal_Bool i_bVetoable );
+ };
+diff --git hwpfilter/source/list.hxx hwpfilter/source/list.hxx
+index 043a214..02f6e00 100644
+--- hwpfilter/source/list.hxx
++++ hwpfilter/source/list.hxx
+@@ -41,6 +41,7 @@
+  * re-implements the same functionality, based on the STL.
+  */
+ 
++#include <cstddef>
+ #include <vector>
+ 
+ template<class T>
+--- cli_ure/util/makefile.pmk-old	2011-04-30 12:45:51.000000000 +0000
++++ cli_ure/util/makefile.pmk	2011-04-30 12:45:55.000000000 +0000
+@@ -29,7 +29,6 @@
+ .IF "$(L10N_framework)"==""
+ .IF "$(COM)$(COMEX)" == "MSC11" || "$(COM)$(COMEX)"== "MSC10" || "$(ENABLE_MONO)" == "YES"
+ BUILD_FOR_CLI = "true"
+-CFLAGSENABLESYMBOLS:=-Z7
+ .ENDIF
+ .ENDIF			# "L10N_framework"==""
--- libreoffice-3.3.2/libreoffice-build/patches/dev300/apply-old	2011-04-30 11:42:54.000000000 +0000
+++ libreoffice-3.3.2/libreoffice-build/patches/dev300/apply	2011-04-30 11:43:23.000000000 +0000
@@ -23,7 +23,7 @@
 LinuxCommon : Common, Defaults, FontConfigTemporaryHacks, \
 	      FedoraLinuxOnlyFixes, LinuxOnly, msaccess, OpenGLTransitions, \
 	      CliMonoCommon, Mono, MonoComp, AddressBooks, QuickStarter, KDE4, Netbook, \
-	      GlobalNSPluginSupport
+	      GlobalNSPluginSupport, Gcc46
 MacOSXCommon : Common, Defaults
 Win32Common : Common, Defaults, Win32Only, CliMonoCommon, CliComponent, NotDebian
 # Experimental sections
@@ -2380,3 +2380,7 @@
 [ PowerPC ]
 ppc64-openjdk.diff
 no-minimaltoc.diff
+
+[ Gcc46 ]
+gcc4.6.0.diff
+
