From 4ed0eaca6c14aeb652cbebe18081cc9e7e1444ac Mon Sep 17 00:00:00 2001
From: Noel Power <noel.power@novell.com>
Date: Wed, 25 Jul 2012 17:23:38 +0000
Subject: hopefully more successful attempt to solve fdo#50304

Change-Id: I86dfff571c14bce97d0851b4093dbc376d8b6ea4
---
diff --git a/sc/source/filter/excel/xetable.cxx b/sc/source/filter/excel/xetable.cxx
index e3967f2..d611077 100644
--- a/sc/source/filter/excel/xetable.cxx
+++ b/sc/source/filter/excel/xetable.cxx
@@ -2146,14 +2146,26 @@ XclExpDimensions* XclExpRowBuffer::GetDimensions()
 
 XclExpRow& XclExpRowBuffer::GetOrCreateRow( sal_uInt32 nXclRow, bool bRowAlwaysEmpty )
 {
-    RowMap::iterator itr = maRowMap.find(nXclRow);
-    if (itr == maRowMap.end())
+    RowMap::iterator itr = maRowMap.begin();
+    ScDocument& rDoc = GetRoot().GetDoc();
+    SCTAB nScTab = GetRoot().GetCurrScTab();
+    for ( size_t nFrom = maRowMap.size(); nFrom <= nXclRow; ++nFrom )
     {
-        RowRef p(new XclExpRow(GetRoot(), nXclRow, maOutlineBfr, bRowAlwaysEmpty));
-        ::std::pair<RowMap::iterator, bool> r = maRowMap.insert(RowMap::value_type(nXclRow, p));
-        itr = r.first;
+        itr = maRowMap.find(nFrom);
+        if ( itr == maRowMap.end() )
+        {
+            // only create RowMap entries for rows that differ from previous,
+            // or if it is the desired row
+            if ( !nFrom || ( nFrom == nXclRow ) || ( nFrom && ( rDoc.GetRowHeight(nFrom, nScTab, false) != rDoc.GetRowHeight(nFrom-1, nScTab, false) ) ) )
+            {
+                RowRef p(new XclExpRow(GetRoot(), nFrom, maOutlineBfr, bRowAlwaysEmpty));
+                maRowMap.insert(RowMap::value_type(nFrom, p));
+            }
+        }
     }
+    itr = maRowMap.find(nXclRow);
     return *itr->second;
+
 }
 
 // ============================================================================
--
cgit v0.9.0.2-2-gbebe
