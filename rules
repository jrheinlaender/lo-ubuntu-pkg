#!/usr/bin/make -f
################################################################################
# LibreOffice source package rules file
#
# Please see debian/README for detailed documentation about the build system, and
# how to build LibreOffice.
################################################################################
# Authors:
# Chris Halls <halls@debian.org>
# Rene Engelhard <rene@debian.org>
# Copyright 2002-2011 Software in the Public Interest, Inc.
# Portions Copyright 2010 Canonical Ltd. Author: Matthias Klose
# Licensed under the GNU General Public License, version 2.  See the file
# /usr/share/common-licenses/GPL or <http://www.gnu.org/copyleft/gpl.txt>.
################################################################################

vafilt = $(subst $(2)=,,$(filter $(2)=%,$(1)))
CHANGELOG_VARS := $(shell dpkg-parsechangelog | \
        sed -n 's/ /_/g;/^[^_]/s/^\([^:]*\):_\(.*\)/\1=\2/p')
PKGSOURCE := $(call vafilt,$(CHANGELOG_VARS),Source)
SOURCE_VERSION:=$(shell head -1 debian/changelog | cut -d\( -f2 | cut -d\) -f1)
UPSTREAM_VERSION:=$(shell echo "$(SOURCE_VERSION)"| cut -d: -f2 | cut -d- -f1)
BASE_VERSION:=$(shell echo $(SOURCE_VERSION) | cut -d: -f1):$(UPSTREAM_VERSION)
BINARY_VERSION=$(SOURCE_VERSION)
#BINARY_VERSION=1:2.4.0-$(shell dpkg-parsechangelog  | grep urgency \
	| awk '{print $$2}' | sed -e s/"("// -e s/")"// | cut -d"-" -f2)
HELP_L10N_VIRTUAL_VERSION:=$(shell echo $(UPSTREAM_VERSION) | cut -d: -f2 | tr [~] [\\-])
#HELP_L10N_VIRTUAL_VERSION:=3.3
#VER:=3
OOVER:=3.3
BASIS_VERSION:=$(OOVER)
NEXT_OOVER:=$(shell echo "$(OOVER) + 0.1" | bc)
NEXT_BASIS_VERSION:=$(NEXT_OOVER)
NEXT_BASE_VERSION:=1:$(NEXT_OOVER)

ARCH_INDEP_PACKAGES := $(shell dh_listpackages -i)
ARCH_DEP_PACKAGES := $(shell dh_listpackages -s)
PACKAGES := $(ARCH_INDEP_PACKAGES) $(ARCH_DEP_PACKAGES)

DPKG_VARS := $(shell dpkg-architecture)
OS := $(call vafilt,$(DPKG_VARS),DEB_HOST_ARCH_OS)
ARCH := $(call vafilt,$(DPKG_VARS),DEB_HOST_ARCH)
DIST := $(shell if [ -x /usr/bin/dpkg-vendor ]; then dpkg-vendor --query Vendor; else lsb_release -is; fi)
DISTREL := $(shell lsb_release -cs)
DEB_HOST_GNU_TYPE   ?= $(call vafilt,$(DPKG_VARS),DEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(call vafilt,$(DPKG_VARS),DEB_BUILD_GNU_TYPE)
SHELL:=/bin/bash

SYSTEM_GCC_VERSION = $(shell gcc --version | sed -n '/^gcc/s/.*\(.\..\)\..$$/\1/p')

# Debian buildds run as user `buildd', other are using /CurrentlyBuilding
ON_BUILDD := $(shell [ "`whoami`" = buildd -o -f /CurrentlyBuilding ] && echo y || echo n)
ON_BUILDD_VERBOSITY :=

PKGDIR:=debian/libreoffice$(VER)
OODIRNAME=libreoffice$(VER)
OOBRANDDIR:=usr/lib/$(OODIRNAME)
OOBASISDIR:=$(OOBRANDDIR)/basis$(BASIS_VERSION)
OOSDKDIR:=$(OOBASISDIR)/sdk
OOUREDIR:=usr/lib/ure
# compatability
OODIR:=$(OOBASISDIR)

# Figure out who's building this package.
OOO_VENDOR:=The Document Foundation/Debian
ifeq "$(DIST)" "Ubuntu"
OOO_VENDOR:=The Document Foundation, Debian and Ubuntu
endif
export OOO_VENDOR

# debhelper
export DH_OPTIONS
export DH_ALWAYS_EXCLUDE=CVS:.svn:.bzr:.git
#export DH_VERBOSE=1
# quilt
export QUILT_PATCHES=debian/patches
export QUILT_OPTIONS="-p1 -F0"

# work around tcsh bugs.debian.org/339034: tcsh: Unknown colorls variable `su'
unexport LS_COLORS

MWS=OOO330
MILESTONE=m19
TAG=$(shell echo $(MWS) | tr A-Z a-z)-$(MILESTONE)
GIT_TAG=$(MWS)_$(MILESTONE)
OOO_BUILD_BRANCH=libreoffice-3-3-1
OOO_BUILD_VERSION=3.3.1.2
# in ooo-build releases the same as OOO_BUILD_VERSION
OOO_BUILD_TARBALL_VERSION=$(OOO_BUILD_VERSION)
OOO_BUILD_TAG=libreoffice-$(OOO_BUILD_TARBALL_VERSION)
OOO_BUILD_TREE=libreoffice-build
SOURCE_TREE=$(OOO_BUILD_TREE)/build/libreoffice-$(OOO_BUILD_TARBALL_VERSION)
STAMP_DIR=debian/stampdir
TARFILE_LOCATION=$(CURDIR)/ext-sources
export TARFILE_LOCATION
USE_SOURCE_TARBALLS=y

ifeq "$(DISTREL)" "lenny"
 LENNY_BACKPORT=y
endif

ifeq "$(DISTREL)" "squeeze"
 SQUEEZE_BACKPORT=y
endif

#########
# Default package configuration
#
OOO_ARCHS = alpha amd64 armel armhf hppa i386 ia64 mips mipsel powerpc powerpcspe ppc64 s390 s390x sparc kfreebsd-amd64 kfreebsd-i386
PATCHSET=$(DIST)
BUILD_DEPS=

# These are components which can be built from internal copies, or used from the
# distribution. See configure --help for valid values (--with-system-<value>).
SYSTEM_STUFF = dicts

BUILD_PYUNO=y
PYTHON_HELPER=dh_pycentral
# THIS IS ONLY FOR TESTING. When building against a specified pythonX.Y
# this will work inside OOo but *not* from outside OOo unless the user
# uses pythonX.Y directly (and the dh_pycentral-created dependencies allow
# also the non-working default python then) - see e.g. #587402
PYTHON_VERSION=current
ifeq "$(PYTHON_VERSION)" "current"
  PYTHON=python
export PYTHON=python
else
  PYTHON=python$(PYTHON_VERSION)
export PYTHON=python$(PYTHON_VERSION)
endif
PACKAGE_TTF_OPENSYMBOL=y
ifeq (,$(filter $(ARCH), powerpc powerpcspe ppc64))
  BUILD_JARS_NATIVE=y
endif
BUILD_BINFILTERS=y
BUILD_ONLY_EN_US=n
ENABLE_JAVA=y
ifeq "$(ENABLE_JAVA)" "y"
  JDK=openjdk
  ifneq (,$(filter hppa ia64 mips% kfreebsd%, $(ARCH)))
    JDK=gcj-jdk
  endif
endif
ENABLE_MONO=y
MONO2=y
ifeq "$(MONO2)" "y"
  MONO_MINVER= (>= 2.4.2.3)
else
  MONO_MINVER= (>= 1.2.3)
endif
SYSTEM_STUFF += hunspell
HUNSPELL_MIN_VER= (>= 1.1.5-2)
SYSTEM_STUFF += altlinuxhyph
USE_LIBHYPHEN=y
LIBALTLINUXHYPH_MINVER= (>= 0.1.1-11)
LIBHYPHEN_MINVER= (>= 2.4)
USE_AGG=n
# SYSTEM_STUFF += agg
USE_STLPORT=n
USE_SYSTEM_STLPORT=y
SYSTEM_STUFF += boost
BOOST_VERSION=default
ifeq "$(BOOST_VERSION)" "default"
  BOOST_MINVER= (>= 1.38)
endif
ifeq "$(BOOST_VERSION)" "1.39"
  BOOST_MINVER= (>= 1.39.0-2)
endif
SYSTEM_STUFF += mdds
SYSTEM_STUFF += vigra
USE_EXTERNAL_CXXLIBS=y
#SYSTEM_STUFF += sablot
SYSTEM_STUFF += libxslt
SYSTEM_STUFF += mythes
SYSTEM_STUFF += icu
ICU_MINVER= (>= 4.0)
SYSTEM_STUFF += libwpd libwpg libwps
#SYSTEM_STUFF += xmlsec
BUILD_CAIROCANVAS=y
SYSTEM_STUFF += cairo
CAIRO_FONTS_PATCH=y
BUILD_KDE=y
KDE_VER=4
ifeq "$(BUILD_KDE)" "y"
  ifeq "$(KDE_VER)" "3"
    ENABLE_KDEAB=y
  else
    ENABLE_KDEAB=n
  endif
endif
ifeq "$(KDE_VER)" "3"
  KDELIBS_MINVER= (>= 4:3.4.3-2)
endif
ifeq "$(KDE_VER)" "4"
  QT_MINVER= (>= 4.5)
  # somehow lenny-backport picks this up although
  # KDE is 3...
  ifneq "$(LENNY_BACKPORT)" "y"
    KDELIBS_MINVER= (>= 4:4.3.4)
  endif
endif  
BUILD_DBG_PACKAGE=y
SYSTEM_STUFF += beanshell
SYSTEM_STUFF += hsqldb
HSQLDB_MINVER= (>> 1.8.0.10)
HSQLDB_TOONEWVER=1.8.1
# disabled because system-saxon breaks all kinds exports using XSLT transforms
# (e.g. M$ Word/Excel 2003 XML, Mediawiki, XHTML, UOF, ...)
# It does *NOT* fail with _plain_ saxon 9.0.0.8 built with OOos build.xml
# for UOF, but still for e.g. M$.
#SYSTEM_STUFF += saxon
SYSTEM_STUFF += lucene
SYSTEM_STUFF += lpsolve
USE_SHARED_LPSOLVE=y
LPSOLVE_MIN_VERSION= (>= 5.5.0.13-5+b1)
USE_DBUS=y
USE_GSTREAMER=y
SYSTEM_STUFF += neon
NEON_SECTYPE=gnutls
NEONSONR=27
SYSTEM_STUFF += redland
USE_OOO_BUILD_DESKTOPS=n
PACKAGE_SDK=y
ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(JDK)" "openjdk"
    RUN_SMOKETEST=y
    ifneq (,$(findstring $(ARCH),$(OOO_STLPORT_ARCHS)))
      RUN_SUBSEQUENT_TESTS=y
    else
      RUN_SUBSEQUENT_TESTS=n
    endif
  else
    ifneq ($(ON_BUILDD),y)
      RUN_SMOKETEST=n
      RUN_SUBSEQUENT_TESTS=n
    endif
  endif
else
  RUN_SMOKETEST=n
  RUN_SUBSQUENT_TESTS=n
endif
# "Unfortunately, running the unoapi tests is still not stable enough to give
# useful results. Therefore, running subsequenttests has been disabled in the
# build bots for now. Making the tests sufficiently stable is ongoing work. "
# (http://wiki.services.openoffice.org/wiki/Test_Cleanup)
ENABLE_JUNIT4=n
JUNIT_MIN_VER= (>= 4.8.2-2)
USE_LIBCURL4=y
CURL_SECTYPE=gnutls
USE_SYSTEM_DMAKE=y
USE_LIBSUITESPARSE=y
SUITESPARSE_MIN_VERSION= (>= 1:3.4.0)
PARALLEL_BUILD=n
MOZILLA=libxul
ENABLE_LDAP=y
USE_OPENLDAP=y
ENABLE_OPENGL=y
SYSTEM_STUFF += openssl
NEW_DPKG_SHLIBDEPS=y
ifeq "$(ENABLE_JAVA)" "y"
  ENABLE_REPORTDESIGN=y
  ENABLE_MEDIAWIKI=y
  SYSTEM_STUFF += jfreereport apache-commons
else
  ENABLE_REPORTDESIGN=n
  ENABLE_MEDIAWIKI=n
endif
ENABLE_SDBC_POSTGRESQL=y
ENABLE_MINIMIZER=y
ENABLE_PRESENTER_CONSOLE=y
ENABLE_PDFIMPORT=y
BUILD_GTK=y
ENABLE_EVO2=n
ENABLE_GVFS=y
ENABLE_GCONF=y
# broken!
ENABLE_GIO=n
ENABLE_RANDR=y
ENABLE_LAYOUT=n
ifeq "$(BUILD_GTK)" "y"
  PACKAGE_NPSOPLUGIN=y
endif
PACKAGE_BASE=y
ENABLE_GRAPHITE=y
SYSTEM_STUFF += graphite
ALLOC=system
USE_SYSTEM_TEXTCAT_DATA=y
SYSTEM_STUFF += cppunit

# when we have a package we want to have to be installed on older things with some older
# C++ ABI (like it was the case with libreoffice2), we need to set this. Don't touch
# otherwise
INTERNAL_STDLIBS=n
DEFAULT_IMAGE=galaxy
IMAGES:=$(DEFAULT_IMAGE) crystal hicontrast tango oxygen classic
ENABLE_MYSQLNATIVE=y
# cannot be disabled, unless you have a internal MySQL somewhere :-)
SYSTEM_STUFF += mysql mysql-cppconn
MYSQLCPPCONN_MINVER= (>= 1.1.0~r791)
DICT_DIR=/usr/share/hunspell
HYPH_DIR=/usr/share/hyphen
THES_DIR=/usr/share/mythes

USE_BZIP_COMPRESS=y

# Default flags to pass to configure of ooo-build
CONFIGURE_FLAGS= --disable-post-install-scripts \
                 --with-tag=$(TAG) \
                --with-distro=$(PATCHSET) \
		--with-vendor='$(OOO_VENDOR)' \
                --enable-package-directories \
                --with-installed-ooo-dirname=$(OODIRNAME) \
                --prefix=/usr --mandir=/usr/share/man \
                --with-docdir=/usr/share/doc/libreoffice \
                --with-build-version="tag $(OOO_BUILD_TAG), $(DIST) package $(BINARY_VERSION)" \
                --disable-strip \
                --enable-lockdown \
		--with-drink=coffee \
		--libdir=/usr/lib \
		--host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) \
		--with-additional-sections="$(ADDITIONAL_SECTIONS)" \
		--enable-broffice \
		--with-extension-integration

ifeq "$(USE_SOURCE_TARBALLS)" "y"
  CONFIGURE_FLAGS += --without-git
else
  CONFIGURE_FLAGS += --with-git
endif

# distro-configs is too late; it already gets searched in unpack
# when we don't do that here, too.
CONFIGURE_FLAGS += --disable-access

CONFIGURE_FLAGS += --with-alloc=$(ALLOC)

#############
# Architecture-specific changes

# helper to generate no_archs macros (pass name of source macro)
define gen_no_archs
  _no_arch_macro = $(subst OOO_,OOO_NO_,$1)
  _no_arch_tmp_$1 = $$(foreach _a,$$(filter-out $$(call $1),$(OOO_ARCHS)),!$$(_a))
  $$(_no_arch_macro) = $$(if $$(_no_arch_tmp_$1),$$(_empty) [$$(_no_arch_tmp_$1)])
endef

LIBSUFFIX := $(shell grep LIBSUFFIX debian/scripts/vars.$(ARCH) | cut -d"=" -f2)
PLATFORMID := $(shell grep PLATFORMID debian/scripts/vars.$(ARCH) | cut -d"=" -f2)

# ./configure defaults to STLport on i386 and we should keep it for
# ABI-compatability
OOO_STLPORT_ARCHS= i386
ifeq "$(ARCH)" "i386"
	USE_STLPORT=y
endif


# ARM target
ifneq "$(DIST)" "Ubuntu"
# lp#725763 and lp#726529
# We dont use the arm optimzations patch on Natty
# for >=3.4 the patch is already upstream
# left here for now to document the intended change from debian
  ifeq "$(ARCH)" "armel"
	CONFIGURE_FLAGS += --with-arm-target=4
  endif
  ifeq "$(ARCH)" "armhf"
	CONFIGURE_FLAGS += --with-arm-target=7
  endif
endif

ifeq "$(ENABLE_OPENGL)" "y"
  # doesn't make that much sense on armel and mips(el), does it? :)
  OOO_OGLTRANS_ARCHS = $(filter-out armel mips%, $(OOO_ARCHS))
  ifeq (,$(filter $(ARCH),$(OOO_OGLTRANS_ARCHS)))
       ENABLE_OPENGL=n
  endif
  $(eval $(call gen_no_archs, OOO_OGLTRANS_ARCHS))
endif

OOO_64BIT_ARCHS = $(filter alpha amd64 ia64 kfreebsd-amd64 ppc64 s390x, $(OOO_ARCHS))

# Java...
OOO_JAVA_ARCHS = $(OOO_ARCHS)
$(eval $(call gen_no_archs, OOO_JAVA_ARCHS))

# gcj does not work on ppc, so no need to build -gcj for it
OOO_GCJ_ARCHS = $(filter-out powerpc powerpcspe ppc64, $(OOO_JAVA_ARCHS))
$(eval $(call gen_no_archs, OOO_GCJ_ARCHS))

OOO_GCJ_JDK_ARCHS := hppa ia64 kfreebsd-i386 kfreebsd-amd64 mips mipsel
OOO_OPENJDK_ARCHS := $(filter-out $(OOO_GCJ_JDK_ARCHS),$(OOO_JAVA_ARCHS))
$(eval $(call gen_no_archs, OOO_OPENJDK_ARCHS))

OOO_ARCH_DEP_EXTENSIONS_ARCHS := $(OOO_ARCHS)

OOO_BASE_ARCHS := $(filter-out armel,$(OOO_JAVA_ARCHS))
$(eval $(call gen_no_archs, OOO_BASE_ARCHS))
OOO_REPORTDESIGN_ARCHS := $(filter-out armel,$(OOO_JAVA_ARCHS))
$(eval $(call gen_no_archs, OOO_REPORTDESIGN_ARCHS))

ifneq (,$(findstring $(ARCH),$(OOO_NO_BASE_ARCHS)))
	PACKAGE_BASE=n
	ENABLE_SDBC_POSTGRESQL=n
	ENABLE_MYSQLNATIVE=n
	ENABLE_EVO2=n
	ENABLE_KDEAB=n
	ENABLE_REPORTDESIGN=n
	DEBHELPER_OPTIONS += -Nlibreoffice$(VER)-base libreoffice$(VER)-base-core
	DEBHELPER_OPTIONS += -Nlibreoffice$(VER)-evolution -Nlibreoffice$(VER)-kab
	DEBHELPER_OPTIONS += -Nlibreoffice$(VER)-sdbc-postgresql -Nlibreoffice$(VER)-mysql-connector
	DEBHELPER_OPTIONS += -Nlibreoffice$(VER)-report-builder-bin -Nlibreoffice$(VER)-report-builder
endif

ifeq (,$(findstring $(ARCH),$(OOO_ARCH_DEP_EXTENSIONS_ARCHS)))
	ENABLE_MINIMIZER=n
	ENABLE_PDFIMPORT=n
	ENABLE_PRESENTER_CONSOLE=n
	ENABLE_SDBC_POSTGRESQL=n
	ENABLE_MYSQLNATIVE=n
endif

ifeq (,$(filter $(ARCH),$(OOO_JAVA_ARCHS)))
	ENABLE_JAVA=n
	ENABLE_REPORTDESIGN=n
	ENABLE_MEDIAWIKI=n
endif

ifeq "$(ENABLE_MONO)" "y"
# mono
# ppc fails (#412967), arm(el), too
OOO_MONO_ARCHS = $(filter amd64 i386 ia64 kfreebsd-amd64 kfreebsd-i386, $(OOO_ARCHS))
ifeq (,$(filter $(ARCH),$(OOO_MONO_ARCHS)))
       ENABLE_MONO=n
endif
else
OOO_MONO_ARCHS=
endif

ifeq "$(PACKAGE_NPSOPLUGIN)" "y"
OOO_NPSOPLUGIN_ARCHS = $(OOO_ARCHS)
else
OOO_NPSOPLUGIN_ARCHS=
endif

# builds long and is for legacy filters. probably not needed on {arm,mips}{,el}
ifneq (,$(filter arm% mips% m68k, $(ARCH)))
	BUILD_BINFILTERS=n
endif
OOO_BINFILTER_ARCHS:=$(filter-out arm% mips% m68k, $(OOO_ARCHS))

#############
# Distro-specific overrides

# Debian
ifeq "$(DIST)" "Debian"
  # we don't need to build all languages and the thesaurus on the buildds;
  # they do binary-only builds anyway
  ifeq ($(ON_BUILDD),y)
       BUILD_ONLY_EN_US=y
  endif
endif

# Debian Lenny
ifeq "$(LENNY_BACKPORT)" "y"
  BUGS=mailto:debian-backports@lists.debian.org
  SYSTEM_STUFF := $(filter-out boost icu jfreereport libwpd libwpg libwps lucene mdds redland, $(SYSTEM_STUFF))
  MONO_MINVER= (>= 1.2.3)
  MONO2=n
  LPSOLVE_MIN_VERSION= (>= 5.5.0.10-10)
  SUITESPARSE_MIN_VERSION= (>= 3.1.0)
  BUILD_KDE=y
ifeq "$(BUILD_KDE)" "y"
  ENABLE_KDEAB=y
endif
  KDE_VER=3
  CURL_SECTYPE=openssl
  HSQLDB_MINVER= (>> 1.8.0.9)
ifneq (,$(filter ia64 mips% kfreebsd%, $(ARCH)))
  JDK=java-gcj-compat-dev
endif
  DICT_DIR=/usr/share/myspell/dicts
  HYPH_DIR=/usr/share/myspell/dicts
  THES_DIR=/usr/share/myspell/dicts
  MOZILLA=iceape
  # only works with system-mysqlcppconn on lenny (the thing has a hardoced
  # so.16). And mysql-connector-c++ is not in lenny.
  ENABLE_MYSQLNATIVE=n
  USE_SYSTEM_TEXTCAT_DATA=n
  ENABLE_GCONF=n
endif

# Debian Squeeze
ifeq "$(SQUEEZE_BACKPORT)" "y"
  BUGS=mailto:debian-backports@lists.debian.org
  SYSTEM_STUFF := $(filter-out libwpd libwpg libwps mythes, $(SYSTEM_STUFF))
  JUNIT_MIN_VER=
endif

# Ubuntu
ifeq "$(DIST)" "Ubuntu"
  L10N_SEPARATE_SOURCE=y
  USE_COMMON_DOCDIR=y
  IMAGES += human
  ON_BUILDD_VERBOSITY := true
  ifeq "$(PKGSOURCE)" "libreoffice$(VER)"
    BUILD_ONLY_EN_US=y
  endif
  PATCHSET=$(DIST)$(shell perl -e 'print ucfirst("$(DISTREL)");')

  USE_LZMA_COMPRESS=$(if $(filter-out armel,$(ARCH)),y,n)

  CONFIGURE_FLAGS += --with-openldap
  CONFIGURE_FLAGS += --with-system-python

  ifneq (,$(filter $(DISTREL),dapper hardy jaunty karmic lucid maverick))
    SYSTEM_STUFF := $(filter-out libwpd libwpg libwps, $(SYSTEM_STUFF))
  endif

  # Build with -Os apart from ARM to avoid GCC register spill errors
  ifneq (,$(filter $(DISTREL),lucid maverick))
    ifneq (,$(filter $(ARCH), arm armel))
      export ICU_ARCH_FLAGS = -Os
    endif
  endif

  ifeq ($(DISTREL),natty)
    SYSTEM_STUFF := $(filter-out lucene, $(SYSTEM_STUFF))
    # FIXME: smoketest fails, but we need the indep packages for the other archs
    # disabling for all archs to get rid of epm dependency
    #ifneq (,$(filter $(ARCH),armel i386))
      RUN_SMOKETEST=n
    #endif
  endif

  ifeq ($(DISTREL),maverick)
    ifneq (,$(filter $(ARCH),armel i386))
      RUN_SMOKETEST=n
    endif
  endif

  ifeq ($(DISTREL),lucid)
    SYSTEM_STUFF := $(filter-out mdds mythes, $(SYSTEM_STUFF))
    BOOST_VERSION=1.40
    BOOST_MINVER=(>= 1.40.0)
    USE_SYSTEM_TEXTCAT_DATA=n
    CONFIGURE_FLAGS += --with-linker-hash-style=gnu
    # LP: #696299
    BUILD_KDE=n
    CONFIGURE_FLAGS += --disable-kde --disable-kde4
    ifneq (,$(filter $(ARCH),armel))
      RUN_SMOKETEST=n
    endif
  endif

endif

ifeq "$(L10N_SEPARATE_SOURCE)" "y"
  ifeq "$(PKGSOURCE)" "libreoffice$(VER)"
    BUILD_ONLY_EN_US=y
  else
    L10N_COMMON_DEPENDS = libreoffice$(VER)-l10n-common
    export NO_PKG_MANGLE=go-away
  endif
endif

CONFIGURE_FLAGS += $(foreach i, $(SYSTEM_STUFF),--with-system-$(i))

CC_PREFIX:=$(shell gcc -dumpmachine)-

ifeq (s390,$(findstring s390,$(OOO_ARCHS)))
	BUILD_DEPS += , g++ (>> 4.3.0) [s390], gcc (>> 4.3.0) [s390]
endif
ifeq "$(SYSTEM_GCC_VERSION)" "4.4"
  ifeq (armel,$(findstring armel,$(OOO_ARCHS)))
	BUILD_DEPS += , g++-4.4 (>= 4.4.2-5) [armel]
  endif
endif

# Note that this does *NOT* only affect the mozilla plugin but also
# stuff like the xmlsecurity (which uses nss). For the plugin only,
# change the OOO_NPSOPLUGIN_ARCHS
OOO_MOZILLA_ARCHS = $(filter-out nothing, $(OOO_ARCHS))
$(eval $(call gen_no_archs, OOO_MOZILLA_ARCHS))

ifeq "$(USE_SOURCE_TARBALLS)" "n"
	BUILD_DEPS += , git, rsync
endif

ifeq "$(USE_BZIP_COMPRESS)" "y"
	DPKG_DEPENDS = dpkg (>= 1.10.24)
	BUILDDEB_OPTIONS = -- -Zbzip2
endif

ifeq "$(USE_LZMA_COMPRESS)" "y"
       DPKG_DEPENDS = dpkg (>= 1.14.12ubuntu3)
       BUILDDEB_OPTIONS = -- -Zlzma
endif

ifeq "$(LENNY_BACKPORT)" "y"
	BUILD_DEPS += , dpkg-dev (>= 1.14.27)
else
	BUILD_DEPS += , dpkg-dev (>= 1.15.1)
endif

ifneq "$(OOO_OGLTRANS_ARCHS)" ""
	BUILD_DEPS += , libgl1-mesa-dev$(OOO_NO_OGLTRANS_ARCHS), libglu1-mesa-dev$(OOO_NO_OGLTRANS_ARCHS)
endif
ifeq "$(ENABLE_OPENGL)" "y"
	CONFIGURE_FLAGS += --enable-opengl --with-system-mesa-headers
endif

ifneq "$(PACKAGE_SDK)" "y"
	CONFIGURE_FLAGS += --disable-odk
endif

ifeq "$(ENABLE_MINIMIZER)" "y"
	CONFIGURE_FLAGS += --enable-minimizer
endif
ifeq "$(ENABLE_PRESENTER_CONSOLE)" "y"
	CONFIGURE_FLAGS += --enable-presenter-console
endif
ifeq "$(ENABLE_PDFIMPORT)" "y"
	CONFIGURE_FLAGS += --enable-pdfimport
	BUILD_DEPS += , libpoppler-dev (>= 0.8.0)
endif

ifeq "$(ENABLE_GRAPHITE)" "y"
  ifneq (,$(filter graphite, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libgraphite-dev
    ifeq "$(USE_STLPORT)" "y"
	ADDITIONAL_SECTIONS += SystemBitsWithSTLport
    endif
  endif
else
	CONFIGURE_FLAGS += --disable-graphite
endif

ifeq "$(USE_SYSTEM_TEXTCAT_DATA)" "y"
	BUILD_DEPS_INDEP += , libtextcat-data-utf8
	TEXTCAT_DATA_RECOMMENDS := libtextcat-data-utf8
endif

ifeq "$(USE_LIBCURL4)" "y"
	BUILD_DEPS += , libcurl4-$(CURL_SECTYPE)-dev
else
	BUILD_DEPS += , libcurl3-$(CURL_SECTYPE)-dev
endif

ifneq (,$(filter openssl, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libssl-dev
	DBG_DBG_SUGGESTS += , libssl$(shell readlink /usr/lib/libssl.so | cut -d"." -f3,4,5)-dbg
endif

	BUILD_DEPS += , libdb-dev
	DBG_DBG_SUGGESTS += , $(shell dpkg -s libdb-dev | grep Depends | awk '{ print $$2 }' | sed -e s/dev/dbg/)

ifneq "$(BUILD_DBG_PACKAGE)" "y"
	# build with small symbols anyway
	SMALL_SYMBOLS = y
else
  # -g gives a far too big deb (>400M, ca. 1GB I-S)
  ifeq (debug,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	# ooo-build defaults to --enable-symbols (without SMALL)
	SMALL_SYMBOLS = n
  else
	SMALL_SYMBOLS = y
  endif
	DBG_DBG_SUGGESTS+= , libc6.1-dbg [alpha ia64], libc0.1-dbg [kfreebsd-i386 kfreebsd-amd64], libc0.3-dbg [hurd-i386], libc6-dbg [!ia64 !alpha !kfreebsd-i386 !kfreebsd-amd64 !hurd-i386], libatk1.0-dbg, libglib2.0-0-dbg, libgnomevfs2-0-dbg, libstdc++6-$(SYSTEM_GCC_VERSION)-dbg, libx11-6-dbg, libxext6-dbg, libxaw7-dbg, libxml2-dbg, libgtk2.0-0-dbg, libxau6-dbg, libice6-dbg, libsm6-dbg, libxinerama1-dbg, libfontconfig1-dbg
  ifeq "$(USE_LIBCURL4)" "y"
	DBG_DBG_SUGGESTS+= , libcurl3-dbg
  else
	DBG_DBG_SUGGESTS+= , libcurl4-dbg
  endif
endif
# Small symbols?
ifeq "$(SMALL_SYMBOLS)" "y"
	CONFIGURE_FLAGS += --enable-symbols=SMALL
endif

ifeq (noopt,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	ARCH_FLAGS += -O0
endif

# Build python depends from current python version
PYMAJOR:=$(shell python -c "import sys; print sys.version_info[0]")
PYMINOR:=$(shell python -c "import sys; print sys.version_info[1]")
PYMINORPLUS1:=$(shell python -c "import sys; print sys.version_info[1]+1")
PYTHON_SITE:=debian/python-uno/$(shell python -c 'from distutils import sysconfig; print(sysconfig.get_python_lib())')

ifeq "$(BUILD_PYUNO)" "y"
  ifeq ($(PYTHON_HELPER),dh_python2)
	BUILD_DEPS += , python (>= 2.6.6-3+squeeze4)
  else ifeq ($(PYTHON_HELPER),dh_pycentral)
	BUILD_DEPS += , python-central (>= 0.5)
  else ifeq ($(PYTHON_HELPER),dh_pysupport)
    ifeq "$(PYMAJOR).$(PYMINOR)" "2.6"
	BUILD_DEPS += , python-support (>= 0.90.4)
    else
	BUILD_DEPS += , python-support
    endif
  endif
	DBG_DBG_SUGGESTS+= , python-dbg
	BUILD_DEPS += , $(PYTHON)-dev
else
	BUILD_DEPS += , python
endif

	BUILD_DEPS += , debhelper (>= 7.2.3~)

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(BUILD_JARS_NATIVE)" "y"
    ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
	STAMP_NATIVE_JARS = $(STAMP_DIR)/native-jars
    endif
    ifeq "$(NEW_DPKG_SHLIBDEPS)" "n"
	BUILD_DEPS += , dpkg-dev (>= 1.13.19)
    endif
	JAVA_GCJ_DEPENDS = libgcj-common (>= 1:4.1.1-14)
  endif
endif

ifeq "$(RUN_SMOKETEST)" "y"
	BUILD_DEPS += , epm
endif
ifeq "$(RUN_TESTTOOL)" "y"
	CONFIGURE_FLAGS += --enable-hids
endif
ifneq (,$(filter cppunit, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libcppunit-dev (>= 1.12)
  ifeq "$(USE_STLPORT)" "y"
	ADDITIONAL_SECTIONS += SystemBitsWithSTLport
  endif
endif
ifeq "$(RUN_SUBSEQUENT_TESTS)" "y"
	BUILD_DEPS += , tcsh
  ifeq "$(ENABLE_JUNIT4)" "y"
	BUILD_DEPS += , junit4 $(JUNIT_MIN_VER)
  else
	CONFIGURE_FLAGS += --without-junit
  endif
else
	CONFIGURE_FLAGS += --without-junit
endif

ifneq "$(BUILD_ONLY_EN_US)" "y"
  ifeq (lang=,$(findstring lang=,$(DEB_BUILD_OPTIONS)))
	ISOS=$(shell echo "$(DEB_BUILD_OPTIONS) " | sed -n 's/^.*lang=\([^\s].*\)\s.*/\1/p' | awk '{ print $$1 }' | sed -e 's/,/ /g')
	HELPISOS=$(shell echo "$(DEB_BUILD_OPTIONS) " | sed -n 's/^.*lang=\([^\s].*\)\s.*/\1/p' | awk '{ print $$1 }' | sed -e 's/,/ /g')
	LANGPACKISOS=$(shell echo "$(DEB_BUILD_OPTIONS) " | sed -n 's/^.*lang=\([^\s].*\)\s.*/\1/p' | awk '{ print $$1 }' | sed -e 's/,/ /g')
  else
	# Note that the first one here *has to be* en-US. the first one gets
	# gid_Module_Root as filelist later and the rest gid_Module_Root.$iso
	# but we can't/shouldn't do dynamic switching, so let en-US be the first
	# one to that gid_Module_Root always is english and the other langpacks
	# have gid_Module_Root.$iso
	#ISOS=$(shell $(OOO_BUILD_TREE)/bin/openoffice-xlate-lang -i all')
	ISOS:=en-US af ar as ast be-BY bg bn br bs ca cs cy da de dz el \
	  en-GB en-ZA eo es et eu fa fi fr ga gl gu he hi hr hu id it ja \
	  ka km ko ku lt lv mk mn ml mr nb ne nl nn nr ns oc om or \
	  pa-IN pl pt pt-BR ro ru rw si sk sl sr ss st sv \
	  ta te tg th tn tr ts ug uk uz ve vi xh zh-CN zh-TW zu
	#HELPISOS:=$(shell $(OOO_BUILD_TREE)/bin/openoffice-xlate-lang -i all') 
	HELPISOS:=en-US ca cs da de dz el en-GB es et eu fi fr gl hi hu it \
	  ja km ko nl om pl pt pt-BR ru sk sl sv zh-CN zh-TW
	#LANGPACKISOS:=$(shell $(OOO_BUILD_TREE)/bin/openoffice-xlate-lang -i all')
	LANGPACKISOS:=en-US af ar as ast be-BY bg bn br bs ca cs cy da de dz el \
	  en-GB en-ZA eo es et eu fa fi fr ga gl gu he hi hr hu id it ja \
	  ka km ko ku lt lv mk mn ml mr nb ne nl nn nr ns oc om or \
	  pa-IN pl pt pt-BR ro ru rw si sk sl sr ss st sv \
	  ta te tg th tn tr ts ug uk uz ve vi xh zh-CN zh-TW zu
  endif
else
	ISOS=en-US
	HELPISOS=en-US
	LANGPACKISOS=en-US
endif
BUILD_ISOS = $(ISOS)

ifeq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
	DEBHELPER_OPTIONS += -Nlibreoffice$(VER)-help-en-us
endif

ifneq "$(BUILD_ONLY_EN_US)" "y"
  ifneq "$(BUILD_ISOS)" "en-US"
	CONFIGURE_FLAGS += --with-lang="$(BUILD_ISOS)"
  endif
endif

ifeq "$(VER)" ""
	CONFIGURE_FLAGS += --with-binsuffix=no
else
	CONFIGURE_FLAGS += --with-binsuffix=$(VER)
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(JDK)" "default"
	JAVA_HOME=/usr/lib/jvm/default-java
	BUILD_DEPS += , default-jdk$(OOO_NO_JAVA_ARCHS)
  endif
  ifeq "$(JDK)" "java-gcj-compat"
	JAVA_HOME=/usr/lib/jvm/java-gcj
    ifneq (,$(findstring armel,$(OOO_JAVA_ARCHS)))
	BUILD_DEPS += , gcj-4.3 (>= 4.3.1-2) [armel]
    endif
  endif
  ifeq "$(JDK)" "gcj-jdk"
	JAVA_HOME=/usr/lib/jvm/java-gcj
	BUILD_DEPS += , gcj-jdk$(OOO_NO_JAVA_ARCHS)
  endif
  ifeq "$(JDK)" "openjdk"
	BUILD_DEPS += , openjdk-6-jdk [$(filter-out $(OOO_GCJ_JDK_ARCHS),$(OOO_JAVA_ARCHS))]
	JAVA_HOME=/usr/lib/jvm/java-6-openjdk
	CONFIGURE_FLAGS += --with-java-target-version=1.5
  endif
        TEST_JAVA_HOME=$(JAVA_HOME)
  ifeq "$(BUILD_JARS_NATIVE)" "y"
	CONFIGURE_FLAGS += --enable-gcjaot
    ifeq "$(LENNY_BACKPORT)" "y"
	BUILD_DEPS += , default-jdk-builddep$(OOO_NO_GCJ_ARCHS), gij$(OOO_NO_GCJ_ARCHS), java-gcj-compat-dev (>= 1.0.76-7)$(OOO_NO_GCJ_ARCHS), libgcj-bc$(OOO_GCJ_ARCHS)
    else
	BUILD_DEPS += , gcj-native-helper$(OOO_NO_GCJ_ARCHS), libgcj-common (>= 1:4.4.1)$(OOO_NO_GCJ_ARCHS)
    endif
  else
    ifneq "$(OOO_GCJ_JDK_ARCHS)" ""
	BUILD_DEPS += , gcj-jdk [$(OOO_GCJ_JDK_ARCHS)]
    endif
  endif
  ifeq "$(ENABLE_MEDIAWIKI)" "y"
	BUILD_DEPS += , ant (>= 1.7.0)$(OOO_NO_JAVA_ARCHS), ant-optional (>= 1.7.0)$(OOO_NO_JAVA_ARCHS)
  else
	BUILD_DEPS += , ant (>= 1.6.5)$(OOO_NO_JAVA_ARCHS)
  endif
	GCJ_VERSION = $(shell basename `readlink $(JAVA_HOME)/bin/gcj` | sed -e s/gcj-//)
	GCJ_JAWT_DEPENDS= $(shell dpkg -S /usr/lib/`readlink /usr/lib/libgcj_bc.so.1` | cut -d: -f1 | sed -e s/$$/-awt/)
	DBG_DBG_SUGGESTS+= , $(shell echo $(GCJ_AWT_DEPENDS) | sed -e s/awt/dbg/)
	JAVA_RUNTIME_DEPENDS = default-jre | gcj-jre | java-gcj-compat
#  ifneq (,$(GCJ_JAWT_DEPENDS))
#	JAVA_RUNTIME_DEPENDS += | $(GCJ_JAWT_DEPENDS)
#  endif
  ifneq (,$(filter $(ARCH), $(OOO_OPENJDK_ARCHS)))
	JAVA_RUNTIME_DEPENDS += | openjdk-6-jre
  endif
  ifneq (,$(filter $(ARCH), amd64 i386))
	JAVA_RUNTIME_DEPENDS += | sun-java5-jre | sun-java6-jre
  endif
	JAVA_RUNTIME_DEPENDS += | java5-runtime
	# Suns Java "packages"
	JAVA_RUNTIME_DEPENDS += | jre
	GCJ_JAWT_DIR=$(shell dirname `dpkg -L $(GCJ_JAWT_DEPENDS) | grep libjawt.so | head -n 1`)
export JAVA_HOME
	CONFIGURE_FLAGS += --with-jdk-home=$(JAVA_HOME)
	JAVA_COMMON_DEPENDS= , libreoffice$(VER)-java-common
	JAVA_COMMON_DEPENDS_VERSION:= (>= $(BASE_VERSION)~)
  ifneq (,$(filter saxon, $(SYSTEM_STUFF)))
	CONFIGURE_FLAGS += --with-system-saxon --with-saxon-jar=/usr/share/java/saxonb.jar
	BUILD_DEPS += , libsaxonb-java$(OOO_NO_JAVA_ARCHS)
	JAVA_COMMON_JAVA_DEPENDS+= , libsaxonb-java
  endif
  ifeq "$(PACKAGE_SDK)" "y"
    ifeq "$(DIST)" "Debian"
      ifeq "$(LENNY_BACKPORT)" "y"
	BUILD_DEPS += , mingw32$(OOO_NO_JAVA_ARCHS)
      else
	BUILD_DEPS += , gcc-mingw32$(OOO_NO_JAVA_ARCHS), mingw32-runtime$(OOO_NO_JAVA_ARCHS)
      endif
	  CONFIGURE_FLAGS += --enable-build-unowinreg
	  CONFIGURE_FLAGS += --with-mingwin=i586-mingw32msvc-g++
    endif
  endif
  ifeq "$(ENABLE_MEDIAWIKI)" "y"
	CONFIGURE_FLAGS += --enable-wiki-publisher
    ifneq (,$(filter apache-commons, $(SYSTEM_STUFF)))
	MEDIAWIKI_BUILD_DEPS += , libcommons-codec-java$(OOO_NO_JAVA_ARCHS), libcommons-httpclient-java$(OOO_NO_JAVA_ARCHS), libcommons-lang-java$(OOO_NO_JAVA_ARCHS), libcommons-logging-java$(OOO_NO_JAVA_ARCHS)
	MEDIAWIKI_JAR_DEPENDS := , libcommons-codec-java, libcommons-httpclient-java, libcommons-lang-java, libcommons-logging-java
	BUILD_DEPS += $(MEDIAWIKI_BUILD_DEPS)
	CONFIGURE_FLAGS += --with-commons-codec-jar=/usr/share/java/commons-codec.jar --with-commons-lang-jar=/usr/share/java/commons-lang.jar --with-commons-httpclient-jar=/usr/share/java/commons-httpclient.jar --with-commons-logging-jar=/usr/share/java/commons-logging.jar
      ifeq "$(LENNY_BACKPORT)" "y"
	CONFIGURE_FLAGS += --with-system-servlet-api --with-servlet-api-jar=$(shell dpkg -L `dpkg -s libcommons-logging-java | grep Depends | cut -d"," -f2 | sed -e s/^\ //` | grep \.jar$$)
      else
	CONFIGURE_FLAGS += --with-system-servlet-api --with-servlet-api-jar=$(shell dpkg -L `dpkg -s libcommons-logging-java | grep Suggests | cut -d"," -f1 | sed -e s/^\ // | awk '{ print $$2 }'` | grep servlet-api.*\.jar$ | head -n 1)
	BUILD_DEPS += , $(shell dpkg -s libcommons-logging-java | grep Suggests | cut -d"," -f1 | sed -e s/^\ // | awk '{ print $$2 }')
      endif
    endif
  endif
  ifeq "$(ENABLE_REPORTDESIGN)" "y"
	# report-builder
    ifneq (,$(filter jfreereport, $(SYSTEM_STUFF)))
	REPORT_BUILDER_BUILD_DEPS += , libbase-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), libsac-java$(OOO_NO_REPORTDESIGN_ARCHS), libxml-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), libflute-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), libpentaho-reporting-flow-engine-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), liblayout-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), libloader-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), libformula-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), librepository-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), libfonts-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS), libserializer-java-openoffice.org$(OOO_NO_REPORTDESIGN_ARCHS)
	REPORT_BUILDER_JAR_DEPENDS := , libbase-java-openoffice.org, libsac-java, libxml-java-openoffice.org, libflute-java-openoffice.org, libpentaho-reporting-flow-engine-java-openoffice.org, liblayout-java-openoffice.org, libloader-java-openoffice.org, libformula-java-openoffice.org, librepository-java-openoffice.org, libfonts-java-openoffice.org, libserializer-java-openoffice.org
	BUILD_DEPS += $(REPORT_BUILDER_BUILD_DEPS)
	CONFIGURE_FLAGS += --with-libbase-jar=/usr/share/java/openoffice/libbase.jar --with-libxml-jar=/usr/share/java/openoffice/libxml.jar --with-flute-jar=/usr/share/java/openoffice/flute.jar --with-jfreereport-jar=/usr/share/java/openoffice/flow-engine.jar --with-liblayout-jar=/usr/share/java/openoffice/liblayout.jar --with-libloader-jar=/usr/share/java/openoffice/libloader.jar --with-libformula-jar=/usr/share/java/openoffice/libformula.jar --with-librepository-jar=/usr/share/java/openoffice/librepository.jar --with-libfonts-jar=/usr/share/java/openoffice/libfonts.jar --with-libserializer-jar=/usr/share/java/openoffice/libserializer.jar
    endif
    ifneq (,$(filter apache-commons, $(SYSTEM_STUFF)))
	REPORT_BUILDER_BUILD_DEPS += , libcommons-logging-java$(OOO_NO_JAVA_ARCHS)
	REPORT_BUILDER_JAR_DEPENDS += , libcommons-logging-java
	CONFIGURE_FLAGS += --with-commons-logging-jar=/usr/share/java/commons-logging.jar
      ifeq "$(LENNY_BACKPORT)" "y"
	CONFIGURE_FLAGS += --with-system-servlet-api --with-servlet-api-jar=$(shell dpkg -L `dpkg -s libcommons-logging-java | grep Depends | cut -d"," -f2 | sed -e s/^\ //` | grep \.jar$$)
      else
	CONFIGURE_FLAGS += --with-system-servlet-api --with-servlet-api-jar=$(shell dpkg -L `dpkg -s libcommons-logging-java | grep Suggests | cut -d"," -f1 | sed -e s/^\ // | awk '{ print $$2 }'` | grep servlet-api.*\.jar$ | head -n 1)
	BUILD_DEPS += , $(shell dpkg -s libcommons-logging-java | grep Suggests | cut -d"," -f1 | sed -e s/^\ // | awk '{ print $$2 }')
      endif
    endif
	CONFIGURE_FLAGS += --enable-report-builder
  endif
	OOO_OFFICEBEAN_DEP = libreoffice$(VER)-officebean
else
	CONFIGURE_FLAGS += --without-java
	DEBHELPER_OPTIONS += -Nlibreoffice$(VER)-officebean -Nlibreoffice$(VER)-java-common -Nlibreoffice$(VER)-filter-mobiledev -Nlibreoffice$(VER)-gcj
endif

ifneq "$(MOZILLA)" ""
  ifneq "$(OOO_MOZILLA_ARCHS)" ""
    ifeq "$(MOZILLA)" "xulrunner"
	BUILD_DEPS+= , libxul-dev$(OOO_NO_MOZILLA_ARCHS), libnss3-dev (>= 3.12.3)$(OOO_NO_MOZILLA_ARCHS)
	DBG_DBG_SUGGESTS+= , libnss3-1d-dbg, libnspr4-0d-dbg
    else
      ifeq "$(MOZILLA)" "libxul"
	BUILD_DEPS+= , xulrunner-dev$(OOO_NO_MOZILLA_ARCHS), libnss3-dev (>= 3.12.3)$(OOO_NO_MOZILLA_ARCHS)
      else
        ifeq "$(MOZILLA)" "iceape"
	BUILD_DEPS += , $(MOZILLA)-dev (>= 1.1.9-5)$(OOO_NO_MOZILLA_ARCHS), libnss3-dev (>= 3.12.3)$(OOO_NO_MOZILLA_ARCHS)]
        else
	BUILD_DEPS += , $(MOZILLA)-dev$(OOO_NO_MOZILLA_ARCHS)
        endif
      endif
	DBG_DBG_SUGGESTS+= , libnss3-1d-dbg, libnspr4-0d-dbg
    endif
  endif
endif
ifneq (,$(findstring $(ARCH),$(OOO_MOZILLA_ARCHS)))
	CONFIGURE_FLAGS += --with-system-mozilla=$(MOZILLA)
else
	CONFIGURE_FLAGS += --disable-mozilla --without-system-mozilla
	PACKAGE_NPSOPLUGIN=n
endif

ifeq "$(USE_SYSTEM_DMAKE)" "y"
	BUILD_DEPS += , dmake (>= 1:4.11)
endif

ifneq "$(OOO_MONO_ARCHS)" ""
  ifeq "$(MONO2)" "y"
	BUILD_DEPS += , mono-devel $(MONO_MINVER) [$(OOO_MONO_ARCHS)], libmono-dev $(MONO_MINVER) [$(OOO_MONO_ARCHS)], mono-utils $(MONO_MINVER) [$(OOO_MONO_ARCHS)], cli-common-dev (>= 0.5.7) [$(OOO_MONO_ARCHS)]
  else
	# mono-gmcs for gmcs itself and mkbundle2
	# mono-mcs for mcs itself and al
	BUILD_DEPS += , mono-mcs $(MONO_MINVER) [$(OOO_MONO_ARCHS)], mono-gmcs $(MONO_MINVER) [$(OOO_MONO_ARCHS)], libmono-dev $(MONO_MINVER) [$(OOO_MONO_ARCHS)], mono-utils $(MONO_MINVER) [$(OOO_MONO_ARCHS)], cli-common-dev (>= 0.5.7) [$(OOO_MONO_ARCHS)], mono-1.0-devel [$(OOO_MONO_ARCHS)], mono-2.0-devel [$(OOO_MONO_ARCHS)]
  endif
endif
ifeq "$(ENABLE_MONO)" "y"
	# http://pkg-mono.alioth.debian.org/cli-policy/ch-mono.html#s7.3
	MONO_SHARED_DIR = $(CURDIR)
	export MONO_SHARED_DIR
	CONFIGURE_FLAGS+= --enable-mono
  ifeq "$(MONO2)" "y"
export MCS=/usr/bin/mono-csc
export GMCS=/usr/bin/mono-csc
export MKBUNDLE2=/usr/bin/mkbundle
  endif
	DBG_DBG_SUGGESTS += , mono-jit-dbg [$(OOO_MONO_ARCHS)], libmono0-dbg [$(OOO_MONO_ARCHS)], mono-dbg [$(OOO_MONO_ARCHS)]
else
	CONFIGURE_FLAGS+= --disable-mono
	DEBHELPER_OPTIONS += -Nlibuno-cli-basetypes1.0-cil -Nlibuno-cli-uretypes1.0-cil -Nlibuno-cli-oootypes1.0-cil -Nlibuno-cli-cppuhelper1.0-cil -Nlibuno-cli-ure1.0-cil
endif

ifneq (,$(filter hunspell, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libhunspell-dev $(HUNSPELL_MIN_VER)
endif
	CONFIGURE_FLAGS += --with-external-dict-dir=$(DICT_DIR)

ifneq (,$(filter altlinuxhyph, $(SYSTEM_STUFF)))
  ifeq "$(USE_LIBHYPHEN)" "y"
	BUILD_DEPS += , libhyphen-dev $(LIBHYPHEN_MINVER)
  else
	BUILD_DEPS += , libaltlinuxhyph-dev $(LIBALTLINUXHYPH_MINVER)
  endif
endif
	CONFIGURE_FLAGS += --with-external-hyph-dir=$(HYPH_DIR)

ifeq "$(USE_AGG)" "y"
	CONFIGURE_FLAGS+= --with-agg
  ifneq (,$(filter agg, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libagg-dev (>= 2.3-2)
  endif
endif

ifneq "$(OOO_STLPORT_ARCHS)" ""
  ifeq "$(USE_SYSTEM_STLPORT)" "y"
	LIBSTLPORT_MINVER= (>= 4.6.2-3)
	BUILD_DEPS += , libstlport4.6-dev $(LIBSTLPORT_MINVER) [$(OOO_STLPORT_ARCHS)]
	DEV_STL_DEPENDS=, libstlport4.6-dev $(LIBSTLPORT_MINVER) [$(OOO_STLPORT_ARCHS)]
   endif
endif
ifneq "$(USE_STLPORT)" "y"
	CONFIGURE_FLAGS += --without-stlport
else
        CONFIGURE_FLAGS += --with-stlport
  ifeq "$(USE_SYSTEM_STLPORT)" "y"
	CONFIGURE_FLAGS+= --with-stlport=$(CURDIR)/stlport
  endif
endif

ifneq (,$(filter boost, $(SYSTEM_STUFF)))
  ifeq "$(BOOST_VERSION)" "1.34"
    ifeq "$(SYSTEM_GCC_VERSION)" "4.4"
	BUILD_DEPS += , libboost-dev (>= 1.34.1-15)
    else
	BUILD_DEPS += , libboost-dev
    endif
  else
    ifneq "$(BOOST_VERSION)" "default"
	BUILD_DEPS += , libboost$(BOOST_VERSION)-dev $(BOOST_MINVER)
	#BUILD_DEPS += , libboost-thread$(BOOST_VERSION)-dev, libboost-program-options$(BOOST_VERSION)-dev
    else
	BUILD_DEPS += , libboost-dev $(BOOST_MINVER)
	#BUILD_DEPS += , libboost-thread-dev, libboost-program-options-dev
    endif
  endif
endif

ifneq (,$(filter mdds, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libmdds-dev
endif

ifneq (,$(filter vigra, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libvigraimpex-dev
endif

ifeq "$(USE_EXTERNAL_CXXLIBS)" "y"
  ifneq (,$(filter libwpd, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libwpd-dev (>= 0.9.0)
  endif
  ifneq (,$(filter sablot, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libsablot0-dev (>= 1.0.2-4)
  endif
  ifneq (,$(filter mythes, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libmythes-dev (>= 2:1.2)
  endif
  ifneq (,$(filter libwps, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libwps-dev (>= 0.2.0)
  endif
  ifneq (,$(filter libwpg, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libwpg-dev (>= 0.2.0)
  endif
endif
	CONFIGURE_FLAGS += --with-external-thes-dir=$(THES_DIR)

ifneq (,$(filter icu, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libicu-dev $(ICU_MINVER)
endif

ifneq (,$(filter libxslt, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libxslt1-dev
	DBG_DBG_SUGGESTS+= , libxslt1-dbg
endif

ifneq (,$(filter xmlsec, $(SYSTEM_STUFF)))
  ifneq (,$(findstring xul,$(MOZILLA)))
	BUILD_DEPS += , libxmlsec1-dev (>= 1.2.9-1.1), libxmlsec1-nss (>= 1.2.9-1.1), libxmlsec1-openssl (>= 1.2.9-1.1)
  else
	BUILD_DEPS += , libxmlsec1-dev (>= 1.2.9), libxmlsec1-nss (>= 1.2.9), libxmlsec1-openssl (>= 1.2.9)
  endif
endif

ifeq "$(BUILD_CAIROCANVAS)" "y"
  ifneq (,$(filter cairo, $(SYSTEM_STUFF)))
	BUILD_DEPS+= , libcairo2-dev
  endif
else
	CONFIGURE_FLAGS+= --disable-cairo
endif

ifeq "$(BUILD_KDE)" "n"
	CONFIGURE_FLAGS+= --disable-kde
	CONFIGURE_FLAGS-= --disable-kde4
	CONFIGURE_FLAGS+= --with-images="$(IMAGES)"
else
  ifeq "$(KDE_VER)" "4"
	CONFIGURE_FLAGS += --disable-kde
	KDE_ICONSET_DEP=libreoffice$(VER)-style-oxygen
  else
	CONFIGURE_FLAGS += --disable-kde4
	KDE_ICONSET_DEP=libreoffice$(VER)-style-crystal
  endif
	BUILD_DEPS += , kdelibs$(shell expr $(KDE_VER) + 1)-dev $(KDELIBS_MINVER)
  ifeq "$(KDE_VER)" "4"
	BUILD_DEPS += , libqt$(KDE_VER)-dev $(QT_MINVER)
	DBG_DBG_SUGGESTS+= , kdelibs$(shell expr $(KDE_VER) + 1)-dbg, libqt$(KDE_VER)-dbg
  else
	DBG_DBG_SUGGESTS+= , kdelibs-dbg, qt-x11-free-dbg
  endif
  ifeq "$(ENABLE_KDEAB)" "y"
    ifeq "$(KDE_VER)" "4"
	ADDITIONAL_SECTIONS += KDE4Experimental
	BUILD_DEPS += , kdepimlibs$(shell expr $(KDE_VER) + 1)-dev$(OOO_NO_BASE_ARCHS)
    endif
  else
	CONFIGURE_FLAGS+= --disable-kdeab
  endif
endif

ifeq "$(ENABLE_MYSQLNATIVE)" "y"
	CONFIGURE_FLAGS += --enable-mysql-connector
  ifneq (,$(filter mysql, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libmysqlclient-dev
  endif
  ifneq (,$(filter mysql-cppconn, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libmysqlcppconn-dev $(MYSQLCPPCONN_MINVER)
  endif
endif

ifeq "$(BUILD_GTK)" "n"
	CONFIGURE_FLAGS+= --disable-gtk
	DEBHELPER_OPTIONS+= -Nlibreoffice$(VER)-gtk -Nlibreoffice$(VER)-gnome
	CONFIGURE_FLAGS+= --with-images="$(IMAGES)"
endif

ifeq "$(ENABLE_EVO2)" "n"
	CONFIGURE_FLAGS += --disable-evolution2
else
	BUILD_DEPS += , libebook1.2-dev$(OOO_NO_BASE_ARCHS)
endif

ifeq "$(ENABLE_RANDR)" "y"
	BUILD_DEPS += , libxrandr-dev
else
	CONFIGURE_FLAGS += --disable-randr
endif

ifneq "$(ENABLE_LAYOUT)" "y"
	CONFIGURE_FLAGS += --disable-layout
endif

ifeq "$(BUILD_BINFILTERS)" "y"
	CONFIGURE_FLAGS+= --enable-binfilter
	OOO_BINFILTER_DEP = libreoffice$(VER)-filter-binfilter
else
	DEBHELPER_OPTIONS+= -Nlibreoffice$(VER)-filter-binfilter
endif

ifneq "$(BUILD_PYUNO)" "y"
	DEBHELPER_OPTIONS+= -Npython-uno
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifneq (,$(filter lucene, $(SYSTEM_STUFF)))
	BUILD_DEPS += , liblucene2-java (>= 2.3.2)$(OOO_NO_JAVA_ARCHS)
	LUCENE_DEPENDS = liblucene2-java (>= 2.3.2)
        # safety measure; e.g. lucene 2.9 index cannot be handled by lucene 2.4
        LUCENE_CONFLICTS = liblucene2-java (<< $(shell dpkg -l liblucene2-java | grep ^ii | awk '{ print $$3 }' | cut -d. -f1,2)~)
	CONFIGURE_FLAGS += --with-lucene-core-jar=/usr/share/java/lucene-core.jar --with-lucene-analyzers-jar=/usr/share/java/lucene-analyzers.jar
  endif
  ifneq (,$(filter hsqldb, $(SYSTEM_STUFF)))
	BUILD_DEPS += , libhsqldb-java $(HSQLDB_MINVER)$(OOO_NO_JAVA_ARCHS)
	BASE_HSQLDB_DEPENDS = libhsqldb-java $(HSQLDB_MINVER), libhsqldb-java (<< $(HSQLDB_TOONEWVER)~)
	JAVA_GCJ_DEPENDS += , libhsqldb-java-gcj
  endif
  ifneq (,$(filter beanshell, $(SYSTEM_STUFF)))
	BUILD_DEPS += , bsh (>= 2.0b4)$(OOO_NO_JAVA_ARCHS)
	COMMON_BSH_DEPENDS = bsh (>= 2.0b4)
	JAVA_GCJ_DEPENDS += , bsh-gcj
  endif
endif

ifneq (,$(filter lpsolve, $(SYSTEM_STUFF)))
  ifeq "$(USE_SHARED_LPSOLVE)" "y"
	BUILD_DEPS += , liblpsolve55-dev $(LPSOLVE_MIN_VERSION), lp-solve $(LPSOLVE_MIN_VERSION)
	LPSOLVE_DEP = lp-solve $(LPSOLVE_MIN_VERSION)
  else
	BUILD_DEPS += , liblpsolve55-dev $(LPSOLVE_MIN_VERSION)
  endif
  ifeq "$(USE_LIBSUITESPARSE)" "y"
	DBG_DBG_SUGGESTS+= , libsuitesparse-dbg
	BUILD_DEPS += , libsuitesparse-dev $(SUITESPARSE_MIN_VERSION)
  else
	DBG_DBG_SUGGESTS+= , libufsparse-dbg
	BUILD_DEPS += , libufsparse-dev
  endif
endif

ifeq "$(USE_DBUS)" "y"
	BUILD_DEPS += , libdbus-glib-1-dev (>= 0.60)
	CONFIGURE_FLAGS += --enable-dbus
endif

ifeq "$(USE_GSTREAMER)" "y"
	BUILD_DEPS += , libgstreamer-plugins-base0.10-dev
	GSTREAMER_PLUGINS_SUGGESTS += , gstreamer0.10-plugins-base, gstreamer0.10-plugins-good, gstreamer0.10-plugins-ugly, gstreamer0.10-plugins-bad, gstreamer0.10-ffmpeg
	DBG_DBG_SUGGESTS+= , libgstreamer0.10-0-dbg
else
	CONFIGURE_FLAGS += --disable-gstreamer
endif

ifneq (,$(filter neon, $(SYSTEM_STUFF)))
  ifneq "$(NEON_SECTYPE)" "openssl"
	BUILD_DEPS += , libneon$(NEONSONR)-$(NEON_SECTYPE)-dev
	DBG_DBG_SUGGESTS+= , libneon$(NEONSONR)-$(NEON_SECTYPE)-dbg
  else
	BUILD_DEPS += , libneon$(NEONSONR)-dev
	DBG_DBG_SUGGESTS+= , libneon$(NEONSONR)-dbg
  endif
endif

ifeq "$(HELPISOS)" ""
	CONFIGURE_FLAGS += --without-helppack-integration
endif

ifneq (,$(filter redland, $(SYSTEM_STUFF)))
	BUILD_DEPS += , librdf0-dev (>= 1.0.8)
	SHLIBS_OVERRIDE += -Xunordf
endif

# CairoFonts patchset is applied for sid and this patch needs Gtk 2.10
ifneq "$(CAIRO_FONTS_PATCH)" "y"
	BUILD_DEPS += , libgtk2.0-dev
else
	BUILD_DEPS += , libgtk2.0-dev (>= 2.10)
  # cairo canvas might be disabled, but the patch needs cairo headers
  ifneq "$(BUILD_CAIROCANVAS)" "y"
	BUILD_DEPS += , libcairo2-dev
	CONFIGURE_FLAGS += --with-system-cairo
  endif
endif

ifeq "$(ENABLE_GIO)" "y"
	CONFIGURE_FLAGS += --enable-gio --disable-gnome-vfs
	BUILD_DEPS += , libglib2.0-dev (>= 2.15.0)
endif

ifeq "$(ENABLE_GVFS)" "y"
	BUILD_DEPS += , libgnomevfs2-dev
else
	CONFIGURE_FLAGS += --disable-gnome-vfs
endif

ifeq "$(ENABLE_GCONF)" "y"
	BUILD_DEPS += , libgconf2-dev
else
	CONFIGURE_FLAGS += --disable-gconf
endif

ifeq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	BUILD_DEPS_INDEP += , fontforge
endif

# Use compiler cache?  Include ccache in DEB_BUILD_OPTIONS for much faster rebuild times
# A complete build uses about 200Mb of compiler cache.
ifeq (ccache,$(findstring ccache,$(DEB_BUILD_OPTIONS)))
	CONFIGURE_FLAGS += --with-gcc-speedup=ccache
endif

## Build n projects in parallel?
## DEB_BUILD_OPTIONS=parallel=<n>
NUM_CPUS=$(shell echo "$(DEB_BUILD_OPTIONS) " | sed -n 's/^\(.* \)\?parallel=\([0-9]\+\).*$$/\2/p')
AVAIL_CPUS := $(shell getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1)
ifeq "$(NUM_CPUS)" ""
	NUM_CPUS := 1
  ifeq "$(PARALLEL_BUILD)" "y"
	# according to Pavel Janik, build -P<number of cores> -- -P2
	# is ideal. This sets the first -P according to the number
	# of CPUs (where dual-core CPUS report 2, too)
    ifneq ($(AVAIL_CPUS),1)
	NUM_CPUS := $(shell expr $(AVAIL_CPUS))
    endif
  endif
endif
	CONFIGURE_FLAGS += --with-num-cpus=$(NUM_CPUS)
	# breaks. At least with 2
#	CONFIGURE_FLAGS += --with-max-jobs=$(NUM_CPUS)

CURDIR ?= $(shell pwd)

ifeq ($(GCC_VERSION),)
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:$$PATH
else
  ifeq ($(GCC_VERSION),snapshot)
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:/usr/lib/gcc-snapshot/bin:$$PATH
	BUILD_LD_LIBRARY_PATH = /usr/lib/gcc-snapshot/lib:$$LD_LIBRARY_PATH
	BUILD_DEPS += , gcc-snapshot
  else
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:$(CURDIR)/debian/usr/bin:$$PATH
	BUILD_DEPS += , gcc-$(GCC_VERSION), g++-$(GCC_VERSION)
  endif
endif
BUILD_PATH := $(CURDIR)/debian/usr/bin:$(BUILD_PATH)
BUILD_LD_LIBRARY_PATH := /usr/lib/libfakeroot:$(BUILD_LD_LIBRARY_PATH):$(GCJ_JAWT_DIR)

ifeq "$(ENABLE_LDAP)" "y"
  ifeq "$(USE_OPENLDAP)" "y"
    BUILD_DEPS += , libldap2-dev
    LDAP_LIB := $(shell echo libldap-`grep LDAP_VENDOR_VERSION_M /usr/include/ldap_features.h | cut -d: -f2 | awk '{ print $$3 }' | xargs | sed -e "s/ /\./"`-`grep LDAP_VENDOR_VERSION_MAJOR /usr/include/ldap_features.h | cut -d: -f2 | awk '{ print $$3 }'`)
   else
     CONFIGURE_FLAGS += --without-openldap
   endif
else
  CONFIGURE_FLAGS += --disable-ldap
endif

# Because of the stampdir magic, when you actually want to run a rule
# over, you would have to remove the stamp manually.  Now, just do
# 'debian/rules <target> <target> ... FORCE=1', and the stamp files
# that match the given targets will be removed automagically.
stampdir_targets=files.backup icons.scale patch.apply build.prepare.artwork 
stampdir_targets+=build.prepare configure
stampdir_targets+=setupins setup install install-arch install-indep
stampdir_targets+=langpacks binary-common binary-arch binary-indep
ifdef FORCE
 DUMMY:=$(shell rm -f $(patsubst %,$(STAMP_DIR)/%,$(filter $(stampdir_targets),$(MAKECMDGOALS))))
endif

# If this is defined, then none of the 'long' commands will be run.  Useful
# for testing.
# test_rules=1

# Since the final stages use up a large amount of diskspace, provide targets to
# remove them without needing a full rebuild

# Clean up the package directories (about 830M) 
clean-debdir:
	dh_testdir
	rm -f debian/*.postinst debian/*.postrm debian/*.preinst debian/*.prerm debian/*.triggers
	rm -f $(STAMP_DIR)/setup
ifeq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
	rm -rf debian/ttf-opensymbol \
		debian/libreoffice$(VER)-common \
		debian/libreoffice$(VER)-dev-doc \
		debian/libreoffice$(VER)-java-common \
		debian/libreoffice$(VER)-l10n-en-us \
		debian/libreoffice$(VER)-core \
		debian/libuno-cli-basetypes1.0-cil
endif
	dh_clean

# Clean compilation results, but leave solver (about 600Mb in addition to instsetoo)
clean-objectdirs: clean-instsetoo
	dh_testdir
	find $(SOURCE_TREE) -maxdepth 2 -name $(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT) -type d -exec rm -rf {} \;

clean:
	dh_testroot
	dh_testdir

	# openoffice.applications and openoffice*.keys are not removed via make distclean
	# although they are generated files. Work around this.
	# FIXME: Fix the makefiles in ooo-build directly
	if [ -e $(OOO_BUILD_TREE)/desktop/openoffice.applications ]; then \
		$(MAKE) -C $(OOO_BUILD_TREE)//desktop clean || true;\
	fi
	if [ -r $(OOO_BUILD_TREE)/Makefile ]; then \
	  $(MAKE) -C $(OOO_BUILD_TREE) distclean || true ;\
	fi

	# remove file with space in the name
	rm -f $(OOO_BUILD_TREE)/test/macro/clock\ chart.xls

	rm -rf $(OOO_BUILD_TREE)/autom4ate.cache
	rm -rf $(OOO_BUILD_TREE)/build
	rm -rf $(OOO_BUILD_TREE)/desktop/*.desktop
	rm -f $(OOO_BUILD_TREE)/fonts/symbols.xls
	rm -f $(OOO_BUILD_TREE)/po/.intltool-merge-cache
	rm -f $(OOO_BUILD_TREE)/src/GSI*.sdf
	rm -f $(OOO_BUILD_TREE)/src/accessories*langpack.sdf
	rm -f $(OOO_BUILD_TREE)/src/extensions*langpack.sdf
	rm -rf $(OOO_BUILD_TREE)/bin/localize-*.err
	find $(OOO_BUILD_TREE)/stamp -type f ! -name "Make*" ! -name "README" -exec rm {} \;

	# remove generated symlinks / java wrappers
	rm -rf debian/usr

	# stlport home
	rm -rf $(CURDIR)/stlport
	# convenience link
	rm -f build

	rm -f $(OOO_BUILD_TREE)/src/GSI*err
	rm -f $(OOO_BUILD_TREE)/config.*

ifneq "$(OOO_L10N_DIR)" ""
	rm -rf $(OOO_L10N_DIR)
endif

ifeq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
	rm -rf debian/ttf-opensymbol \
		debian/libreoffice$(VER)-common \
		debian/libreoffice$(VER)-dev-doc \
		debian/libreoffice$(VER)-java-common \
		debian/libreoffice$(VER)-l10n-en-us \
		debian/libreoffice$(VER)-core \
		debian/libuno-cli-basetypes1.0-cil
	if [ -f libreoffice-build/distro-configs/UbuntuL10n.conf.in.saved ]; then \
	  mv libreoffice-build/distro-configs/UbuntuL10n.conf.in.saved \
	    libreoffice-build/distro-configs/UbuntuL10n.conf.in; \
	fi
endif

	dh_clean

	# Files created in debian directory
	rm -f debian/*.postinst debian/*.postrm debian/*.preinst debian/*.prerm
	find debian -name "*.links" ! -name "libreoffice-common*.links" -exec rm {} \;
	if [ -d "$(STAMP_DIR)" ]; then rm -rf "$(STAMP_DIR)"; fi
	rm -f debian/shlibs.override.stdlibs
	rm -f debian/*.bug-script
	rm -f debian/scripts/aotcompile.py*

ifeq "$(ENABLE_MONO)" "y"
	rm -rf $(MONO_SHARED_DIR)/.wapi
endif

ifeq "$(HELPISOS)" ""
	rm -rf images*
endif

	rm -f l10n.fdupes
	rm -f debian/shlibs.local
	rm -f debian/*.templates

	rm -f debian/libreoffice-dev-doc.doc-base.*
	rm -f debian/*.menu
	for i in base calc core common draw impress math writer; do \
		rm -f debian/libreoffice-$$i.lintian-overrides; \
	done
	rm -f debian/*.install debian/*.dirs
	rm -f debian/catalog.xml
	rm -f debian/openoffice.org-dtd-officedocument1.0.xmlcatalogs
	rm -f download.list

	rm -f $(OOO_BUILD_TREE)/src/libreoffice-$(OOO_BUILD_TARBAL_VERSION)*
	rm -f $(OOO_BUILD_TREE)/src/GSI*

	for i in ext-sources-$(OOO_BUILD_TREE)/*; do \
		rm -f $(OOO_BUILD_TREE)/src/`basename $$i`; \
	done

	for i in `find $(OOO_BUILD_TREE)/patches/dev300 -name "*.in" ! -name "Makefile*"`; do \
		if [ -e `echo $$i | sed -e s/\.in$$//` ]; then \
			rm `echo $$i | sed -e s/\.in$$//`; \
		fi; \
	done
	rm -f $(OOO_BUILD_TREE)/bin/setup
	rm -f $(OOO_BUILD_TREE)/bin/piece/sys-setup
	rm -f $(OOO_BUILD_TREE)/download
	rm -f $(OOO_BUILD_TREE)/distro-configs/*.conf
	rm -f $(OOO_BUILD_TREE)/patches/apply.pl

	# left-over from ooo-pack-sources
	rm -rf .releases

	$(MAKE) -f debian/rules control


# Generate control file, because we have so many different languages
# Based on script by Martin Quinson <Martin.Quinson@tuxfamily.org>
control: debian/control
debian/control: $(wildcard debian/control*in) $(OOO_BUILD_TREE)/bin/openoffice-xlate-lang  debian/rules
	chmod 755 $(OOO_BUILD_TREE)/bin/openoffice-xlate-lang
	sed -e "s#libreofficeVER#libreoffice$(VER)#g" \
	    -e "s#libreofficeVER#libreoffice$(VER)#g" \
	    -e "s#%$(DIST)=\([^%]*\)%#, \1#g#" \
	    -e "s#%[A-Za-z]*=[^%]*%##g#" \
	    -e "s#%BUILD_DEPS%#$(strip $(BUILD_DEPS))#g" \
	    -e "s#%BUILD_DEPS_INDEP%#$(strip $(BUILD_DEPS_INDEP))#g" \
	    -e "s#@PYTHON_VERSION@#$(PYTHON_VERSION)#g" \
	    -e "s#@BUGS@#$(BUGS)#g" \
	    < debian/control.in > debian/control

ifeq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
	awk '{print} /^ *$$/ {exit}' debian/control > debian/control.l10n
	mv debian/control.l10n debian/control

	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
	    >> debian/control < debian/control.l10n.in
endif

ifeq "$(ENABLE_LDAP)" "y"
	# build-depends might not be satified when running debian/rules control. prevent bad subsitition with
	# nothing (libldap--)
	if [ ! -f /usr/include/ldap_features.h ]; then \
		echo "/usr/include/ldap_features.h not found. Is libldap2-dev installed?"; \
		echo 'Needed for properly setting $$(LDAP_LIB). Stopping,'; \
		exit 1; \
	fi
endif

	for LNUM in $(filter-out en-US,$(LANGPACKISOS)) ; do \
	    [ "$$LNUM" = en-US -a "$(PKGSOURCE)" = "libreoffice$(VER)-l10n" ] && continue; \
	    LNAME=`$(OOO_BUILD_TREE)/bin/openoffice-xlate-lang -l $$LNUM | perl -e 'print ucfirst(<STDIN>);'`; \
	    LCODE=`$(OOO_BUILD_TREE)/bin/openoffice-xlate-lang -i $$LNUM | tr A-Z a-z`; \
	    CCODE=`echo $$LCODE | sed 's/-.*//'`; \
	    case "$$LCODE" in \
		bn|gu|pa-in|ml|or|te|ta) \
			FONT_SUGGESTS=", ttf-`echo $$LNAME | tr A-Z a-z`-fonts"; \
			;; \
		hi-in|ne|mr) \
			FONT_SUGGESTS=", ttf-devanagari-fonts"; \
			;; \
		he) \
			FONT_SUGGESTS=", culmus"; \
			;; \
		km) \
			FONT_SUGGESTS=", ttf-khmeros"; \
			;; \
		ar) \
			FONT_SUGGESTS=", ttf-arabeyes"; \
			;; \
		fa) \
			FONT_SUGGESTS=", ttf-farsiweb"; \
			;; \
		dz) \
			FONT_SUGGESTS=", ttf-dzongkha"; \
			;; \
		th) \
			FONT_SUGGESTS=", ttf-thai-tlwg"; \
			;; \
		*) \
			FONT_SUGGESTS= ;; \
	    esac; \
	    case "$$LCODE" in \
		rw) \
			LOCALES_DEPENDS="locales (>= 2.3.6) | belocs-locales-data | locales-all (>= 2.3.6)" \
			;; \
		ss|ts|km|ns|tn) \
			LOCALES_DEPENDS="locales (>= 2.3.5-12) | belocs-locales-data | locales-all" \
			;; \
		sr) \
			LOCALES_DEPENDS="locales (>= 2.3.6.ds1-5) |  belocs-locales-data | locales-all" \
			;; \
		as|or|nr) \
			LOCALES_DEPENDS="locales (>= 2.3.6.ds1-1) | locales-all (>= 2.3.6.ds1-1)" \
			;; \
		*) \
			LOCALES_DEPENDS="locales | belocs-locales-data | locales-all" \
			;; \
	    esac; \
	    L10N_COMMON=; \
	    if [ "$(USE_COMMON_DOCDIR)" = y ]; then \
		case "$$LCODE" in \
		   en-us) ;; \
		   *) L10N_COMMON='libreofficeVER-l10n-common (>= $${base-version}), '; \
		esac; \
		LOCALES_DEPENDS="libreoffice$(VER)-common (>= \$${base-version}) | language-support-translations-$$CCODE, libreoffice$(VER)-common (<< 1:\$${next-basis-version}~) | language-support-translations-$$CCODE"; \
	    fi; \
	    sed -e "s|@LNAME@|$$LNAME|g" -e "s|@LCODE@|$$LCODE|g" \
		-e "s|@CCODE@|$$CCODE|g" \
	        -e "s|@FONT_SUGGESTS@|$$FONT_SUGGESTS|g" \
	        -e "s;@LOCALES_DEPENDS@;$$LOCALES_DEPENDS;g" \
	        -e "s:@L10N_COMMON@:$$L10N_COMMON:g" \
			-e "s|libreofficeVER|libreoffice$(VER)|g" \
		-e "s|@LDAP_LIB@|$(LDAP_LIB)|g" \
	        >> debian/control < debian/control.lang.in; \
	done

ifneq "$(HELPISOS)" ""
	for LNUM in $(HELPISOS) ; do \
	    LNAME=`$(OOO_BUILD_TREE)/bin/openoffice-xlate-lang -l $$LNUM | perl -e 'print ucfirst(<STDIN>);'`; \
	    LCODE=`$(OOO_BUILD_TREE)/bin/openoffice-xlate-lang -i $$LNUM | tr A-Z a-z`; \
	    CCODE=`echo $$LCODE | sed 's/-.*//'`; \
	    sed -e "s|@LNAME@|$$LNAME|g" -e "s|@LCODE@|$$LCODE|g" \
		-e "s|@CCODE@|$$CCODE|g" \
			-e "s|libreofficeVER|libreoffice$(VER)|g" \
	        >> debian/control < debian/control.help.in; \
	done
	# en_US is in -common
	perl -pi -e 's|(Depends: libreoffice$(VER)-writer \| language-support-translations-en), libreoffice$(VER)-l10n-en-us|\1|' \
		debian/control
	perl -pi -e 's|(Depends: libreoffice$(VER)-writer, libreoffice$(VER)-l10n-en-us)|\1, ttf-devanagari-fonts|' \
		debian/control
endif
ifeq "$(PKGSOURCE)" "libreoffice$(VER)"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.ure.in
ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(BUILD_JARS_NATIVE)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.gcj.in
  endif
endif
ifneq "$(OOO_MONO_ARCHS)" ""
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.mono.in
endif
ifneq "$(OOO_NPSOPLUGIN_ARCHS)" ""
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.mozilla.in
endif
ifneq "$(OOO_OGLTRANS_ARCHS)" ""
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.ogltrans.in
endif
ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(ENABLE_MEDIAWIKI)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.mediawiki.in
  endif
  ifeq "$(ENABLE_REPORTDESIGN)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.reportdesign.in
  endif
endif
ifeq "$(ENABLE_MINIMIZER)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.minimizer.in
endif
ifeq "$(ENABLE_PRESENTER_CONSOLE)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.presenter.in
endif
ifeq "$(ENABLE_PDFIMPORT)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.pdfimport.in
endif
ifeq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.fonts.in
endif
ifeq "$(BUILD_DBG_PACKAGE)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.debug.in
endif
ifeq "$(PACKAGE_SDK)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.sdk.in
endif
ifeq "$(BUILD_KDE)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.kde.in
	  perl -pi -e 's/ libreoffice$(VER)-gnome,/ libreoffice-gnome | libreoffice$(VER)-kde,/' debian/control
endif
ifeq "$(ENABLE_SDBC_POSTGRESQL)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.postgresql.in
endif
ifeq "$(ENABLE_MYSQLNATIVE)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.mysql.in
endif
ifeq "$(ENABLE_EVO2)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.evolution.in
endif
ifeq "$(ENABLE_KDEAB)" "y"
	sed -e "s|libreofficeVER|libreoffice$(VER)|g" \
		>> debian/control < debian/control.kab.in
endif
endif # ifeq "$(PKGSOURCE)" "libreoffice$(VER)"

	perl -pi -e "s,%OOO_ARCHS%,$(OOO_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_BASE_ARCHS%,$(OOO_BASE_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_NO_BASE_ARCHS%,$(OOO_NO_BASE_ARCHS),"g debian/control
	perl -pi -e "s,%OOO_JAVA_ARCHS%,$(OOO_JAVA_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_GCJ_ARCHS%,$(OOO_GCJ_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_MONO_ARCHS%,$(OOO_MONO_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_NPSOPLUGIN_ARCHS%,$(OOO_NPSOPLUGIN_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_OGLTRANS_ARCHS%,$(OOO_OGLTRANS_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_BINFILTER_ARCHS%,$(OOO_BINFILTER_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_STLPORT_ARCHS%,$(OOO_STLPORT_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_GCJ_JDK_ARCHS%,$(OOO_GCJ_JDK_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_ARCH_DEP_EXTENSIONS_ARCHS%,$(OOO_ARCH_DEP_EXTENSIONS_ARCHS),g" debian/control

ifeq (he,$(findstring he,$(LANGPACKISOS)))
	perl -pi -e 's/libreoffice-help-he$$/libreoffice-help-he, libreoffice-ctl-he/' debian/control
endif

ifeq (sk,$(findstring sk,$(HELPISOS)))
	perl -pi -e 's/(Depends:.*)libreoffice-l10n-sk(.*)$$/\1libreoffice-l10n-sk, libreoffice-help-cs\2/' debian/control
endif
ifeq (pt-BR,$(findstring pt-BR,$(LANGPACKISOS)))
	perl -pi -e 's/libreoffice2-l10n-pt-br$$/libreoffice2-l10n-pt-br, broffice/' debian/control
	perl -pi -e 's/libreoffice2-l10n-pt-br$$/libreoffice2-l10n-pt-br, broffice/' debian/control
	perl -pi -e 's/libreoffice2-l10n-pt-br$$/libreoffice2-l10n-pt-br, broffice/' debian/control
endif
	perl -pi -e 's/Package: libreoffice$(VER)-help-en-us/Package: libreoffice$(VER)-help-en-us\nReplaces: libreoffice$(VER)-common (<< 1:3.0.0~dev300m28)/' debian/control

ifeq "$(ENABLE_GIO)" "y"
	perl -pi -e 's/VFS/GIO/' debian/control
	# fix up "GNOME GIO"
	perl -pi -e 's/GNOME GIO/GIO/' debian/control
endif

ifneq "$(LENNY_BACKPORT)" "y"	
	perl -pi -e "s/(Build-Conflicts: .*)/\1, base-files (= 5)/" debian/control
endif
ifneq "$(SQUEEZE_BACKPORT)" "y"	
	perl -pi -e "s/(Build-Conflicts: .*)/\1, base-files (= 6.0)/" debian/control
endif

ifneq (,$(filter hsqldb, $(SYSTEM_STUFF)))
	perl -pi -e "s/(Build-Conflicts: .*)/\1, libhsqldb-java (>= $(HSQLDB_TOONEWVER)~)/" debian/control
endif

ifneq "$(USE_SYSTEM_STLPORT)" "y"
	# at least here it crashes the build in some funny way.
	perl -pi -e "s/(Build-Conflicts: .*)/\1, libstlport4.6-dev/" debian/control
endif

ifeq (4.4,$(SYSTEM_GCC_VERSION))
	perl -pi -e 's/flex \|/flex (>= 2.5.25-7) |/' debian/control
endif

	python debian/scripts/joinctrl.py < debian/control > debian/control.tmp
	mv debian/control.tmp debian/control

ifeq "$(VER)" ""
	# no conflict with "universal Linux packages" as they have the version in their
	# names thankfully now
	perl -pi -e 's/libreoffice-unbundled, //' debian/control
endif

	# make -l10n-fi suggest libreoffice-spellcheck-fi to
	# match myspell-fi and libreoffice-soikko/-voikko
	perl -pi -e 's/myspell-dictionary-fi/myspell-dictionary-fi | libreoffice-spellcheck-fi/' debian/control
	# similar for tr (libreoffice-zemberek)
	perl -pi -e 's/myspell-dictionary-tr/myspell-dictionary-tr | libreoffice-spellcheck-tr/' debian/control

ifeq "$(BUILD_KDE)" "y"
	perl -pi -e 's/GConf backend$$/GConf backend\n  * libreoffice$(VER)-kde: KDE UI Plugin and KDE File Picker support/' debian/control
endif

ifeq "$(ENABLE_LDAP)" "y"
	perl -pi -e 's/paperconf$$/paperconf\n  * $(LDAP_LIB): LDAP client library; needed for LibreOffice getting its\n    profiles from LDAP/' debian/control
endif

ifneq "$(DICT_DIR)" "/usr/share/hunspell"
	perl -pi -e 's/^Breaks:.*myspell.*\n//' debian/control
endif

.DELETE_ON_ERROR: debian/control

build: build-arch build-indep
build-arch: $(STAMP_DIR)/build
build-indep: $(STAMP_DIR)/build

# All 'important' targets have 2 lines.  The one that is run by
# dpkg-buildpackage or the user, and the one that does the actual work.  This
# indirection is needed so that the 'stamp' files that signify when a rule is
# done can be located in a separate 'stampdir'.  Recall that make has no way to
# know when a goal has been met for a phony target (like "build" or "install").
#
# At the end of each stampdir target, be sure to run the command 'touch $@'
# so that the target will not be run again.  Removing the file will make
# make run the target over.

configure: $(OOO_BUILD_TREE)/config.status
$(OOO_BUILD_TREE)/config.status: $(OOO_BUILD_TREE)/configure
	dh_testdir

	# Make sure needed scripts are executable
	set -e;\
	for FILE in debian/scripts/move-if-change \
		    debian/scripts/cleandupes \
		    debian/scripts/get_libebook_dep.sh \
		    $(OOO_BUILD_TREE)/configure \
		    $(OOO_BUILD_TREE)/bin/[a-z]* \
		    $(OOO_BUILD_TREE)/bin/piece/[a-z]*; \
	do \
	  chmod 755 $$FILE ;\
	done

	mkdir -p $(STAMP_DIR)

ifeq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
	if [ ! -f libreoffice-build/distro-configs/UbuntuL10n.conf.in.saved ]; then \
	  cp -p libreoffice-build/distro-configs/UbuntuL10n.conf.in \
	    libreoffice-build/distro-configs/UbuntuL10n.conf.in.saved; \
	fi
endif

ifeq "$(USE_SOURCE_TARBALLS)" "y"
	cp -a sources/* $(OOO_BUILD_TREE)/src
endif
	cp -a ext-sources-$(OOO_BUILD_TREE)/* $(OOO_BUILD_TREE)/src

ifneq ($(GCC_VERSION),)
  ifneq ($(GCC_VERSION),snapshot)
	# create links for gcc and g++ (and gij and gcj), ooo-build does not
	# honour overriding CC and CXX and we need to use gcc/g++ 4.0 or /
	# ant.mk wants gcj at the moment...
	mkdir -p $(CURDIR)/debian/usr/bin
	ln -sf /usr/bin/$(CC_PREFIX)gcc-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gcc
	ln -sf /usr/bin/$(CC_PREFIX)g++-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/g++
	ln -sf /usr/bin/$(CC_PREFIX)gcc-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/$(CC_PREFIX)gcc
	ln -sf /usr/bin/$(CC_PREFIX)g++-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/$(CC_PREFIX)g++
	#ln -sf /usr/bin/$(CC_PREFIX)gcj-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gcj
	#ln -sf /usr/bin/gij-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gij
  else
    ifneq "$(CC_PREFIX)" ""
	mkdir -p $(CURDIR)/debian/usr/bin
	ln -sf /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gcc $(CURDIR)/debian/usr/bin/gcc
	ln -sf /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)g++ $(CURDIR)/debian/usr/bin/g++
	ln -sf /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gcj $(CURDIR)/debian/usr/bin/gcj
	ln -sf /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gij $(CURDIR)/debian/usr/bin/gij
    endif
  endif
endif

ifeq "$(BUILD_KDE)" "y"
	# be sure we use the right moc, it's an alternative and can point
	# to either Qt3 or Qt4s moc.
	mkdir -p $(CURDIR)/debian/usr/bin
	ln -sf /usr/bin/moc-qt$(KDE_VER) $(CURDIR)/debian/usr/bin/moc
endif

ifeq "$(USE_STLPORT)" "y"
  ifeq "$(USE_SYSTEM_STLPORT)" "y"
	# stlport home
	if [ ! -d stlport ]; then \
		mkdir -p stlport; \
		ln -sf /usr/include/stlport stlport/stlport; \
		ln -sf /usr/lib stlport/lib; \
	fi
  endif
endif

ifneq "$(BUILD_ONLY_EN_US)" "y"
  ifneq "$(LANGPACKISOS)" "en-US"
	# copy and extract extra GSIs 
	#cp translation-updates-*/GSI*.sdf.* $(OOO_BUILD_TREE)/src
	find $(OOO_BUILD_TREE)/src -name "*.sdf.bz2" -exec bunzip2 -k \{\} \;
	for i in `find $(OOO_BUILD_TREE)/src/*.sdf.gz`; do gunzip -dc "$$i" > \
		$(OOO_BUILD_TREE)/src/`basename $$i .gz`; done
	# work around broken stuff in the GSI breaking the build in svx
	for iso in lv sh-YU sr-CS; do \
	  case " $(LANGPACKISOS) " in *\ $$iso\ *) ;; *) continue; esac; \
	  [ -f $(OOO_BUILD_TREE)/src/GSI_$$iso.sdf ] || continue; \
	  TMP=`mktemp -q`; \
	  grep -v OOO_LICENSE $(OOO_BUILD_TREE)/src/GSI_$$iso.sdf \
	    > $$TMP && mv $$TMP $(OOO_BUILD_TREE)/src/GSI_$$iso.sdf; \
	done
	# we change the message, and those translations therefore don't match anymore.
	for iso in $(LANGPACKISOS); do \
	  [ -f $(OOO_BUILD_TREE)/src/GSI_$$iso.sdf ] || continue; \
	  if [ "$$iso" = "ku" ]; then continue; fi; \
	  TMP=`mktemp -q`; \
	  grep -v ExtensionNotPresent\.src.*RID_STR_EXTENSION_NOT_PRESENT $(OOO_BUILD_TREE)/src/GSI_$$iso.sdf \
	    > $$TMP && mv $$TMP $(OOO_BUILD_TREE)/src/GSI_$$iso.sdf; \
	done
    ifeq (he,$(findstring he,$(LANGPACKISOS)))
	# TKOS_BUILD_DATE is bogus, too
	if [ -f $(OOO_BUILD_TREE)/src/GSI_he.sdf ]; then \
	 TMP=`mktemp -q`; \
	 sed -e "s/TKOS_BUILD_DATE//g" < $(OOO_BUILD_TREE)/src/GSI_he.sdf \
	   > $$TMP && mv $$TMP $(OOO_BUILD_TREE)/src/GSI_he.sdf ; \
	fi
    endif
    ifeq (da,$(findstring da,$(LANGPACKISOS)))
	if [ -f $(OOO_BUILD_TREE)/src/GSI_da.sdf ]; then \
	  perl -pi -e 's/\s\(.*på engelsk\)//' $(OOO_BUILD_TREE)/src/GSI_da.sdf; \
	fi
    endif
    ifeq (es,$(findstring es,$(LANGPACKISOS)))
	if [ -f $(OOO_BUILD_TREE)/src/GSI_es.sdf ]; then \
	  perl -pi -e 's/(.*SC_OPCODE_SUBSTITUTE.*)REEMPLAZAR(.*)/\1SUSTITUIR\2/' $(OOO_BUILD_TREE)/src/GSI_es.sdf; \
	fi
    endif
  endif
endif

	# Make convenience link
	if [ ! -L build ]; then ln -s $(SOURCE_TREE) build ; fi

	# Make sure we have /proc mounted - otherwise idlc will fail later.
	test -r /proc/version

	# hrmpf. Empty in ooo-build and patch does not give them to us but
	# configure need them. Create them...
	touch $(OOO_BUILD_TREE)/distro-configs/Win32.conf.in
	touch $(OOO_BUILD_TREE)/distro-configs/Solaris.conf.in

	cd $(OOO_BUILD_TREE) ; \
		PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) ../$(OOO_BUILD_TREE)/configure $(CONFIGURE_FLAGS)

	touch $@

build: $(STAMP_DIR)/build
$(STAMP_DIR)/build: $(OOO_BUILD_TREE)/config.status
	dh_testdir

ifeq "$(BUILD_KDE)" "n"
	# hack to tell we want crystal icons nevertheless and they should be
	# extracted...
	if ! grep -q crystal $(OOO_BUILD_TREE)/bin/setup; then \
		cp $(OOO_BUILD_TREE)/bin/setup $(OOO_BUILD_TREE)/bin/setup.bak && \
		cat $(OOO_BUILD_TREE)/bin/setup.bak \
			| sed -e s/\'industrial/\'industrial\ crystal/ \
			> $(OOO_BUILD_TREE)/bin/setup && rm $(OOO_BUILD_TREE)/bin/setup.bak; \
	fi
endif

	cd $(OOO_BUILD_TREE) ; \
		PATH=$(BUILD_PATH) \
		LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) \
		DEFAULT_TO_ENGLISH_FOR_PACKING=1 \
		VERBOSE=$(if $(filter y,$(ON_BUILDD)),$(ON_BUILDD_VERBOSITY),true) \
		ARCH_FLAGS=$(ARCH_FLAGS) \
		TMP=`mktemp -q -d` \
		$(MAKE)

	# apparently setting this here globally doesn't work, so hack around.
	# If we don't do this we get loads of harmless, but log-bloating
	# warnings
	if ! grep fakeroot $(OOO_BUILD_TREE)/bin/setup; then \
		perl -pi -e 's,LD_LIBRARY_PATH=\"(.*)\",LD_LIBRARY_PATH=\"/usr/lib/libfakeroot:\1\",' $(OOO_BUILD_TREE)/bin/setup; \
	fi

	# DPKG is only set on with-EPM build what we don't do and the menu stuff
	# is only built wenn DPKG is set.. Same with PKGFORMAT.
	cd $(SOURCE_TREE)/sysui; \
		. $(CURDIR)/$(SOURCE_TREE)/*Env*.sh; \
		PATH=$(BUILD_PATH) DPKG="dpkg" PKGFORMAT="deb" NO_PKG_MANGLE=go-away \
		../solenv/bin/build.pl && ../solenv/bin/deliver.pl

ifneq (nocheck,$(findstring nocheck,$(DEB_BUILD_OPTIONS)))
	$(CURDIR)/debian/rules test
endif

	touch $@

test: 
	# some test library needed for the tests...
	if [ ! -f $(SOURCE_TREE)/test/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/lib/libtest.so ]; then \
		cd $(SOURCE_TREE)/test && \
			. $(CURDIR)/$(SOURCE_TREE)/*Env*.sh; \
			export PATH=$(BUILD_PATH); \
			../solenv/bin/build.pl; \
			../solenv/bin/deliver.pl; \
	fi
ifeq "$(RUN_SMOKETEST)" "y"
	# sigh. the new smoketest needs a archive/install/en-US/OOo_*_install_*.tar.gz
	# build it.
	if [ ! -d $(SOURCE_TREE)/instsetoo_native/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/OpenOffice/archive/install/en-US ]; then \
		cd $(SOURCE_TREE)/instsetoo_native/util && \
			. $(CURDIR)/$(SOURCE_TREE)/*Env*.sh; \
			export PATH=$(BUILD_PATH); \
			EPM=yes PKGFORMAT=archive WITH_LANG="en-US" dmake openoffice; \
	fi
	# smoketest
ifeq "$(ARCH)" "armel"
	cd $(SOURCE_TREE)/smoketestoo_native && \
		patch -p1 < $(CURDIR)/debian/smoketest/patches/smoketest-disable-db-insert-delete-seek-tests.diff
endif
	cd $(SOURCE_TREE)/smoketestoo_native && \
		. $(CURDIR)/$(SOURCE_TREE)/*Env*.sh; \
		export PATH=$(BUILD_PATH); \
		export TMPDIR=$(CURDIR)/debian/smoketest; \
		export JAVA_HOME=$(TEST_JAVA_HOME); \
		export SAL_USE_VCLPLUGIN="svp"; \
		export HOME=$(CURDIR)/debian/smoketest; \
		 ../solenv/bin/build.pl
	# doesn't get cleaned up.. (at least the dirs, the contents are gone)
	cd $(CURDIR)/debian/smoketest && \
	find . -noleaf -maxdepth 1 ! -name "patches" ! -name "." -exec rm -rf {} \;
ifeq "$(ARCH)" "armel"
	cd $(SOURCE_TREE)/smoketestoo_native && \
		patch -p1 -R < $(CURDIR)/debian/smoketest/patches/smoketest-disable-db-insert-delete-seek-tests.diff
endif
endif
ifeq "$(RUN_SUBSEQUENT_TESTS)" "y"
	cd $(SOURCE_TREE) && \
		export PATH=$(BUILD_PATH); \
		. $(CURDIR)/$(SOURCE_TREE)/*Env*.sh; \
		chmod 755 solenv/bin/subsequenttests && \
		solenv/bin/subsequenttests
endif

install: $(STAMP_DIR)/install
$(STAMP_DIR)/install: $(STAMP_DIR)/build
	dh_testdir
	dh_testroot

	if [ -x /usr/bin/dh_prep ]; then dh_prep; else dh_clean -k; fi
	rm -f debian/*.install debian/*.dirs

	# remove those for safety in case the languages might change on
	# testbuilds. then the /*/ in dh_installdocs in binary-* won't work
	# anymore (different dirs)
	rm -rf $(SOURCE_TREE)/instsetoo_native/util/LibreOffice

	# install LibreOffice.
	# somehow in the installer LD_LIBRARY_PATH doesn't contain
	# /usr/lib/libfakeroot anymore, causiong loads of ERROR:'s from
	# ld.so. Set LD_PRELOAD to the full path here manually.
	cd $(OOO_BUILD_TREE)/; PATH=$(BUILD_PATH) \
		 LD_LIBRARY_PATH="/usr/lib/libfakeroot:$(BUILD_LD_LIBRARY_PATH)" \
		 LD_PRELOAD=/usr/lib/libfakeroot/libfakeroot-$(shell update-alternatives --query fakeroot | grep Value: | cut -d"-" -f2).so \
		 DESTDIR=$(CURDIR)/debian/tmp $(MAKE) install

	# prepare install/dir files for dh
	for i in `cd $(CURDIR)/debian/tmp/pkg; ls -1 | xargs`; do \
		echo "$${i}/usr/* usr" > debian/$$i.install; \
		if [ "$$i" = "libreoffice-common" ]; then \
			echo "$${i}/etc/* etc" >> debian/$$i.install; \
		fi; \
		(cd debian/tmp/pkg/$$i; find . -type d | sed -e "s,\./,,") \
			> debian/$$i.dirs; \
	done

	# the english resources should be in -common
	cat debian/libreoffice-l10n-en-US.dirs >> debian/libreoffice-common.dirs
	cat debian/libreoffice-l10n-en-US.install >> debian/libreoffice-common.install
	rm -f debian/libreoffice-l10n-en-US.dirs debian/libreoffice-l10n-en-US.install

	# fixup case (-l10n-pt-BR -> l10n-pt-br etc.)
	for iso in $(ISOS); do \
		pkgiso=`echo $$iso | tr A-Z a-z`; \
		if [ "$$iso" != "$$pkgiso" ]; then \
			if [ "$$iso" != "en-US" -a \
			  -e debian/libreoffice-l10n-$$iso.dirs -a \
			  -e debian/libreoffice-l10n-$$iso.install ]; then \
				mv debian/libreoffice-l10n-$$iso.dirs \
					debian/libreoffice-l10n-$$pkgiso.dirs; \
				mv debian/libreoffice-l10n-$$iso.install \
					debian/libreoffice-l10n-$$pkgiso.install; \
			fi; \
			if [ -e debian/libreoffice-help-$$iso.dirs -a \
			  -e debian/libreoffice-help-$$iso.install ]; then \
				mv debian/libreoffice-help-$$iso.dirs \
					debian/libreoffice-help-$$pkgiso.dirs; \
				mv debian/libreoffice-help-$$iso.install \
					debian/libreoffice-help-$$pkgiso.install; \
			fi; \
		fi; \
	done

	# fix up still sneaking in ./. They break dh_install (it installs
	# but wrongly complains about it as not-installed files)
	perl -pi -e 's,\./,,' debian/libreoffice$(VER)-common.install
	perl -pi -e 's,\./,,' debian/ure.install

ifneq "$(HELPISOS)" ""
	# remove non-packaged localized help. This a) saves space 
	# and b) we need this for the following dh_install as there will be
	# no .install files created and dh_install will warn/fail due
	# to non-installed files.
	for iso in $(filter-out en-US,$(LANGPACKISOS)); do \
		if ! `echo $(HELPISOS) | grep -q $$iso` || [ "$$iso" = "sk" ] ; then \
			pkgiso=`echo $$iso | tr A-Z a-z`; \
			rm -rf debian/tmp/pkg/libreoffice-help-$$iso; \
			rm -f debian/libreoffice-help-$$pkgiso.dirs; \
			rm -f debian/libreoffice-help-$$pkgiso.install; \
		fi; \
	done
endif

	# FIXME: Fix in ooo-build
	rm -rf debian/tmp/pkg/libreoffice-qa-tools

	dh_installdirs -A
ifeq "$(PKGSOURCE)" "libreoffice$(VER)"
	dh_install -A --sourcedir=debian/tmp/pkg --fail-missing
else
	dh_install -A --sourcedir=debian/tmp/pkg
endif

	rm -rf debian/tmp/pkg

	# move help to /usr/share
	for iso in $(HELPISOS); do \
		pkgiso=`echo $$iso | tr A-Z a-z`; \
		if [ -e $(PKGDIR)-help-$$pkgiso/usr ]; then \
			mv $(PKGDIR)-help-$$pkgiso/usr/lib \
				$(PKGDIR)-help-$$pkgiso/usr/share; \
		fi; \
	done

ifeq (sk,$(findstring sk,$(HELPISOS)))
	# add fake sk help
	mkdir -p $(PKGDIR)-help-sk/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/help
	ln -s cs \
		$(PKGDIR)-help-sk/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/help/sk
endif

	# add registered-components dir
	mkdir -p $(PKGDIR)-core/$(OOBASISDIR)/registered-components

ifeq "$(PKGSOURCE)" "libreoffice$(VER)"
ifeq "$(ENABLE_JAVA)" "y"
	# move officebean.jar into -officebean (They will be moved out of -core
	# in the install-arch target). Do the /usr/share move here already
	mkdir -p $(PKGDIR)-core/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/program/classes; \
	mv $(PKGDIR)-common/$(OODIR)/program/classes/officebean.jar \
		$(PKGDIR)-core/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/program/classes

  ifeq "$(PACKAGE_BASE)" "y"
	# move sdbc_hsqldb.jar into -base (do the move
	# to /usr/share/java here directly, we do it for the "rest"
	# later
	mkdir -p $(PKGDIR)-base/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/program/classes; \
	mkdir -p $(PKGDIR)-base/$(OODIR)/program/classes; \
	mv $(PKGDIR)-common/$(OODIR)/program/classes/sdbc_hsqldb.jar \
		$(PKGDIR)-base/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/program/classes; \
	ln -s $(shell echo /$(OOBASISDIR) | sed -e s/lib/share/)/program/classes/sdbc_hsqldb.jar \
		$(PKGDIR)-base/$(OODIR)/program/classes/sdbc_hsqldb.jar

    ifeq (,$(filter hsqldb, $(SYSTEM_STUFF)))
	# we need this in -base. Otherwise we get unwanted package differences
	# in the unstable version and backports which might use internal hsqldb
	mkdir -p $(PKGDIR)-base/$(OODIR)/program/classes
	mv $(PKGDIR)-common/$(OODIR)/program/classes/hsqldb.jar \
		$(PKGDIR)-base/$(OODIR)/program/classes
    endif
  else
	# remove sdbc_hsqldb.jar. otherwise ends up in -java-common
	rm -f $(PKGDIR)-common/$(OODIR)/program/classes/sdbc_hsqldb.jar
  endif
endif

ifeq "$(ENABLE_MONO)" "y"
	mkdir -p $(PKGDIR)-core/$(OOBRANDDIR)/ure/lib; \
	mv $(PKGDIR)-common/$(OOBRANDDIR)/ure/lib/cli_uno_bridge.dll*  \
		$(PKGDIR)-core/$(OOBRANDDIR)/ure/lib
	mv $(PKGDIR)-common/$(OOBRANDDIR)/ure/lib/mono_loader*.uno.so \
		$(PKGDIR)-core/$(OOBRANDDIR)/ure/lib
	for i in `dh_listpackages | grep libuno-cli`; do \
		if echo "$$i" | grep -q oootypes; then p=libreoffice-common; d=$(OODIR)/program; \
		else p=ure; d=$(OOBRANDDIR)/ure/lib; fi; \
		rm -rf debian/$$i && mkdir -p -m755 debian/$$i/usr/lib/cli/uno-`echo $$i | perl -pi -e 's/.*(\d.\d).*/$$1/'`; \
		mv debian/$$p/$$d/`echo $$i | sed -e "s/libuno-//" | sed -e "s/-cil$$//" | sed -e "s/-/_/" | perl -pi -e 's/\d.\d//'`.dll \
			debian/$$i/usr/lib/cli/uno-`echo $$i | perl -pi -e 's/.*(\d.\d).*/$$1/'`; \
		mv debian/$$p/$$d/`echo $$i | sed -e "s/libuno-//" | sed -e "s/-cil$$//" | sed -e "s/-/_/" | perl -pi -e 's/\d.\d//'`.config \
			debian/$$i/usr/lib/cli/uno-`echo $$i | perl -pi -e 's/.*(\d.\d).*/$$1/'`/`echo $$i | sed -e "s/libuno-//" | sed -e "s/-cil$$//" | sed -e "s/-/_/" | perl -pi -e 's/\d.\d//'`.dll.config; \
	ln -s `echo $$i | sed -e "s/libuno-//" | sed -e "s/-cil$$//" | sed -e "s/-/_/" | perl -pi -e 's/\d.\d//'`.dll.config \
			debian/$$i/usr/lib/cli/uno-`echo $$i | perl -pi -e 's/.*(\d.\d).*/$$1/'`/`echo $$i | sed -e "s/libuno-//" | sed -e "s/-cil$$//" | sed -e "s/-/_/" | perl -pi -e 's/\d.\d//'`.config; \
		mv debian/$$p/$$d/policy.*.`echo $$i | sed -e "s/libuno-//" | sed -e "s/-cil$$//" | sed -e "s/-/_/" | perl -pi -e 's/\d.\d//'`.dll \
			debian/$$i/usr/lib/cli/uno-`echo $$i | perl -pi -e 's/.*(\d.\d).*/$$1/'`; \
	done
endif

	# remove eventually sneaked in .testtoolrc
	rm -f $(PKGDIR)-common/$(OODIR)/program/.testtoolrc

ifeq "$(BUILD_GTK)" "y"
	# Gtk quickstarter for the eggtrtray stuff, so to -gtk (via -gnome)
	mkdir -p -m755 $(PKGDIR)-gnome/$(OOBRANDDIR)/share/xdg
	mv $(PKGDIR)-common/$(OOBRANDDIR)/share/xdg/qstart.desktop \
		$(PKGDIR)-gnome/$(OOBRANDDIR)/share/xdg
	# gnome config stuff, should land in gnome upstream even but...
	mkdir -p $(PKGDIR)-gnome/$(OODIR)/share/registry
	mv $(PKGDIR)-common/$(OODIR)/share/registry/gnome.xcd \
		$(PKGDIR)-gnome/$(OODIR)/share/registry
endif

ifeq "$(PACKAGE_SDK)" "y"
	# move gengal stuff into -dev
	mkdir -p $(PKGDIR)-dev/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/gengal* \
		$(PKGDIR)-dev/$(OODIR)/program
	mv $(PKGDIR)-common/$(OODIR)/program/gengal  \
		$(PKGDIR)-dev/$(OODIR)/program
else
	rm -f $(PKGDIR)-core/$(OODIR)/program/gengal*
	rm -f $(PKGDIR)-common/$(OODIR)/program/gengal
endif

ifeq "$(PACKAGE_SDK)" "y"
	# move SDK documentation into own package
	rm -rf $(PKGDIR)-dev-doc
	mkdir -p $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev-doc
	mv $(PKGDIR)-dev/usr/share/doc/libreoffice \
		$(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev && \
	mv $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev/sdk/docs \
		$(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev
	mkdir -p $(PKGDIR)-dev-doc/$(OOSDKDIR)
	mv $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev/sdk/index.html \
		$(PKGDIR)-dev-doc/$(OOSDKDIR)
	rm -f $(PKGDIR)-dev/$(OOSDKDIR)/index.html
	rm -rf $(PKGDIR)-dev/usr/share/doc/libreoffice \
		$(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev/sdk
	mv $(PKGDIR)-dev/$(OOSDKDIR)/examples \
		$(PKGDIR)-dev-doc/$(OOSDKDIR)
endif

	# fixup ure-link symlink. The move is done in install-arch
	# but the link is in -common so we need to do it here.
	cd $(PKGDIR)-common/$(OOBASISDIR) && \
		rm ure-link && ln -sf /$(OOUREDIR) ure-link
endif # ifeq "$(PKGSOURCE)" "libreoffice$(VER)"

	find debian/tmp ! -perm -200 | xargs -r chmod u+w

	touch $@

#
# Generate maintainer scripts
maintscripts: $(STAMP_DIR)/maintscripts
$(STAMP_DIR)/maintscripts: $(wildcard debian/shell-lib*Env*.sh) $(wildcard debian/*.preinst.in) $(wildcard debian/*.postinst.in) $(wildcard debian/*.prerm.in) $(wildcard debian/*.postrm.in) debian/scripts/vars.$(ARCH) debian/control
	dh_testdir

	rm -f debian/*.{pre,post}{inst,rm}

	# generate maintainer scripts from *.in
	for PKG in $(PACKAGES); do \
	  if [ "$(DIST)" = Ubuntu ]; then \
	    case $$PKG in *l10n-*|*help-*) continue; esac; \
	  fi; \
	  for FILE in postinst postrm preinst prerm triggers; do \
	    MAINTSCRIPT=debian/$$PKG.$$FILE ; \
	    if [ -e $$MAINTSCRIPT.in ]; then \
	      sed -n '1,/^#INCLUDE_SHELL_LIB#$$/p' < $$MAINTSCRIPT.in | sed -e '/^#INCLUDE_SHELL_LIB#$$/d' > $$MAINTSCRIPT; \
	      if echo $(ARCH_DEP_PACKAGES) | grep -q $$PKG; then \
	        grep LIBSUFFIX debian/scripts/vars.$(ARCH) >> $$MAINTSCRIPT; \
	        grep PLATFORMID debian/scripts/vars.$(ARCH) >> $$MAINTSCRIPT; \
	      fi; \
	      echo "" >> $$MAINTSCRIPT; \
	      if grep -q conffile $$MAINTSCRIPT.in; then \
		 cat debian/shell-lib-conffiles.sh >> $$MAINTSCRIPT; \
	      elif egrep -q "(add|remove|validate|sync)_extension" $$MAINTSCRIPT.in; then \
		 cat debian/shell-lib-extensions.sh >> $$MAINTSCRIPT; \
	      elif grep -q services_rdb $$MAINTSCRIPT.in; then \
		 cat debian/shell-lib-components.sh >> $$MAINTSCRIPT; \
	      fi; \
	      sed -n '/^#INCLUDE_SHELL_LIB#$$/,$$p' < $$MAINTSCRIPT.in | sed -e '/^#INCLUDE_SHELL_LIB#$$/d' >> $$MAINTSCRIPT; \
	      perl -pi -e "s/\@LANGPACKISOS\@/$(LANGPACKISOS)/" $$MAINTSCRIPT; \
	      perl -pi -e "s,\@OODIR\@,$(OODIR),g" $$MAINTSCRIPT; \
	      perl -pi -e "s,\@OOBRANDDIR\@,$(OOBRANDDIR),g" $$MAINTSCRIPT; \
	      perl -pi -e "s,\@OOBASISDIR\@,$(OOBASISDIR),g" $$MAINTSCRIPT; \
	      perl -pi -e "s/\@VER\@/$(VER)/g" $$MAINTSCRIPT; \
	    fi; \
	  done; \
	done

	touch $@

# Install files generated by setup into package directories
langpacks: $(STAMP_DIR)/langpacks
$(STAMP_DIR)/langpacks: $(STAMP_DIR)/install $(STAMP_DIR)/install-indep $(OOO_BUILD_TREE)/bin/openoffice-xlate-lang

	# remove empty uno_packages dirs somehow in the langpacks(?)
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/uno_packages; \
	done

	# remove ooo dirs somehow in the langpacks(?)
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/dict/ooo; \
	done

	# remove extra license files
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OOBRANDDIR)/licenses; \
		rm -f $(PKGDIR)-l10n-$$iso/$(OOBRANDDIR)/share/readme/LICENSE*; \
	done

	# remove extra readme files
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OOBRANDDIR)/readmes; \
		rm -f $(PKGDIR)-l10n-$$iso/$(OOBRANDDIR)/share/readme/README*; \
	done

	# remove empty help directories
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(shell echo $(OODIR) | sed -e s/lib/share/)/help; \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/help; \
	done

	# install technical.dic
	for iso in $(LANGPACKISOS); do \
		if [ "$$iso" = "en-US" ]; then pkg=common; else pkg=l10n-`echo $$iso | tr A-Z a-z`; fi; \
		mkdir -p $(PKGDIR)-$$pkg/$(OODIR)/share/wordbook/$$iso; \
		install -m644 $(SOURCE_TREE)/extras/source/wordbook/technical.dic \
			$(PKGDIR)-$$pkg/$(OODIR)/share/wordbook/$$iso/technical.dic; \
	done

	# replace duplicate files in the langpacks with symlinks
	TMP=`mktemp -q`; \
		fdupes --quiet --recurse --sameline --size \
		debian/libreoffice$(VER)-common/$(OODIR) \
		$(foreach d,$(shell echo $(filter-out en-US,$(LANGPACKISOS)) | tr A-Z a-z),debian/libreoffice$(VER)-l10n-$(d)/$(OODIR)) \
		> $$TMP && \
	debian/scripts/cleandupes --base=libreoffice$(VER) --prefix=debian < $$TMP && rm -f $$TMP

ifeq "$(DIST)" "Debian"
	# install Debian presentation template
	otps=`cd debian/templates; echo *.otp`; \
	for iso in $(LANGPACKISOS); do \
	  [ "$$iso" = "en-US" ] && continue; \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  mkdir -p $(PKGDIR)-l10n-$$pkgiso/$(OODIR)/share/template/$$iso/presnt; \
	  for otp in $$otps; do \
	    ln -sf ../../en-US/presnt/$$otp \
	    $(PKGDIR)-l10n-$$pkgiso/$(OODIR)/share/template/$$iso/presnt/$$odt; \
	  done; \
	done
endif

ifeq "$(DIST)" "Ubuntu"
	# install Ubuntu templates
	otps=`cd debian/ubuntu; echo *.otp`; \
	for iso in $(LANGPACKISOS); do \
	  [ "$$iso" = "en-US" ] && continue; \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  mkdir -p $(PKGDIR)-l10n-$$pkgiso/$(OODIR)/share/template/$$iso/presnt; \
	  for otp in $$otps; do \
	    ln -sf ../../en-US/presnt/$$otp \
	    $(PKGDIR)-l10n-$$pkgiso/$(OODIR)/share/template/$$iso/presnt/$$odt; \
	  done; \
	done
endif

ifeq (pt-BR,$(findstring pt-BR,$(LANGPACKISOS)))
  ifeq "$(PKGSOURCE)" "libreoffice$(VER)"
	# move pt-BR ("BrOffice") splashs into -l10n-pt-br
	mkdir -p $(PKGDIR)-l10n-pt-br/$(OOBRANDDIR)/program
	mv $(PKGDIR)-common/$(OOBRANDDIR)/program/intro-pt_BR.png \
		$(PKGDIR)-l10n-pt-br/$(OOBRANDDIR)/program/intro-pt_BR.png
	mv $(PKGDIR)-common/$(OOBRANDDIR)/program/about-pt_BR.png \
		$(PKGDIR)-l10n-pt-br/$(OOBRANDDIR)/program/about-pt_BR.png
  else
	# FIXME: -common is not installed
	cp build/default_images/brand/intro-pt_BR.png \
		$(PKGDIR)-l10n-pt-br/$(OOBRANDDIR)/program/intro-pt_BR.png
	cp build/default_images/brand/about-pt_BR.png \
		$(PKGDIR)-l10n-pt-br/$(OOBRANDDIR)/program/about-pt_BR.png
  endif
else
	# remove them, unneeded and would gerate file conflicts
	rm -f $(PKGDIR)-common/$(OOBRANDDIR)/program/intro-pt_BR.png
	rm -f $(PKGDIR)-common/$(OOBRANDDIR)/program/about-pt_BR.png
endif

	touch $@

native-jars: $(STAMP_NATIVE_JARS)
$(STAMP_NATIVE_JARS): $(STAMP_DIR)/install
	rm -rf debian/tmp/native-jars
	mkdir -p debian/tmp/native-jars/gcj
	cp -a \
	    $(PKGDIR)-common/$(OOBASISDIR)/program/classes/*.jar \
		debian/tmp/native-jars/
	cp -a \
	    $(PKGDIR)-core/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/program/classes/*.jar \
	        debian/tmp/native-jars/
ifeq "$(PACKAGE_BASE)" "y"
	cp -a \
	    $(PKGDIR)-base/$(OODIR)/program/classes/*.jar \
	        debian/tmp/native-jars/
endif
	: # remove problematic ones
	rm -f debian/tmp/native-jars/ridl.jar
ifneq "$(USE_SYSTEM_SAXON)" "y"
	rm -f debian/tmp/native-jars/saxon9.jar
endif
	: # compile the others
	# the Debian i386 buildd, although having much ram still OOMs without
	# this (at unoil.jar).
	# Also the native jar build is MUCH faster with this. But it
	# won't be accepted into the official java-gcj-compat package so this
	# hack here is needed.
	if [ -e /usr/lib/gcc/aotcompile.py ]; then \
		aotcompile_py=/usr/lib/gcc/aotcompile.py; \
	elif [ -e /usr/share/pyshared/aotcompile.py ]; then \
		aotcompile_py=/usr/share/pyshared/aotcompile.py; \
	fi && \
	cp $$aotcompile_py debian/scripts
	cd debian/scripts && \
		patch -p0 < $(CURDIR)/debian/aotcompile-256M-default.diff
	PYTHONPATH="debian/scripts:$(shell echo $(PYTHON_SITE) | sed -e s,debian/python-uno,,)" \
	AOT_MAKEFLAGS=-j$(NUM_CPUS) aot-compile -L /usr/lib/gcj/$(OODIRNAME) \
	    debian/tmp/native-jars debian/tmp/native-jars/gcj
	gcj-dbtool -n debian/tmp/native-jars/tmp.db 64
	find debian/tmp/native-jars/gcj -name '*.db' -print0 \
	    | xargs -r -0 \
		gcj-dbtool -m debian/tmp/native-jars/tmp.db debian/tmp/native-jars/tmp.db || exit 1
	rm -f debian/tmp/native-jars/gcj/*.db
	touch $@

# Install files generated by setup into arch-dependent package directories
install-arch: $(STAMP_DIR)/install-arch
$(STAMP_DIR)/install-arch: $(STAMP_DIR)/install $(STAMP_NATIVE_JARS)
	dh_testdir
	dh_testroot
	umask 022

ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"

ifeq "$(ENABLE_EVO2)" "y"
	debian/ure/$(OOBRANDDIR)/ure/bin/regcomp -revoke \
		-r $(PKGDIR)-core/$(OODIR)/program/services.rdb \
		-br $(PKGDIR)-core/$(OODIR)/program/services.rdb \
		-c 'vnd.sun.star.expand:$$OOO_BASE_DIR/program/libevoab$(LIBSUFFIX).so'
endif
ifeq "$(ENABLE_KDEAB)" "y"
	debian/ure/$(OOBRANDDIR)/ure/bin/regcomp -revoke \
		-r $(PKGDIR)-core/$(OODIR)/program/services.rdb \
		-br $(PKGDIR)-core/$(OODIR)/program/services.rdb \
		-c 'vnd.sun.star.expand:$$OOO_BASE_DIR/program/libkab1.so'
endif
ifeq "$(BUILD_BINFILTERS)" "y"
	debian/ure/$(OOBRANDDIR)/ure/bin/regcomp -revoke \
		-r $(PKGDIR)-core/$(OODIR)/program/services.rdb \
		-br $(PKGDIR)-core/$(OODIR)/program/services.rdb \
		-c 'vnd.sun.star.expand:$$OOO_BASE_DIR/program/libbf_migratefilter$(LIBSUFFIX).so'
endif

	# the regcomps above fail after done once, force install again
	rm -f $(STAMP_DIR)/install

	# move the URE to /usr/lib/ure
	mv debian/ure/$(OOBRANDDIR)/ure debian/ure/usr/lib
	rmdir debian/ure/$(OOBRANDDIR)
	# move URE Java stuff to /usr/share/java
	mkdir -p debian/ure/usr/share/java
ifeq "$(ENABLE_JAVA)" "y"
	mv debian/ure/$(OOUREDIR)/share/java/* \
		debian/ure/usr/share/java
	cd debian/ure/$(OOUREDIR)/share/java && \
		for i in $(CURDIR)/debian/ure/usr/share/java/*.jar; do \
			ln -sf `echo $$i | sed -e 's,$(CURDIR)/debian/ure,,'` `basename $$i`; \
		done
	# fix up Class-Path of jurt.jar to be able to find libjpipe.so.
	# See See http://www.openoffice.org/servlets/ReadMsg?list=dev&msgNo=27765
	t=`mktemp -q -d`; \
	mkdir -p $$t && cd $$t && \
	unzip $(CURDIR)/debian/ure/usr/share/java/jurt.jar \
		META-INF/MANIFEST.MF && \
	perl -pi -e 's#../../lib/#../../lib/ /$(OOUREDIR)/lib/#g' \
		META-INF/MANIFEST.MF && \
	zip -r $(CURDIR)/debian/ure/usr/share/java/jurt.jar \
		META-INF/MANIFEST.MF && \
	cd $(CURDIR) && rm -rf $$t
endif
	# and the public libs to uno-libs3
	mkdir -p debian/uno-libs3/$(OOUREDIR)/lib
	for i in debian/ure/$(OOUREDIR)/lib/libuno_*so.3; do \
		mv $$i debian/uno-libs3/$(OOUREDIR)/lib; \
		ln -sf /$(OOUREDIR)/lib/`basename $$i` debian/uno-libs3/usr/lib/`basename $$i`; \
	done

ifeq "$(BUILD_KDE)" "y"
	mkdir -p -m755 $(PKGDIR)-kde/$(OODIR)/program
	mkdir -p -m755 $(PKGDIR)-kde/$(OOBRANDDIR)/program
	for f in fps_kde*.uno.so libvclplug_kde*.so; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-kde/$(OODIR)/program || exit 1 ;\
	done
  ifeq "$(KDE_VER)" "3"
	mv $(PKGDIR)-core/$(OOBRANDDIR)/program/kdefilepicker \
		$(PKGDIR)-kde/$(OOBRANDDIR)/program
  endif

	# install files for KDEs "create new" ...
	mkdir -p $(PKGDIR)-kde/usr/share/templates/.source
	for i in $(SOURCE_TREE)/extras/source/shellnew/*; do \
		cp $$i $(PKGDIR)-kde/usr/share/templates/.source/`basename $$i`; \
	done
	cat debian/templates/soffice-template.desktop.in \
		| sed -e "s/@APP@/Writer/" \
		| sed -e "s/@EXT@/odt/" \
		| sed -e "s/@TYPE@/text/" \
		> $(PKGDIR)-kde/usr/share/templates/soffice.odt.desktop
	cat debian/templates/soffice-template.desktop.in \
		| sed -e "s/@APP@/Calc/" \
		| sed -e "s/@EXT@/ods/" \
		| sed -e "s/@TYPE@/spreadsheet/" \
		> $(PKGDIR)-kde/usr/share/templates/soffice.ods.desktop
	cat debian/templates/soffice-template.desktop.in \
		| sed -e "s/@APP@/Impress/" \
		| sed -e "s/@EXT@/odp/" \
		| sed -e "s/@TYPE@/presentation/" \
		> $(PKGDIR)-kde/usr/share/templates/soffice.odp.desktop
	cat debian/templates/soffice-template.desktop.in \
		| sed -e "s/@APP@/Draw/" \
		| sed -e "s/@EXT@/odg/" \
		| sed -e "s/@TYPE@/drawing/" \
		> $(PKGDIR)-kde/usr/share/templates/soffice.odg.desktop
endif
ifeq "$(ENABLE_KDEAB)" "y"
	rm -rf $(PKGDIR)-kab
	mkdir -p -m755 $(PKGDIR)-kab/$(OODIR)/program
	for f in libkab*so; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-kab/$(OODIR)/program || exit 1 ;\
	done
endif

	# move the GNOME stuff which are *not* in gid_Module_Optional_Gnome
	# (which is moved into -gnome in package-ooo) into -gnome
	mkdir -p -m755 $(PKGDIR)-gnome/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/gnome-open-url.bin $(PKGDIR)-gnome/$(OODIR)/program || exit 1
ifeq "$(BUILD_GTK)" "y"
	for f in fps_gnome.uno.so libvclplug_gtk*.so; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-gnome/$(OODIR)/program || exit 1;\
	done
	for f in libeggtray* libqstart_gtk*; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-gnome/$(OODIR)/program || exit 1;\
	done
endif

	# split out gtk stuff
	rm -rf $(PKGDIR)-gtk
	mkdir -p -m755 $(PKGDIR)-gtk/$(OODIR)/program
	mv $(PKGDIR)-gnome/$(OODIR)/program/* $(PKGDIR)-gtk/$(OODIR)/program/
	mkdir -p -m755 $(PKGDIR)-gtk/$(OOBRANDDIR)/share
ifeq "$(BUILD_GTK)" "y"
	mv $(PKGDIR)-gnome/$(OOBRANDDIR)/share/xdg $(PKGDIR)-gtk/$(OOBRANDDIR)/share && \
		rmdir $(PKGDIR)-gnome/$(OOBRANDDIR)/share
  ifeq "$(ENABLE_GIO)" "y"
	mv $(PKGDIR)-gtk/$(OODIR)/program/ucpgio1.uno.so \
		$(PKGDIR)-gnome/$(OODIR)/program/
  endif
  ifeq "$(ENABLE_GVFS)" "y"
	mv $(PKGDIR)-gtk/$(OODIR)/program/ucpgvfs1.uno.so \
		$(PKGDIR)-gnome/$(OODIR)/program/
  endif
  ifeq "$(ENABLE_GCONF)" "y"
	mv $(PKGDIR)-core/$(OODIR)/program/gconfbe* \
		$(PKGDIR)-gnome/$(OODIR)/program
  endif
endif

ifeq "$(ENABLE_EVO2)" "y"
	mkdir -p -m755 $(PKGDIR)-evolution/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libevoab*.so $(PKGDIR)-evolution/$(OODIR)/program
endif

ifeq "$(PACKAGE_NPSOPLUGIN)" "y"
	# libnpsoplugins.so two times with different sizes? Oh my.
	# Upstream has it this way, too, but..
	mkdir -p -m755 debian/mozilla-libreoffice$(VER)/$(OODIR)/program
	mkdir -p -m755 debian/mozilla-libreoffice$(VER)/$(OOBRANDDIR)/program
	for f in libnpsoplugin.so nsplugin; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$f debian/mozilla-libreoffice$(VER)/$(OODIR)/program; \
	done
	mv $(PKGDIR)-core/$(OOBRANDDIR)/program/libnpsoplugin.so debian/mozilla-libreoffice$(VER)/$(OOBRANDDIR)/program
	cd debian/mozilla-libreoffice$(VER) && \
		mkdir -p usr/lib/mozilla/plugins && \
			ln -sf /$(OOBRANDDIR)/program/libnpsoplugin.so \
			   usr/lib/mozilla/plugins/libnpsoplugin.so
else
	rm -f $(PKGDIR)-core/$(OODIR)/program/libnpsoplugin.so
	rm -f $(PKGDIR)-core/$(OODIR)/program/nsplugin
endif

	# OOo's package split sucks...
	mv $(PKGDIR)-core/$(OODIR)/program/libsw* \
		$(PKGDIR)-writer/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libsd$(LIBSUFFIX)* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdd* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdui* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdfilt* \
		$(PKGDIR)-draw/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/slideshow.uno.so \
		$(PKGDIR)-impress/$(OODIR)/program
	mkdir -p -m755 $(PKGDIR)-base/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libdba* \
		$(PKGDIR)-base/$(OODIR)/program
	# except for libdba680l?.so itself
	rm -rf $(PKGDIR)-base-core
	mkdir -p $(PKGDIR)-base-core/$(OODIR)/program
	mv $(PKGDIR)-base/$(OODIR)/program/libdba$(LIBSUFFIX).so \
		 $(PKGDIR)-base-core/$(OODIR)/program
	for i in odbcbase dbpool2 odbc sdbc2 mysql adabas; do \
		mv $(PKGDIR)-core/$(OODIR)/program/lib$$i* \
		   $(PKGDIR)-base/$(OODIR)/program; \
	done
ifeq "$(ENABLE_JAVA)" "y"
	for i in jdbc hsqldb; do \
		mv $(PKGDIR)-core/$(OODIR)/program/lib$$i* \
		   $(PKGDIR)-base/$(OODIR)/program; \
	done
endif
	mv $(PKGDIR)-core/$(OODIR)/program/libflat*so \
		$(PKGDIR)-base/$(OODIR)/program
	# http://www.openoffice.org/issues/show_bug.cgi?id=107779
	mv $(PKGDIR)-calc/$(OODIR)/program/libcalc*so \
		$(PKGDIR)-base/$(OODIR)/program; \

	# move vba stuff into -calc, they are calc-only and linked to
	# libsc*
	for i in libvbaobj vbaevents; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$i*uno.so \
			$(PKGDIR)-calc/$(OODIR)/program; \
	done

ifeq "$(ENABLE_JAVA)" "y"
  ifneq (,$(filter hsqldb, $(SYSTEM_STUFF)))
	# link to system hsqldb
	mkdir -p $(PKGDIR)-base/$(OODIR)/program/classes
	ln -sf /usr/share/java/hsqldb.jar \
	        $(PKGDIR)-base/$(OODIR)/program/classes/hsqldb.jar
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
	rm -rf $(PKGDIR)-officebean
	mkdir -p -m755 $(PKGDIR)-officebean/$(OODIR)/program/classes
	mkdir -p -m755 $(PKGDIR)-officebean/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/program/classes
	mv $(PKGDIR)-core/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/program/classes/officebean.jar \
		$(PKGDIR)-officebean/$(shell echo $(OOBASISDIR) | sed -e s/lib/share/)/program/classes
	ln -s $(shell echo /$(OOBASISDIR) | sed -e s/lib/share/)/program/classes/officebean.jar \
		 $(PKGDIR)-officebean/$(OODIR)/program/classes/officebean.jar
	mv $(PKGDIR)-core/$(OODIR)/program/libofficebean.so \
		$(PKGDIR)-officebean/$(OODIR)/program
endif

	mkdir -p -m755 $(PKGDIR)-base/usr/share/applications \
	               $(PKGDIR)-core/usr/share/applications

ifeq "$(USE_OOO_BUILD_DESKTOPS)" "n"
	# menu files from sysui
	dirname="`cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare >/dev/null; pwd`" ;\
	for p in writer calc impress draw math base; do \
		mkdir -p -m755 $(PKGDIR)-$$p/usr/share/applications ;\
		sed -e 's,Exec=$${UNIXBASISROOTNAME} \(.*\) %U,Exec=libreoffice$(VER) \1 %U,' \
		    -e 's,Icon=$${WITHOUTDOTUNIXPRODUCTNAME},Icon=libreoffice,' \
		    -e 's,Name=$${PRODUCTNAME} $${PRODUCTVERSION},Name=LibreOffice $(VER),' \
		    -e 's,Name\[pt_BR\]=$${PRODUCTNAME_BR} $${PRODUCTVERSION},Name[pt_BR]=BrOffice $(VER),' \
		    -e 's/  / /' \
		   < $$dirname/$$p.desktop \
		   > $(PKGDIR)-$$p/usr/share/applications/libreoffice$(VER)-$$p.desktop || exit 1 ;\
	done
  ifeq (tr,$(findstring tr,$(LANGPACKISOS)))
	sed -i 's,Comment\[tr\]=$${PRODUCTNAME} $${PRODUCTVERSION},Comment[tr]=LibreOffice $(VER),' \
		$(PKGDIR)-calc/usr/share/applications/libreoffice$(VER)-calc.desktop
  endif
  ifeq (da,$(findstring da,$(LANGPACKISOS)))
	sed -i 's,Comment\[da\]=$${PRODUCTNAME} $${PRODUCTVERSION},Comment[da]=LibreOffice $(VER),' \
		$(PKGDIR)-writer/usr/share/applications/libreoffice$(VER)-writer.desktop
  endif
  ifeq "$(BUILD_GTK)" "y"
	# qstart.desktop is different to the above. Should be handled by
	# --with-unix-wrapper of ooo-build but that somehow doesn't work as
	# expected. FIXME.
	PRODUCTVERSION=`grep PRODUCTVERSION $(SOURCE_TREE)/sysui/desktop/productversion.mk | head -n 1 | cut -d"=" -f2 | sed -e s/\ //g`; \
	sed -i -e "s,Exec=libreoffice$$PRODUCTVERSION,Exec=ooffice$(VER)," \
		-e "s,Name=LibreOffice $$PRODUCTVERSION,Name=LibreOffice $(VER)," \
		-e "s/  / /" \
		$(PKGDIR)-gtk/$(OOBRANDDIR)/share/xdg/qstart.desktop
  endif
	# we don't need the share/xdgs except qstart
	for f in `find debian -name '*.desktop' | grep xdg | grep -v qstart`; do \
		rm -f $$f; done
	for f in `find debian -name '*.desktop' ! -name "*soffice.od*"`; do \
		sed -i -e '/^Comment\[de\]/s/- *\([a-zA-Z0-9]*\) *macht.*glich.*$$/mit \1/' $$f; \
		if ! grep -q X-KDE-Protocols $$f; then \
			echo 'X-KDE-Protocols=file,http,smb,ftp,webdav' >> $$f; \
		fi; \
	done
	sed -i -e 's/Office;/Office;Graphics;/' $(PKGDIR)-draw/usr/share/applications/libreoffice$(VER)-draw.desktop
	# invalid, according to lintian. make it shut up.
	for i in writer calc impress draw math base; do \
		perl -pi -e 's/Application;//; s/X-Red-Hat-Base;//; s/X-SuSE-Core-Office;//; s/X-MandrivaLinux-.*;//;' $(PKGDIR)-$$i/usr/share/applications/libreoffice$(VER)-$$i.desktop; \
	done
	perl -pi -e 's/Application;//' $(PKGDIR)-gtk/$(OOBRANDDIR)/share/xdg/qstart.desktop
else
	# menu files from $(OOO_BUILD_TREE)/desktop
	for p in writer calc impress draw math base; do \
		mkdir -p -m755 $(PKGDIR)-$$p/usr/share/applications ;\
			sed -e '/^TryExec=.*/d' \
			    -e "s,^Exec=.*,Exec=ooffice$(VER) -$$p %U," \
			    -e "s,^Icon=.*,Icon=ooo-$$p," \
			    -e '/^Name=/s,  , ,' \
			    -e 's/@STARTUPNOTIFY@/true/' \
			    -e '/^Categories/s/Office/Application;Office/' \
				$(OOO_BUILD_TREE)/desktop/$$p.desktop \
				> $(PKGDIR)-$$p/usr/share/applications/libreoffice$(VER)-$$p.desktop || exit 1 ;\
	done
endif
	# add version to .menu and .lintian-overrides
	for i in base calc draw impress math writer; do \
		cat debian/libreoffice$(VER)-$$i.menu.in \
			| sed -e s/@VER@/$(VER)/ \
			> debian/libreoffice$(VER)-$$i.menu; \
	done; \
	for i in base calc core draw impress math writer; do \
		cat debian/libreoffice$(VER)-$$i.lintian-overrides.in \
			| sed -e s/@VER@/$(VER)/ \
			| sed -e s/@BASIS_VERSION@/$(BASIS_VERSION)/ \
			> debian/libreoffice$(VER)-$$i.lintian-overrides; \
	done

ifeq "$(BUILD_PYUNO)" "y"
	# PyUNO packaging
	install -d $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/uno.py $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/unohelper.py $(PYTHON_SITE)
	touch debian/python-uno/$(OODIR)/program/pythonloader.unorc
	chmod u+w debian/python-uno/$(OODIR)/program/pythonloader.unorc
	( echo '[Bootstrap]'; \
	  echo 'PYTHONHOME=file:///usr/lib/python$(PYMAJOR).$(PYMINOR)' ;\
	  echo 'PYTHONPATH=$$PYTHONHOME $$PYTHONHOME/site-packages $$PYTHONHOME/lib-dynload $$PYTHONHOME/lib-tk $$ORIGIN' \
	) > debian/python-uno/$(OODIR)/program/pythonloader.unorc
	chmod u-w debian/python-uno/$(OODIR)/program/pythonloader.unorc

	mkdir -p debian/python-uno/usr/share/doc/python-uno
	cp -r $(SOURCE_TREE)/pyuno/demo \
	  debian/python-uno/usr/share/doc/python-uno; \
	for i in $(SOURCE_TREE)/pyuno/doc/*; do \
		cp $$i debian/python-uno/usr/share/doc/python-uno; \
	done
	cd debian/python-uno/usr/share/doc/python-uno && \
		find . -type d -name "CVS" | xargs -r rm -rf
endif

ifeq "$(ENABLE_MONO)" "y"
	# Mono bindings
	mkdir -p -m755 debian/cli-uno-bridge/$(OOUREDIR)/lib
	mv $(PKGDIR)-core/$(OOBRANDDIR)/ure/lib/cli_uno_bridge.dll \
		debian/cli-uno-bridge/$(OOUREDIR)/lib
	mv $(PKGDIR)-core/$(OOBRANDDIR)/ure/lib/cli_uno_bridge.dll.config \
		debian/cli-uno-bridge/$(OOUREDIR)/lib
	mv $(PKGDIR)-core/$(OOBRANDDIR)/ure/lib/mono_loader*.uno.so \
		debian/cli-uno-bridge/$(OOUREDIR)/lib

	mv debian/ure/$(OOUREDIR)/lib/libcli* \
		debian/cli-uno-bridge/$(OOUREDIR)/lib
	mkdir -p debian/cli-uno-bridge/usr/lib/pkgconfig
	cat debian/tmp/usr/lib/pkgconfig/mono-$(OODIRNAME).pc \
		| sed -e s,/usr/lib/mono/openoffice,/usr/lib/cli/uno-1.0,g \
		| sed -e s,/usr/lib/cli/uno-1.0/cli_uno_bridge.dll,/$(OOUREDIR)/lib/cli_uno_bridge.dll, \
		> debian/cli-uno-bridge/usr/lib/pkgconfig/mono-$(OODIRNAME).pc
endif

	# should be empty now, remove if there
	rm -rf $(PKGDIR)-core/$(OOBRANDDIR)/ure

ifeq "$(PACKAGE_SDK)" "y"
  ifeq "$(USE_SYSTEM_STLPORT)" "y"
	# when we use external stlport, we just can and should do a symlink
	# for the SDK includes
	cd $(PKGDIR)-dev/usr/include/$(OODIRNAME) && \
		rm -rf stl && ln -s /usr/include/stlport stl
  endif
  ifeq "$(ENABLE_JAVA)" "y"
	# move SDK Java stuff into /usr/share/java
	rm -f $(PKGDIR)-dev/$(OOSDKDIR)/classes
	mkdir -p $(PKGDIR)-dev/$(shell echo $(OOSDKDIR) | sed -e s/lib/share/)/classes/win
	mkdir -p $(PKGDIR)-dev/$(OOSDKDIR)/classes/win
	mkdir -p $(PKGDIR)-dev/$(OOSDKDIR)/classes/com/sun/star/lib/loader
	mkdir -p $(PKGDIR)-dev/$(shell echo $(OOSDKDIR) | sed -e s/lib/share/)/classes/com/sun/star/lib/loader
	mv $(PKGDIR)-dev/usr/share/libreoffice/sdk/classes/com/sun/star/lib/loader/* \
		$(PKGDIR)-dev/$(shell echo $(OOSDKDIR) | sed -e s/lib/share/)/classes/com/sun/star/lib/loader && \
	mv $(PKGDIR)-dev/usr/share/$(OODIRNAME)/sdk/classes/win \
		$(PKGDIR)-dev/$(shell echo $(OOSDKDIR) | sed -e s/lib/share/)/classes
	chmod 644 $(PKGDIR)-dev/$(shell echo $(OOSDKDIR) | sed -e s/lib/share/)/classes/win/unowinreg.dll
	cd $(PKGDIR)-dev/$(OOSDKDIR)/classes/com/sun/star/lib/loader && \
		for i in $(CURDIR)/$(PKGDIR)-dev/$(shell echo $(OOSDKDIR) | sed -e s/lib/share/)/classes/com/sun/star/lib/loader/*.class; do \
			ln -s `echo $$i | sed -e 's,$(CURDIR)/$(PKGDIR)-dev,,'` `basename $$i`; \
		done
	ln -s $(PKGDIR)-dev/$(shell echo $(OOSDKDIR) | sed -e s/lib/share/)/classes/win/unowinreg.dll \
		$(PKGDIR)-dev/$(OOSDKDIR)/classes/win/unowinreg.dll
	rm -rf $(PKGDIR)-dev/usr/share/libreoffice/sdk
  endif
	chmod 644 $(PKGDIR)-dev/$(OOSDKDIR)/configure.pl
	for i in csh csh.in; do \
		perl -pi -e 's,/usr/bin/csh,/bin/csh,'\
			$(PKGDIR)-dev/$(OOSDKDIR)/setsdkenv_unix.$$i; \
	done
	# create wrapper scripts
	cd $(PKGDIR)-dev/$(OOSDKDIR)/bin && \
	for i in *; do \
		mv $$i $$i.bin && \
		( \
		  echo "#!/bin/sh"; \
		  echo "# wrapper script for OOos SDK programs"; \
		  echo ""; \
		  echo 'LD_LIBRARY_PATH=/$(OOUREDIR)/lib /$(OOSDKDIR)/bin/`basename $$0`.bin "$$@"'; \
		) > $$i; \
		chmod 755 $$i; \
	done
        # remove symlink, it should be in -dev-doc
	cd $(PKGDIR)-dev/$(OOSDKDIR) && \
		rm docs

	# install gsicheck into -dev
	install -m755 $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$UPD/$$OUTPATH$$PROEXT)/bin/gsicheck \
		$(PKGDIR)-dev/$(OODIR)/program/gsicheck.bin
	( \
	  echo '#! /bin/sh'; \
	  echo 'LD_LIBRARY_PATH=$${LD_LIBRARY_PATH:+$$LD_LIBRARY_PATH:}/$(OODIR)/program'; \
	  echo 'export LD_LIBRARY_PATH'; \
	  echo 'exec /$(OODIR)/program/gsicheck.bin "$$@"'; \
	) > $(PKGDIR)-dev/$(OODIR)/program/gsicheck
	chmod 755 $(PKGDIR)-dev/$(OODIR)/program/gsicheck

	# fix permissions
	find $(PKGDIR)-dev/usr/share/idl/$(OODIRNAME) -type f -exec chmod 644 {} \;

endif

ifeq "$(INTERNAL_STDLIBS)" "y"
	# we have to do this manually; specifying --without-system-stdlibs
	# won't work because the odering of the configure arguments...
	LIBSTDCPP=`readlink `PATH=$(BUILD_PATH) g++ --print-file-name=libstdc++.so``; \
	LIBGCC=`readlink `PATH=$(BUILD_PATH) gcc --print-file-name=libgcc_s.so``; \
	LIBSTDCPP_SOVER=`echo $$LIBSTDCPP | sed -e 's/.*\.//'`; \
	LIBGCC_SOVER=`echo $$LIBGCC | sed -e 's/.*\.//'`; \
	cp $$LIBSTDCPP debian/ure/$(OOUREDIR)/lib; \
	cp $$LIBGCC debian/ure/$(OOUREDIR)/lib; \
	echo "libstdc++	$$LIBSTDCPP_SOVER" > debian/shlibs.override.stdlibs; \
	echo "libgcc_s	$$LIBGCC_SOVER" >> debian/shlibs.override.stdlibs
endif
ifeq "$(USE_STLPORT)" "y"
  ifeq "$(USE_SYSTEM_STLPORT)" "y"
	rm -f debian/ure/$(OOUREDIR)/lib/libstlport*
	ln -s `readlink -f /usr/lib/libstlport_gcc.so` \
		debian/ure/$(OOUREDIR)/lib/libstlport_gcc.so
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(BUILD_JARS_NATIVE)" "y"
    ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
	rm -rf $(PKGDIR)-gcj/usr/lib/gcj
	mkdir -p $(PKGDIR)-gcj/usr/lib/gcj/$(OODIRNAME)
	cp -p debian/tmp/native-jars/gcj/* $(PKGDIR)-gcj/usr/lib/gcj/$(OODIRNAME)
	mkdir -p $(PKGDIR)-gcj/usr/share/gcj/classmap.d
	cp -p debian/tmp/native-jars/tmp.db \
		$(PKGDIR)-gcj/usr/share/gcj/classmap.d/libreoffice.db
    endif
  endif
endif

ifeq "$(USE_COMMON_DOCDIR)" "y"
	# install some docs (docdir of the uno-libs3 package). 
	mkdir -p $(PKGDIR)-base/usr/share/doc/uno-libs3
	cp $(OOO_BUILD_TREE)/doc/using-mysql-databases.txt \
	  $(PKGDIR)-base/usr/share/doc/uno-libs3
	cp $(OOO_BUILD_TREE)/doc/data-from-remote-mysql-server.txt \
	  $(PKGDIR)-base/usr/share/doc/uno-libs3
else
	# install some docs.
	mkdir -p $(PKGDIR)-base/usr/share/doc/libreoffice$(VER)-base
	cp $(OOO_BUILD_TREE)/doc/using-mysql-databases.txt \
		$(PKGDIR)-base/usr/share/doc/libreoffice$(VER)-base
	cp $(OOO_BUILD_TREE)/doc/data-from-remote-mysql-server.txt \
		$(PKGDIR)-base/usr/share/doc/libreoffice$(VER)-base
endif

ifeq "$(PACKAGE_SDK)" "y"
  ifeq "$(ENABLE_JAVA)" "y"
	# install the UNO Java sources for e.g. eclipse
	mkdir -p $(CURDIR)/$(PKGDIR)-dev/usr/share/java
	cd $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/bin && \
		for i in juh jurt jut ridl unoloader; do \
			cp $${i}_src.zip \
			  $(CURDIR)/$(PKGDIR)-dev/usr/share/java; \
		done
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
	# hrmpf, again something like that, we really need to find the root cause for that
	ln -s libjava_uno.so \
		debian/ure/$(OOUREDIR)/lib/libjava_uno
endif

	# remove empty resource directories
	for i in draw base writer impress calc math; do \
		rm -rf $(PKGDIR)-$$i/$(OODIR)/program/resource; \
	done

ifneq "$(ENABLE_REPORTDESIGN)" "y"
	# unneeded. a no-Java arch, so the report-builder can't work anyway.
	# (and we need to remove it here anyway as it otherwise would end up
	# in -base)
	rm -f $(PKGDIR)-base/$(OODIR)/program/librpt*
else
  ifeq "$(PACKAGE_BASE)" "y"
	# move rpt stuff into -report-builder-bin
	rm -rf $(PKGDIR)-report-builder
	rm -rf $(PKGDIR)-report-builder-bin
	mkdir -p $(PKGDIR)-report-builder-bin/$(OODIR)/program
	mv $(PKGDIR)-base/$(OODIR)/program/librpt* \
		$(PKGDIR)-report-builder-bin/$(OODIR)/program
  endif
endif

ifeq "$(ENABLE_MINIMIZER)" "y"
	rm -rf $(PKGDIR)-presentation-minimizer
	mkdir -p $(PKGDIR)-presentation-minimizer/$(OOBRANDDIR)/share/extensions
	mv debian/tmp/$(OOBRANDDIR)/share/extensions/presentation-minimizer \
		$(PKGDIR)-presentation-minimizer/$(OOBRANDDIR)/share/extensions
	rm -f $(PKGDIR)-presentation-minimizer/$(OOBRANDDIR)/share/extensions/presentation-minimizer/registration/LICENSE
endif

ifeq "$(ENABLE_PRESENTER_CONSOLE)" "y"
	rm -rf $(PKGDIR)-presenter-console
	mkdir -p $(PKGDIR)-presenter-console/$(OOBRANDDIR)/share/extensions
	mv debian/tmp/$(OOBRANDDIR)/share/extensions/presenter-screen \
		$(PKGDIR)-presenter-console/$(OOBRANDDIR)/share/extensions
endif

ifeq "$(ENABLE_SDBC_POSTGRESQL)" "y"
	rm -rf $(PKGDIR)-sdbc-postgresql
	mkdir -p $(PKGDIR)-sdbc-postgresql/$(OOBRANDDIR)/share/extensions/postgresql-sdbc-$(shell grep ^PQ_SDBC_M $(SOURCE_TREE)/connectivity/source/drivers/postgresql/makefile.mk | cut -d"=" -f2 | xargs | sed -e s/\ /\./g)
	cd $(PKGDIR)-sdbc-postgresql/$(OOBRANDDIR)/share/extensions/postgresql-sdbc-$(shell grep ^PQ_SDBC_M $(SOURCE_TREE)/connectivity/source/drivers/postgresql/makefile.mk | cut -d"=" -f2 | xargs | sed -e s/\ /\./g) && \
		unzip $(CURDIR)/$(SOURCE_TREE)/connectivity/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/lib/postgresql-sdbc-$(shell grep ^PQ_SDBC_M $(SOURCE_TREE)/connectivity/source/drivers/postgresql/makefile.mk | cut -d"=" -f2 | xargs | sed -e s/\ /\./g).oxt 
endif

ifeq "$(ENABLE_MYSQLNATIVE)" "y"
	rm -rf $(PKGDIR)-mysql-connector
	mkdir -p $(PKGDIR)-mysql-connector/$(OOBRANDDIR)/share/extensions
	mv debian/tmp/$(OOBRANDDIR)/share/extensions/mysql-connector-ooo \
		$(PKGDIR)-mysql-connector/$(OOBRANDDIR)/share/extensions
	rm -f $(PKGDIR)-mysql-connector/$(OOBRANDDIR)/share/extensions/mysql-connector-ooo/registration/LICENSE
endif

ifeq "$(ENABLE_PDFIMPORT)" "y"
	rm -rf $(PKGDIR)-pdfimport
	mkdir -p $(PKGDIR)-pdfimport/$(OOBRANDDIR)/share/extensions
	mv debian/tmp/$(OOBRANDDIR)/share/extensions/pdfimport \
		$(PKGDIR)-pdfimport/$(OOBRANDDIR)/share/extensions
	rm -f $(PKGDIR)-pdfimport/$(OOBRANDDIR)/share/extensions/pdfimport/registration/LICENSE
endif

	# move services.rdb to /var/lib/openoffice
	mkdir -p $(PKGDIR)-core/var/lib/$(OODIRNAME)/basis$(OOVER)/program
	mv $(PKGDIR)-core/usr/lib/$(OODIRNAME)/basis$(OOVER)/program/services.rdb \
		$(PKGDIR)-core/var/lib/$(OODIRNAME)/basis$(OOVER)/program/services.rdb
	ln -s /var/lib/$(OODIRNAME)/basis$(OOVER)/program/services.rdb \
		$(PKGDIR)-core/usr/lib/$(OODIRNAME)/basis$(OOVER)/program/services.rdb

	for i in $(ARCH_DEP_PACKAGES); do \
		if [ -e debian/$$i.bug-script.in ]; then \
			cat debian/$$i.bug-script.in \
				| sed -e "s/@PLATFORMID@/$(PLATFORMID)/" \
				| sed -e "s/@BASIS_VERSION@/$(BASIS_VERSION)/" \
				> debian/$$i.bug-script; \
		fi ;\
	done
	# generate .links files from *.in	
	for PKG in $(ARCH_DEP_PACKAGES); do \
	  LINKS=debian/$$PKG.links ; \
	  if [ -e $$LINKS.in ]; then \
	    sed -e "s/\@LIBSUFFIX\@/$(LIBSUFFIX)/g" \
		-e "s#\@OOBASISDIR\@#$(OOBASISDIR)#g" \
		< $$LINKS.in > $$LINKS ; \
	  fi; \
	done

endif # ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"

	touch $@

# Install files generated by setup into arch-independent package directories
install-indep: $(STAMP_DIR)/install-indep
#$(STAMP_DIR)/install-indep: debian/libreoffice$(VER).install 
#$(STAMP_DIR)/install-indep: debian/libreoffice$(VER)-mimelnk.install 
#$(STAMP_DIR)/install-indep: debian/libreoffice$(VER).dirs
$(STAMP_DIR)/install-indep: $(STAMP_DIR)/install
	dh_testdir
	dh_testroot

ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
	perl -pi -e 's,/bin,/usr/bin,' \
		 debian/libreoffice$(VER)-emailmerge/$(OODIR)/program/mailmerge.py

ifneq "$(USE_GSTREAMER)" "y"
	# sound doesn't work anyway, remove the .wav files to save space
	rm -rf $(PKGDIR)-common/$(OODIR)/share/gallery/sounds
	rm -f $(PKGDIR)-common/$(OODIR)/share/gallery/sg9.*
endif

	rm -f $(PKGDIR)-common/$(OODIR)/program/oo_product.bmp

	# Extract and install icons
	cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/bin/desktop-integration && dpkg --extract libreoffice$(OOVER)-debian-menus_*_all.deb . && cd usr/share/icons && \
	rm -rf gnome locolor && \
	for d in `find -type d`; do \
	  install -d -m755 $(CURDIR)/$(PKGDIR)-common/usr/share/icons/$$d || exit 1 ;\
	done &&\
	for f in `find -type f`; do \
	  install -m644 $$f $(CURDIR)/$(PKGDIR)-common/usr/share/icons/$$f || exit 1 ;\
	done && cd ../../.. && rm -rf usr etc

ifeq "$(USE_OOO_BUILD_DESKTOPS)" "n"
	# menu files from sysui
	dirname="`cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare >/dev/null; pwd`" ;\
	mkdir -p -m755 $(PKGDIR)-common/usr/share/applications ;\
	sed -e 's,Exec=$${UNIXBASISROOTNAME} %U,Exec=libreoffice$(VER) %U,' \
	    -e 's,Icon=$${WITHOUTDOTUNIXPRODUCTNAME},Icon=libreoffice,' \
	    -e 's,Name=$${PRODUCTNAME} $${PRODUCTVERSION},Name=LibreOffice $(VER),' \
	    -e 's,Name\[pt_BR\]=$${PRODUCTNAME_BR} $${PRODUCTVERSION},Name[pt_BR]=BrOffice $(VER),' \
	    -e 's/  / /' \
	   < $$dirname/startcenter.desktop \
	   > $(PKGDIR)-common/usr/share/applications/libreoffice$(VER)-startcenter.desktop || exit 1
	# remove Sun reference 
	perl -pi -e 's/ Supported by Sun Microsystems.//' $(PKGDIR)-common//usr/share/applications/libreoffice$(VER)-startcenter.desktop
	# invalid, according to lintian. make it shut up.
	perl -pi -e 's/Application;//; s/X-Red-Hat-Base;//; s/X-SuSE-Core-Office;//; s/X-MandrivaLinux-.*;//;' $(PKGDIR)-common/usr/share/applications/libreoffice$(VER)-startcenter.desktop
endif

	# install .applications, .keys, .mime and openoffice.org.xml for
	# shared-mime-info
	mkdir -p $(PKGDIR)-common/usr/share/application-registry && \
	cat $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/libreoffice/openoffice.applications \
		| sed -e s/OFFICENAME/ooffice/g \
		| sed -e s/\%PRODUCTNAME/LibreOffice/g \
		> $(PKGDIR)-common/usr/share/application-registry/openoffice.applications
	mkdir -p $(PKGDIR)-common/usr/share/mime/packages && \
	mkdir -p $(PKGDIR)-common/usr/share/mime-info && \
	install -m644 $(SOURCE_TREE)/sysui/desktop/mimetypes/openoffice.mime \
		$(PKGDIR)-common/usr/share/mime-info && \
	rm -f $(PKGDIR)-common/usr/share/mime-info/openoffice.keys; \
	for i in $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/libreoffice/*.keys; do \
		cat $$i >> $(PKGDIR)-common/usr/share/mime-info/openoffice.keys; \
	done
	install -m644 $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/libreoffice/openoffice.org.xml \
		$(PKGDIR)-common/usr/share/mime/packages

	mkdir -p $(PKGDIR)-common/usr/share/applications

	# install openoffice-xlate-lang
	install -d -m755 $(PKGDIR)-common/usr/share/$(OODIRNAME)/bin
	install -m755 $(OOO_BUILD_TREE)/bin/openoffice-xlate-lang \
		$(PKGDIR)-common/usr/share/$(OODIRNAME)/bin

ifeq "$(HELPISOS)" ""
	# when we don't build helpcontent2 here we are missing helpxsl.zip so
	# this file doesn't get installed either. Do it manually..
	mkdir -p -m755 $(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/help && \
	cp $(SOURCE_TREE)/helpcontent2/source/auxiliary/main_transform.xsl \
		$(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/help
	cp $(SOURCE_TREE)/helpcontent2/source/auxiliary/idxcaption.xsl \
		$(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/help
	cp $(SOURCE_TREE)/helpcontent2/source/auxiliary/idxcontent.xsl \
		$(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/help
endif

ifeq "$(PACKAGE_SDK)" "y"
	rm -f $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev-doc/LICENSE
	perl -pi -e 's,license.html,http://www.gnu.org/licenses/lgpl.html,' \
		$(PKGDIR)-dev-doc/$(OOSDKDIR)/index.html
	find $(PKGDIR)-dev-doc/$(OOBASISDIR)/sdk/examples -type f -exec chmod 644 {} \;

  ifeq "$(ENABLE_JAVA)" "y"
        # fix links
	cd $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev/docs/java/ref && \
	for i in `find . -type f | xargs`; do \
		perl -pi -e 's,file:$(CURDIR)/$(OOO_BUILD_TREE)/build/$(TAG)/odk/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/bin/odkcommon/docs/common/ref/,,g' $$i; \
	done
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
	# move common Java stuff to -java-common
	rm -rf $(PKGDIR)-java-common
	mkdir -p $(PKGDIR)-java-common/$(OODIR)/program/classes
	mkdir -p $(PKGDIR)-java-common/$(OODIR)/share/Scripts
	mkdir -p $(PKGDIR)-java-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/program/classes
	mv $(PKGDIR)-common/$(OODIR)/share/Scripts/java \
		$(PKGDIR)-java-common/$(OODIR)/share/Scripts
	mv $(PKGDIR)-common/$(OODIR)/program/classes/* \
		$(PKGDIR)-java-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/program/classes
	cd $(PKGDIR)-java-common/$(OODIR)/program/classes && \
		for i in $(CURDIR)/$(PKGDIR)-java-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/program/classes/*; do \
			case "`basename $$i`" in aportisdoc.jar|pexcel.jar|pocketword.jar) continue ;; \
			*) ln -s `echo $$i | sed -e 's,$(CURDIR)/$(PKGDIR)-java-common,,'` `basename $$i` ;; esac; \
	done

	# move into extra package
	rm -rf $(PKGDIR)-filter-mobiledev
	mkdir -p $(PKGDIR)-filter-mobiledev/$(shell echo $(OODIR) | sed -e s/lib/share/)/program/classes
	mkdir -p $(PKGDIR)-filter-mobiledev/$(OODIR)/program/classes
	for i in aportisdoc pexcel pocketword; do \
	  mv $(PKGDIR)-java-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/program/classes/$$i.jar \
		$(PKGDIR)-filter-mobiledev/$(shell echo $(OODIR) | sed -e s/lib/share/)/program/classes; \
	  ln -s /$(shell echo $(OODIR) | sed -e s/lib/share/)/program/classes/$$i.jar \
		$(PKGDIR)-filter-mobiledev/$(OODIR)/program/classes; \
	done
	for i in pocketexcel palm pocketword; do \
	  mkdir -p $(PKGDIR)-filter-mobiledev/$(OODIR)/share/registry && \
	  mv $(PKGDIR)-common/$(OODIR)/share/registry/$$i.xcd \
		$(PKGDIR)-filter-mobiledev/$(OODIR)/share/registry; \
	done
ifeq "$(USE_OOO_BUILD_DESKTOPS)" "n"
	# menu files from sysui
	dirname="`cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare >/dev/null; pwd`" ;\
	mkdir -p -m755 $(PKGDIR)-filter-mobiledev/usr/share/applications ;\
	sed -e 's,Exec=ooffice \(.*\) %U,Exec=libreoffice$(VER) \1 %U,' \
		-e 's,Icon=$${WITHOUTDOTUNIXPRODUCTNAME},Icon=libreoffice,' \
	   	-e 's,Name=$${PRODUCTNAME} $${PRODUCTVERSION},Name=LibreOffice $(VER),' \
	   	-e 's,Name\[pt_BR\]=$${PRODUCTNAME_BR} $${PRODUCTVERSION},Name[pt_BR]=BrOffice $(VER),' \
	   	-e 's/  / /' \
	  	< $$dirname/javafilter.desktop \
	  	> $(PKGDIR)-filter-mobiledev/usr/share/applications/libreoffice$(VER)-javafilter.desktop || exit 1
endif
endif

	# fix permissions
	for i in editpic poll savepic show webcast; do \
		chmod 755 $(PKGDIR)-common/$(OODIR)/share/config/webcast/$$i.pl; \
	done
	chmod 644 $(PKGDIR)-common/$(OOBRANDDIR)/LICENSE.odt
	chmod 644 $(PKGDIR)-common/$(OOBRANDDIR)/CREDITS.odt

	rm -rf $(PKGDIR)-common/$(OOBRANDDIR)/LICENSE

	# move uno_packages/cache to /var and create symlink for for
	# documentation referencing it...
	rm -rf $(PKGDIR)-common/$(OOBRANDDIR)/share/uno_packages/cache
	mkdir -p $(PKGDIR)-common/var/spool/$(OODIRNAME)/uno_packages/cache
	ln -s /var/spool/$(OODIRNAME)/uno_packages/cache \
		$(PKGDIR)-common/$(OOBRANDDIR)/share/uno_packages/cache
	perl -pi -e \
	      's,\$$UNO_SHARED_PACKAGES/cache,file:///var/spool/$(OODIRNAME)/uno_packages/cache,g' \
		$(PKGDIR)-common/$(OODIR)/program/unorc
	# FIXME: What is this? unorc per default only mentiones
	# share/uno_packages/cache...
	rm -rf $(PKGDIR)-common/$(OODIR)/presets/uno_packages

	# move javasettingsunopkginstall.xml to /var/lib
	mkdir -p $(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/usr/var/)/share/config
	mv $(PKGDIR)-common/$(OODIR)/share/config/javasettingsunopkginstall.xml \
		$(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/usr/var/)/share/config/javasettingsunopkginstall.xml
	ln -s /$(shell echo $(OODIR) | sed -e s/usr/var/)/share/config/javasettingsunopkginstall.xml \
		$(PKGDIR)-common/$(OODIR)/share/config/javasettingsunopkginstall.xml
	# set PYTHONPATH in unopkg
	perl -pi -e 's,export PATH,export PATH\n\nexport PYTHONPATH=\"/$(OOBASISDIR)/program\"\n\n,' \
		$(PKGDIR)-common/$(OOBRANDDIR)/program/unopkg

	# install DicOOo; we need to do this manually; the
	# dictionaries/ module isn't built with --without-myspell-dicts
	# and those two somehow (why?) are in there...
	mkdir -p $(PKGDIR)-common/usr/share/myspell/dicts
	install -m644 $(SOURCE_TREE)/dictionaries/diclst/DicOOo.sxw \
		$(PKGDIR)-common/usr/share/myspell/dicts

ifeq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	mkdir -p debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice
	mv $(PKGDIR)-common/$(OODIR)/share/fonts/truetype/opens___.ttf \
		debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice
	rm -rf $(PKGDIR)-common/$(OODIR)/share/fonts/truetype
else
	rm -f $(PKGDIR)-common/$(OODIR)/share/fonts/truetype/opens___.ttf
endif

	# convert icons to xpm; we need them for the Debian menu policy...
	cd $(PKGDIR)-common/usr/share/icons/hicolor/32x32/apps && \
	  for x in *.png; do convert $$x `basename $$x .png`.xpm; done

ifeq "$(ENABLE_JAVA)" "y"
	# symlink jars we use externally
  ifneq (,$(filter saxon, $(SYSTEM_STUFF)))
	ln -sf /usr/share/java/saxonb.jar \
		$(PKGDIR)-java-common/$(OODIR)/program/classes/saxon9.jar
  endif
  ifneq (,$(filter beanshell, $(SYSTEM_STUFF)))
	ln -sf /usr/share/java/bsh.jar \
	        $(PKGDIR)-java-common/$(OODIR)/program/classes/bsh.jar
  endif
endif
	# remove extra license files
	rm -rf $(PKGDIR)-common/$(OOBRANDDIR)/licenses
	rm -f $(PKGDIR)-common/$(OOBRANDDIR)/share/readme/LICENSE*
	rm -f $(PKGDIR)-common/$(OOBRANDDIR)/THIRDPARTYLICENSEREADME.html
	rm -f $(PKGDIR)-common/$(OOBRANDDIR)/LICENSE.html

	# remove extra readme files
	rm -rf $(PKGDIR)-common/$(OOBRANDDIR)/readmes
	rm -f $(PKGDIR)-common/$(OOBRANDDIR)/share/readme/README*
	rm -f $(PKGDIR)-common/$(OOBRANDDIR)/README.html
	rm -f $(PKGDIR)-common/$(OOBRANDDIR)/README

	# URE got moved to /usr/lib, so this is obsolete
	for i in ure/lib ure; do \
		if [ -e $(PKGDIR)-common/$(OOBRANDDIR)/$$i ]; then \
			rmdir $(PKGDIR)-common/$(OOBRANDDIR)/$$i; \
		fi; \
	done

ifeq "$(USE_OOO_BUILD_DESKTOPS)" "y"
	# install ooo-build desktop icons
	for r in 16x16 22x22 24x24 32x32 48x48; do \
		mkdir -p $(PKGDIR)-common/usr/share/icons/hicolor/$$r/apps; \
		cp $(OOO_BUILD_TREE)/desktop/$$r/*.png \
			$(PKGDIR)-common/usr/share/icons/hicolor/$$r/apps; \
	done
endif

	# move psprint.conf into /etc
	mkdir -p $(PKGDIR)-common/etc/$(OODIRNAME)
	mv $(PKGDIR)-common/$(OODIR)/share/psprint/psprint.conf \
		$(PKGDIR)-common/etc/$(OODIRNAME)
	ln -s /etc/$(OODIRNAME)/psprint.conf \
		$(PKGDIR)-common/$(OODIR)/share/psprint/psprint.conf

	# prepare a fake sofficerc in the place where OOo expects it
	# which does nothing except reference the "normal" one
	# which we put into /etc
	mv $(PKGDIR)-common/$(OOBRANDDIR)/program/sofficerc \
		$(PKGDIR)-common/etc/$(OODIRNAME)/sofficerc
	( \
	  echo "# *DO NOT* CHANGE THIS FILE. IT ONLY TAKES THE SETTINGS FROM"; \
	  echo "# /etc/$(OODIRNAME)/sofficerc. CHANGE THAT FILE IF YOU"; \
	  echo "# REALLY WANT TO CHANGE SOMETHING."; \
	  echo "FHS_CONFIG_FILE=file:///etc/$(OODIRNAME)/sofficerc"; \
	  echo "" >> $(PKGDIR)-common/$(OOBRANDDIR)/program/sofficerc; \
	) > $(PKGDIR)-common/$(OOBRANDDIR)/program/sofficerc
	cat $(PKGDIR)-common/etc/$(OODIRNAME)/sofficerc \
		| perl -p -e 's/(.*)=(.*)/$$1=\$${\$$FHS_CONFIG_FILE:Bootstrap:$$1}/' \
		>> $(PKGDIR)-common/$(OOBRANDDIR)/program/sofficerc
	# except for URE_BOOTSTRAP...
	TMP=`mktemp -q`; \
		grep -v URE_BOOTSTRAP $(PKGDIR)-common/$(OOBRANDDIR)/program/sofficerc > $$TMP && mv $$TMP $(PKGDIR)-common/$(OOBRANDDIR)/program/sofficerc && \
		grep URE_BOOTSTRAP $(PKGDIR)-common/etc/$(OODIRNAME)/sofficerc >> $(PKGDIR)-common/$(OOBRANDDIR)/program/sofficerc && \
		grep -v URE_BOOTSTRAP $(PKGDIR)-common/etc/$(OODIRNAME)/sofficerc > $$TMP && mv $$TMP $(PKGDIR)-common/etc/$(OODIRNAME)/sofficerc

	install -m 644 debian/soffice.sh \
	  $(PKGDIR)-common/etc/$(OODIRNAME)/soffice.sh

ifeq "$(HELPISOS)" ""
	# the helpimgs are not included when we don't build with help here.
	# Add them now because libreoffice-help-* packaged in contrib or so
	# will need them
	set -e; \
	for i in $(IMAGES); do \
		s=_$$i.zip; \
		case "$$i" in $(DEFAULT_IMAGE)) s=.zip; esac; \
		z=images$$s; \
		echo "adding helpimgs to $$z..."; \
		rm -rf $$z; mkdir $$z; \
		cd $$z; \
		unzip -q $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z && \
		cp -r $(CURDIR)/$(SOURCE_TREE)/default_images/res/helpimg res && \
		chmod +w $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z && \
		zip -q -r $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z *; \
		cd ..; \
		rm -rf $$z; \
	done
endif
	set -e; \
	for i in $(IMAGES); do \
		z=images_$$i.zip; p=$$i; \
		case "$$i" in $(DEFAULT_IMAGE)) z=images.zip; esac; \
		case "$$i" in classic) p=andromeda; esac; \
		mkdir -p $(PKGDIR)-style-$$p/$(shell echo $(OODIR) | sed -e s/lib/share/)/share/config; \
		mv $(PKGDIR)-common/$(OODIR)/share/config/$$z \
			$(PKGDIR)-style-$$p/$(shell echo $(OODIR) | sed -e s/lib/share/)/share/config/; \
	done

	rm -rf debian/openoffice.org-dtd-officedocument1.0
	mkdir -p debian/openoffice.org-dtd-officedocument1.0/$(shell echo $(OODIR) | sed -e s/libreoffice/openoffice/)/share/dtd
	mv $(PKGDIR)-common/$(OODIR)/share/dtd/officedocument \
		debian/openoffice.org-dtd-officedocument1.0/$(shell echo $(OODIR) | sed -e s/libreoffice/openoffice/)/share/dtd
	cat debian/catalog.xml.in \
		| sed -e "s,\@OOBASISDIR\@,$(shell echo $(OOBASISDIR) | sed -e s/libreoffice/openoffice/)," \
		> debian/openoffice.org-dtd-officedocument1.0/$(shell echo $(OODIR) | sed -e s/libreoffice/openoffice/)/share/dtd/officedocument/1_0/catalog.xml
	cat debian/openoffice.org-dtd-officedocument1.0.xmlcatalogs.in \
		| sed -e "s,\@OOBASISDIR\@,$(shell echo $(OOBASISDIR) | sed -e s/libreoffice/openoffice/)," \
		> debian/openoffice.org-dtd-officedocument1.0.xmlcatalogs
	# symlink, as it's in a openoffice.org-* package
	cd debian/openoffice.org-dtd-officedocument1.0 && \
		mkdir -p $(OODIR)/share/dtd && \
		cd $(OODIR)/share/dtd && ln -s /$(shell echo $(OODIR) | sed -e s/libreoffice/openoffice/)/share/dtd/officedocument

ifeq "$(DIST)" "Debian"
	# install Debian presentation template
	mkdir -p $(PKGDIR)-common/$(OODIR)/share/template/en-US/presnt
	install -m644 debian/templates/*.otp $(PKGDIR)-common/$(OODIR)/share/template/en-US/presnt/
endif

ifeq "$(DIST)" "Ubuntu"
	# install Ubuntu templates
	mkdir -p $(PKGDIR)-common/$(OODIR)/share/template/en-US/presnt
	install -m644 debian/ubuntu/*.otp $(PKGDIR)-common/$(OODIR)/share/template/en-US/presnt/
endif

ifeq "$(PACKAGE_SDK)" "y"
	# add symlinks for docs and examples
	cd $(PKGDIR)-dev-doc/$(OOSDKDIR) && \
		rm -rf docs && \
		ln -sf /usr/share/doc/libreoffice-dev/docs docs
	cd $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev-doc && \
		ln -s /usr/share/doc/libreoffice-dev/docs docs
	cd $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev-doc && \
		ln -s /$(OOSDKDIR)/examples examples
	cd $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev && \
		ln -s /$(OOSDKDIR)/examples examples
	# and the index
	cd $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev && \
		ln -s /$(OOSDKDIR)/index.html index.html
endif

ifeq "$(ENABLE_REPORTDESIGN)" "y"
  ifeq "$(ENABLE_JAVA)" "y"
	rm -rf $(PKGDIR)-report-builder
	mkdir -p $(PKGDIR)-report-builder/$(OOBRANDDIR)/share/extensions
	mv debian/tmp/$(OOBRANDDIR)/share/extensions/report-builder \
		$(PKGDIR)-report-builder/$(OOBRANDDIR)/share/extensions
	# unneeded license files
	for i in THIRDPARTYREADMELICENSE.html readme_en-US.html readme_en-US.txt \
		registration/LICENSE; do \
		rm -f $(PKGDIR)-report-builder/$(OOBRANDDIR)/share/extensions/report-builder/$$i; \
	done
  endif
endif

ifeq "$(ENABLE_MEDIAWIKI)" "y"
	rm -rf $(PKGDIR)-wiki-publisher
	mkdir -p $(PKGDIR)-wiki-publisher/$(OOBRANDDIR)/share/extensions
	mv debian/tmp/$(OOBRANDDIR)/share/extensions/wiki-publisher \
		$(PKGDIR)-wiki-publisher/$(OOBRANDDIR)/share/extensions
	rm -f $(PKGDIR)-wiki-publisher/$(OOBRANDDIR)/share/extensions/wiki-publisher/license/THIRDPARTYLICENSEREADME.html
endif

	# add version to  .lintian-overrides
	for i in common; do \
		cat debian/libreoffice$(VER)-$$i.lintian-overrides.in \
			| sed -e s/@BASIS_VERSION@/$(BASIS_VERSION)/ \
			> debian/libreoffice$(VER)-$$i.lintian-overrides; \
	done

	# unopkg creates stuff in there.
	mkdir -p $(PKGDIR)-common/$(OOBRANDDIR)/share/prereg
	mkdir -p $(PKGDIR)-common/$(shell echo $(OOBRANDDIR) | sed -e s/usr/var/)/share/prereg/bundled
	ln -s /$(shell echo $(OOBRANDDIR) | sed -e s/usr/var/)/share/prereg/bundled \
		$(PKGDIR)-common/$(OOBRANDDIR)/share/prereg/bundled

	for i in $(ARCH_INDEP_PACKAGES); do \
		if [ -e debian/$$i.bug-script.in ]; then \
			cat debian/$$i.bug-script.in \
				| sed -e "s/@PLATFORMID@/$(PLATFORMID)/" \
				| sed -e "s/@BASIS_VERSION@/$(BASIS_VERSION)/" \
				> debian/$$i.bug-script; \
		fi ;\
	done

ifeq "$(USE_OOO_BUILD_DESKTOPS)" "n"
	# menu files from sysui
	dirname="`cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/libreoffice >/dev/null; pwd`" ;\
	mkdir -p -m755 $(PKGDIR)-common/usr/share/mimelnk/application ;\
	sed -e 's,Comment=Extension,Comment=LibreOffice $(VER) Extension,' \
	    -e 's,Icon=openofficeorg[0123456789]-extension,Icon=application-vnd.openofficeorg.extension.png,' \
	    -e 's/  / /' \
	    < $$dirname/extension.desktop \
	    > $(PKGDIR)-common/usr/share/mimelnk/application/vnd.openofficeorg.extension.desktop || exit 1
	# install ooo-build mimetype icon
	for i in 16x16 22x22 24x24 32x32 48x48; do \
		install -D -m644 $(CURDIR)/$(OOO_BUILD_TREE)/desktop/mimetypes/$$i/application-vnd.openofficeorg.extension.png \
			$(PKGDIR)-common/usr/share/icons/hicolor/$$i/mimetypes/application-vnd.openofficeorg.extension.png; \
	done
	perl -pi -e "s/Icon=openofficeorg.*-extension/Icon=application-vnd.openofficeorg.extension.png/" $(PKGDIR)-common/usr/share/mimelnk/application/vnd.openofficeorg.extension.desktop
endif

	# fix permission
	chmod 644 $(PKGDIR)-common/$(OODIR)/program/gengalrc

	# install extension shell lib for use by extensions not from here
	install -D -m644 debian/shell-lib-extensions.sh \
		$(PKGDIR)-common/usr/share/$(OODIRNAME)/shell-lib-extensions.sh

	# those are needed in /usr/share, too
	mkdir -p $(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/lib/share/)
	mv $(PKGDIR)-common/$(OODIR)/help \
		$(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/lib/share/)
	# help is in /usr/share
	sed -i 's,$$(instpath)/help,/$(shell echo $(OODIR) | sed -e s/lib/share/)/help,' \
		$(PKGDIR)-common/$(OOBASISDIR)/share/registry/main.xcd

	# compat dirs, the split icons thing need it
	mkdir -p $(PKGDIR)-common/$(shell echo $(OOBRANDDIR) | sed -e s/lib/share/)/program
	mkdir -p $(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/program
	# three-layer symlinks also for /usr/share
	ln -s basis$(OOVER) \
		$(PKGDIR)-common/$(shell echo $(OOBRANDDIR) | sed -e s/lib/share/)/basis-link
	ln -s /$(OOUREDIR) \
		$(PKGDIR)-common/$(shell echo $(OODIR) | sed -e s/lib/share/)/ure-link

ifeq "$(USE_SYSTEM_TEXTCAT_DATA)" "y"
	# remove duplicated textcat data and replace with symlinks
	cd $(PKGDIR)-common/$(OOBASISDIR)/share && \
	for i in `fdupes -n -f -1 fingerprint/ /usr/share/libtextcat/LM`; do \
		ln -sf /usr/share/libtextcat/LM/`basename $$i` fingerprint/`basename $$i`; \
	done
endif

# we first need to find out whether it works on lenny, see issue 105172
ifneq "$(LENNY_BACKPORT)" "y"
	# enable session handling and recovery
	perl -pi -e 's,<prop oor:name="DocumentStoreUIEnabled" oor:type="xs:boolean"><value>false</value></prop>,<prop oor:name="DocumentStoreUIEnabled" oor:type="xs:boolean"><value>true</value></prop>,' $(PKGDIR)-common/$(OODIR)/share/registry/main.xcd
endif

	# examples. move where they belong
	mkdir -p $(PKGDIR)-common/usr/share/doc/libreoffice-common/examples
	for i in oo-ldap.xcd.sample oo-ad-ldap.xcd.sample; do \
		mv $(PKGDIR)-common/$(OOBASISDIR)/share/registry/$$i \
			$(PKGDIR)-common/usr/share/doc/libreoffice-common/examples; \
		ln -s /usr/share/doc/libreoffice-common/examples/$$i $(PKGDIR)-common/$(OOBASISDIR)/share/registry/$$i; \
	done

	# install font config. Doesn't get installed with
	# --without-fonts.
	# FIXME: Shouldn't this be in /etc/fonts/conf.d with a symlink here?
	install -m644 -D $(SOURCE_TREE)/more_fonts/fonts/fc_local.conf \
		$(PKGDIR)-common/$(OODIR)/share/fonts/truetype/fc_local.conf

	# register technical.dic
	perl -pi -e 's/standard.dic;/standard.dic;technical.dic;/' $(PKGDIR)-common/$(OODIR)/share/registry/main.xcd

endif # ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"

	touch $@

ifeq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
# Simplified packaging, langpacks only

binary-arch: $(STAMP_DIR)/binary-arch
$(STAMP_DIR)/binary-arch:
	: # nothing to do
	touch $(STAMP_DIR)/install-arch
	touch $@

else

binary-arch: $(STAMP_DIR)/binary-arch
$(STAMP_DIR)/binary-arch: $(STAMP_DIR)/install-arch debian/control $(STAMP_DIR)/maintscripts
	dh_testdir
	dh_testroot

	for pkg in $(ARCH_DEP_PACKAGES) ; do \
	  rm -f debian/$$pkg.*.debhelper;\
	  rm -rf debian/$$pkg/DEBIAN;\
	done

	dh_installdocs -puno-libs3 debian/README.Debian \
		$(SOURCE_TREE)/instsetoo_native/util/LibreOffice/replace_file/*/en-US/README_en-US \
		$(OOO_BUILD_TREE)/NEWS
	dh_installdocs -s -Nuno-libs3
	dh_installdebconf -s
	dh_installman -s
	for i in writer calc draw base math impress; do \
		for i in `find $(PKGDIR)-$$i -type l -name "lo*.1"`; do \
			mv $$i $$i.gz; \
			if [ "`readlink $$i`" != "libreoffice.1.gz" ]; then \
				ln -sf libreoffice.1.gz $$i.gz; \
			fi; \
		done; \
	done
	dh_installchangelogs -s -k
ifeq "$(USE_COMMON_DOCDIR)" "y"
	# arch dependent packages (with docdir symlinks)
	for p in $$(dh_listpackages -s); do \
	  case "$$p" in \
	    uno-libs3) continue;; \
	    *) target=uno-libs3;; \
	  esac; \
	  rm -f debian/$$p/usr/share/doc/$$p/{changelog.Debian,copyright,README.Debian}; \
	  for i in debian/$$p/usr/share/doc/$$p/*; do \
	    mkdir -p debian/$$p/usr/share/doc/$$target; \
	    mv $$i debian/$$p/usr/share/doc/$$target/; \
	  done; \
	  rmdir debian/$$p/usr/share/doc/$$p; \
	  ln -sf $$target debian/$$p/usr/share/doc/$$p; \
	  sed "s/@PKGNAME@/$$p/g;s/@PKGTARGET@/$$target/g" \
	    debian/deppackage.postinst.in >> debian/$$p.postinst; \
	done
endif
	dh_installmime -s
	dh_installmenu -s
ifeq "$(BUILD_JARS_NATIVE)" "y"
	dh_nativejava -plibreoffice$(VER)-gcj -o
endif
ifeq ($(PYTHON_HELPER),dh_python2)
	dh_python2 --no-guessing-versions --no-guessing-deps
else ifeq ($(PYTHON_HELPER),dh_pycentral)
	dh_pycentral -ppython-uno
  ifeq "$(PYTHON_VERSION)" "current"
	# fix up broken depends (should be like python (<< 2.6), python (>= 2.5)
	# as it was the case before it broke somewhen
	perl -pi -e 's/python, python-central/python (<< $(PYMAJOR).$(PYMINORPLUS1)), python (>= $(PYMAJOR).$(PYMINOR)), python-central/' debian/python-uno.substvars
  endif
else ifeq ($(PYTHON_HELPER),dh_pysupport)
	dh_pysupport -ppython-uno -V $(PYMAJOR).$(PYMINOR)
else
	dh_python
endif
	dh_lintian -s
	dh_bugfiles -s -A
	dh_link -s
	dh_fixperms -s
ifeq "$(BUILD_DBG_PACKAGE)" "y"
	dh_strip -s -Nure -Nuno-libs3 --dbg-package=libreoffice$(VER)-dbg
	dh_strip -pure --dbg-package=ure-dbg
	dh_strip -puno-libs3 --dbg-package=uno-libs3-dbg
	# dh_strip --dbg-package= is not idempotent, force copying of the binaries
	# again...
	rm -f $(STAMP_DIR)/install-arch
else
	dh_strip -s
endif
ifeq "$(LENNY_BACKPORT)" "y"
	dh_desktop -s
endif
	dh_icons -s
ifeq "$(ENABLE_MONO)" "y"
	dh_installcligac -s
endif
	dh_compress -s -X.py -X.mk -X.sxd
	dh_makeshlibs -puno-libs3 -V"ure (>= $(shell grep UREPACKAGEVERSION $(SOURCE_TREE)/instsetoo_native/util/openoffice.lst | awk '{ print $$2 }'))" -- -c0 -v$(shell grep UREPACKAGEVERSION $(SOURCE_TREE)/instsetoo_native/util/openoffice.lst | awk '{ print $$2 }')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
	dh_makeshlibs -n -pure -V"ure (>= $(shell grep UREPACKAGEVERSION $(SOURCE_TREE)/instsetoo_native/util/openoffice.lst | awk '{ print $$2 }'))" -- -v$(shell grep UREPACKAGEVERSION $(SOURCE_TREE)/instsetoo_native/util/openoffice.lst | awk '{ print $$2 }')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
	# ugly hack, but why does that happen? It's not in .symbols...
	TMP=`mktemp -q`; \
	grep -v PRIVATE debian/uno-libs3/DEBIAN/symbols > $$TMP && \
	mv $$TMP debian/uno-libs3/DEBIAN/symbols && \
	chmod 644 debian/uno-libs3/DEBIAN/symbols
	dh_installdeb -s
ifeq "$(BUILD_KFREEBSD)" "y"
	cat debian/shlibs.override.libc >> debian/shlibs.local
endif
ifneq (,$(filter icu, $(SYSTEM_STUFF)))
	cat debian/shlibs.override.icu >> debian/shlibs.local
endif
ifeq "$(BUILD_KDE)" "y"
  ifeq "$(KDE_VER)" "4"
	if dpkg --compare-versions `dpkg -l kdelibs5-dev | grep ^ii | awk '{ print $$3 }'` le 4:4.4; then \
		cat debian/shlibs.override.kde >> debian/shlibs.local; \
	fi
  endif
endif
ifeq "$(INTERNAL_STDLIBS)" "y"
	cat debian/shlibs.override.stdlibs >> debian/shlibs.local
endif
	# we need to do it in two steps. The new dpkg-shlibdeps doesn't find
	# /usr/lib/libgcj-bc.so when specifying -l$(GCJ_JAWT_DIR)
	# and therefore we must not use it for -gcj. But we *do* need it
	# for -officebean (libjawt.so is referenced there)
	LD_LIBRARY_PATH="/usr/lib/libfakeroot:debian/uno-libs3/$(OOUREDIR)/lib:debian/ure/$(OOUREDIR)/lib:$(PKGDIR)-core/$(OODIR)/program:$(PKGDIR)-base-core/$(OODIR)/program:$(PKGDIR)-base/$(OODIR)/program:$(PKGDIR)-writer/$(OODIR)/program" \
		dh_shlibdeps -s -Nlibreoffice$(VER)-officebean \
			-Lure -Luno-libs3 \
			-ldebian/uno-libs3/$(OOUREDIR)/lib:debian/ure/$(OOUREDIR)/lib:$(PKGDIR)-core/$(OODIR)/program:$(PKGDIR)-base/$(OODIR)/program \
			$(SHLIBS_OVERRIDE)
ifneq (,$(filter redland, $(SYSTEM_STUFF)))
	# dpkg-shlibdeps "in practice" always will look for this in
        # /usr/lib/openoffice/basisX.Y/program due to the RPATH and the
	# dh_shlibdeps would fail. It's excluded, and we now need to do it
	# manually. Saves us a versioned build-conflict with ourselves
	# which quickly can get outdated
	perl -pi -e 's/(shlibs.*$$)/$$1, $(shell cat /var/lib/dpkg/info/$(shell dpkg -S /usr/lib/`objdump -p $(PKGDIR)-core/$(OOBASISDIR)/program/libunordf*.so | grep NEEDED | grep librdf | awk '{ print $$2 }'` | cut -d: -f1).shlibs | awk '{ print $$3,$$4,$$5 }')/' $(PKGDIR)-core.substvars
endif
	# don't make uno-libs3 depend on ure...
	perl -pi -e 's/, ure \(.*\)$$//' debian/uno-libs3.substvars
ifeq "$(ENABLE_JAVA)" "y"
	LD_LIBRARY_PATH="/usr/lib/libfakeroot:debian/uno-libs3/$(OOUREDIR)/lib:debian/ure/$(OOUREDIR)/lib:$(PKGDIR)-core/$(OODIR)/program" \
		dh_shlibdeps -plibreoffice$(VER)-officebean \
			-Lure -Luno-libs3 \
			-ldebian/uno-libs3/$(OOUREDIR)/lib:debian/ure/$(OOUREDIR)/lib:$(PKGDIR)-core/$(OODIR)/program:$(GCJ_JAWT_DIR) \
			$(SHLIBS_OVERRIDE)
endif
ifeq "$(ENABLE_MONO)" "y"
	dh_makeclilibs -s
	dh_clideps -s
endif
# This switch to dh_shlibdeps reduces the 'libXXX not found' warnings but
# causes ldd crashes sometimes when used with fakeroot:
#          -l $(PKGDIR)-core/$(OPENOFFICEDIR)/program
	dh_gencontrol -s $(DEBHELPER_OPTIONS) -Nure -Nure-dbg -Nuno-libs3 -Nuno-libs3-dbg \
		-Nlibreoffice$(VER)-presentation-minimizer \
		-Nlibreoffice$(VER)-presenter-console \
		-Nlibreoffice$(VER)-pdfimport \
		-Nlibreoffice$(VER)-sdbc-postgresql \
		-Nlibreoffice$(VER)-mysql-connector -- \
		-V"ure:Version=$(shell grep UREPACKAGEVERSION $(SOURCE_TREE)/instsetoo_native/util/openoffice.lst | awk '{ print $$2 }')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`" \
		-V'base-version=$(BASE_VERSION)' \
		-V'next-base-version=$(NEXT_BASE_VERSION)' \
		-V'basis-version=$(BASIS_VERSION)' \
		-V'next-basis-version=$(NEXT_BASIS_VERSION)' \
		-V'help-l10n-virtual-version=$(HELP_L10N_VIRTUAL_VERSION)' \
		-V'dev-stl-depends=$(DEV_STL_DEPENDS)' \
		-V'base-hsqldb-depends=$(BASE_HSQLDB_DEPENDS)' \
		-V'java-common-depends=$(JAVA_COMMON_DEPENDS) $(JAVA_COMMON_DEPENDS_VERSION)' \
		-V'java-runtime-depends=$(JAVA_RUNTIME_DEPENDS)' \
		-V'java-gcj-depends=$(JAVA_GCJ_DEPENDS)' \
		-V'mozilla-nss-depends=$(MOZILLA_NSS_DEPENDS)' \
		-V'lucene-depends=$(LUCENE_DEPENDS)' \
		-V'Binary-Version=$(BINARY_VERSION)' \
		-V'ooo-binfilter-dep=$(OOO_BINFILTER_DEP)' \
		-V'ooo-officebean-dep=$(OOO_OFFICEBEAN_DEP)' \
		-V'kde-iconset-dep=$(KDE_ICONSET_DEP)' \
		-V'lpsolve-dep=$(LPSOLVE_DEP)' \
		-V'gstreamer-plugins-suggests=$(GSTREAMER_PLUGINS_SUGGESTS)' \
		-V'libebook-dep=$(shell debian/scripts/get_libebook_dep.sh)' \
		-V'libldap-suggests=$(LDAP_LIB)' \
		-V'dbg-dbg-suggests=$(DBG_DBG_SUGGESTS)' \
		-v$(BINARY_VERSION)
ifeq "$(ENABLE_JAVA)" "y"
	perl -pi -e "s/java-gcj-compat/java-gcj-compat (>= 1.0.77-4)/" \
		debian/libreoffice$(VER)-officebean/DEBIAN/control
endif
ifneq (,$(findstring $(ARCH),$(OOO_ARCH_DEP_EXTENSIONS_ARCHS)))
ifeq "$(ENABLE_PDFIMPORT)" "y"
	dh_gencontrol -plibreoffice$(VER)-pdfimport -- \
		-v$(shell grep "<version" $(SOURCE_TREE)/sdext/source/pdfimport/config/description.xml | perl -pi -e 's,<version.*value=\"(.*)\" />,\1,; s/^\s+//')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
endif
ifeq "$(ENABLE_MINIMIZER)" "y"
	dh_gencontrol -plibreoffice$(VER)-presentation-minimizer -- \
		-v$(shell grep "<version" $(SOURCE_TREE)/sdext/source/minimizer/description.xml | perl -pi -e 's,<version value=\"(.*)\"/>,\1,; s/^\s+//')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
endif
ifeq "$(ENABLE_PRESENTER_CONSOLE)" "y"
	dh_gencontrol -plibreoffice$(VER)-presenter-console -- \
		-v$(shell grep "<version" $(SOURCE_TREE)/sdext/source/presenter/description.xml | perl -pi -e 's,<version value=\"(.*)\" />,\1,; s/^\s+//')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
endif
ifeq "$(PACKAGE_BASE)" "y"
  ifeq "$(ENABLE_SDBC_POSTGRESQL)" "y"
	dh_gencontrol -plibreoffice$(VER)-sdbc-postgresql -- \
		-v`echo $(BINARY_VERSION) | cut -d: -f1`:$(shell grep ^PQ_SDBC_M $(SOURCE_TREE)/connectivity/source/drivers/postgresql/makefile.mk | cut -d"=" -f2 | xargs | sed -e s/\ /\./g | sed -e s/b$$//)+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
  endif
  ifeq "$(ENABLE_MYSQLNATIVE)" "y"
	dh_gencontrol -plibreoffice$(VER)-mysql-connector -- \
		-v$(shell grep "<version" $(SOURCE_TREE)/mysqlc/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/description.xml | perl -pi -e 's,<version value=\"(.*)\" />,\1,; s/^\s+//; s/\s+$$//')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
  endif
endif
endif
	dh_gencontrol -pure -pure-dbg -puno-libs3 -puno-libs3-dbg -- \
		-V"ure:Version=$(shell grep UREPACKAGEVERSION $(SOURCE_TREE)/instsetoo_native/util/openoffice.lst | awk '{ print $$2 }')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`" \
		-v$(shell grep UREPACKAGEVERSION $(SOURCE_TREE)/instsetoo_native/util/openoffice.lst | awk '{ print $$2 }')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
	dh_md5sums -s -X$(shell echo $(OOBASISDIR) | sed -e s/usr/var/)/program/services.rdb
	dh_builddeb -s $(DEBHELPER_OPTIONS) $(BUILDDEB_OPTIONS)

	touch $@
endif # binary-arch for openoffice.org source

binary-indep: $(GSI_EXPORT_STAMP) $(STAMP_DIR)/binary-indep
$(STAMP_DIR)/binary-indep: $(STAMP_DIR)/install-indep debian/control $(STAMP_DIR)/maintscripts $(STAMP_DIR)/langpacks
ifneq ($(ARCH),$(findstring $(ARCH),$(OOO_JAVA_ARCHS)))
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	echo "For uploads with binary-all packages, please use arches where Java is enabled!!!!!"
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
endif
ifneq ($(ARCH),$(findstring $(ARCH),$(OOO_MONO_ARCHS)))
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	echo "For uploads with binary-all packages, please use arches where Mono is enabled!!!!!"
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
endif
	dh_testdir
	dh_testroot

	for pkg in $(ARCH_INDEP_PACKAGES) ; do \
	  rm -f debian/$$pkg.*.debhelper;\
	  rm -rf debian/$$pkg/DEBIAN;\
	done

ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
ifeq "$(PACKAGE_SDK)" "y"
	. $(SOURCE_TREE)/solenv/inc/udkversion.mk && \
	for i in common cpp java; do \
		cat debian/udk-$$i-ref.in \
			| sed -e "s/@UDK_MAJOR@/$$UDK_MAJOR/" \
		      	      -e "s/@UDK_MINOR@/$$UDK_MINOR/" \
		      	      -e "s/@UDK_MICRO@/$$UDK_MICRO/" \
		      	      -e "s/@VER@/$(VER)/" \
			> debian/libreoffice-dev-doc.doc-base.udk-$$i-ref; \
	done
	# remove Autodoc_DiagnosticMessages.txt
	find $(PKGDIR)-dev-doc/usr/share/doc/libreoffice-dev \
		-name "Autodoc_DiagnosticMessages.txt" -exec rm {} \;
	UDK_CPP_FILES=`find $(CURDIR)/debian/libreoffice-dev-doc/usr/share/doc/libreoffice-dev/docs/cpp/ref | sed -e 's,$(CURDIR)/debian/libreoffice-dev-doc,,g' | xargs`; \
	echo "Files: $$UDK_CPP_FILES" >> debian/libreoffice-dev-doc.doc-base.udk-cpp-ref
  ifeq "$(ENABLE_JAVA)" "y"
	UDK_JAVA_FILES=`find $(CURDIR)/debian/libreoffice-dev-doc/usr/share/doc/libreoffice-dev/docs/java/ref | sed -e 's,$(CURDIR)/debian/libreoffice-dev-doc,,g' | xargs`; \
	echo "Files: $$UDK_JAVA_FILES" >> debian/libreoffice-dev-doc.doc-base.udk-java-ref
  endif
	# xargs strips the many files here so we need to post-process it.
	UDK_COMMON_FILES=`find $(CURDIR)/debian/libreoffice-dev-doc/usr/share/doc/libreoffice-dev/docs/common/ref | sed -e 's,$(CURDIR)/debian/libreoffice-dev-doc,,g' | xargs`; \
	TMP=`mktemp -q`; \
	cp debian/libreoffice-dev-doc.doc-base.udk-common-ref $$TMP; \
	echo "Files: $$UDK_COMMON_FILES" >> $$TMP; \
	cat $$TMP | perl -e 'while(<>) { if (/^Files/) {$$f=1;} if ($$f eq "1") { chomp(); } print $$_; }' > debian/libreoffice-dev-doc.doc-base.udk-common-ref; \
	rm -f $$TMP
	# no idea why this happens; afais this can't come from above
	# since it doesn't affect the files at the end of the lines...
	# But fix it..
	perl -pi -e 's,html/,html /,g' debian/libreoffice-dev-doc.doc-base.udk-common-ref
endif
endif
	dh_installdocs -plibreoffice$(VER)-common debian/README.Debian \
		$(SOURCE_TREE)/instsetoo_native/util/LibreOffice/replace_file/*/en-US/README_en-US \
		$(OOO_BUILD_TREE)/NEWS
	dh_installdocs -i -Nlibreoffice$(VER)-common
	# note libreoffice.1 is already installed into -common by libreoffice-builds package-ooo
	dh_installman -i
	for i in `find $(PKGDIR)-common -type l -name "lo*.1"`; do \
		mv $$i $$i.gz; \
		if [ "`readlink $$i`" != "libreoffice.1.gz" ]; then \
			ln -sf libreoffice.1.gz $$i.gz; \
		fi; \
	done
	dh_installchangelogs -i -k
ifeq "$(USE_COMMON_DOCDIR)" "y"
  ifneq "" "$(findstring openoffice.org$(VER)-common, $(PACKAGES))"
	mkdir -p $(PKGDIR)-common/usr/share/doc/libreoffice$(VER)-common
	install -m644 debian/README.Debian debian/copyright \
	  $(PKGDIR)-common/usr/share/doc/libreoffice$(VER)-common/
    ifeq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	dh_installdocs -pttf-opensymbol
	dh_installchangelogs -pttf-opensymbol
    endif
  endif
	# l10 & help packages (with docdir symlinks)
	for PKG in \
	  $(HELP_PACKAGES) $(LANG_PACKAGES); \
	do \
	  case $$PKG in \
	    *-l10n-in|*-l10n-za) continue;; \
	    *-l10n-en-us) target=libreoffice$(VER)-common;; \
	    *-help-en-us) target=libreoffice$(VER)-common;; \
	    *) target=libreoffice$(VER)-l10n-common; \
	  esac; \
	  rm -rf debian/$$PKG/usr/share/doc/$$PKG; \
	  mkdir -p debian/$$PKG/usr/share/doc; \
	  ln -sf $$target debian/$$PKG/usr/share/doc/$$PKG; \
	  rm -f debian/$$PKG.p*; \
	  rm -f debian/$$PKG/usr/share/doc/$$target/copyright; \
	  rm -f debian/$$PKG/usr/share/doc/$$target/changelog.Debian*; \
	  sed "s/@PKGNAME@/$$PKG/g;s/@PKGTARGET@/$$target/g" \
	    debian/deppackage.postinst.in > debian/$$PKG.postinst; \
	done
	# indep packages (with docdir symlinks)
	for p in $$(dh_listpackages -i); do \
	  case "$$p" in \
	    ttf-opensymbol) continue;; \
	    *-l10n-in|*-l10n-za) target=libreoffice$(VER)-common;; \
	    openoffice.org-l10n-*|openoffice.org-help-*) target=libreoffice$(VER)-l10n-common;; \
	    *-help-*|*-l10n-*) continue;; \
	    libreoffice$(VER)-common|libuno-cli-basetypes1.0-cil|ttf-opensymbol) continue;; \
	    broffice) target=libreoffice;; \
	    *-cil)    target=libuno-cli-basetypes1.0-cil;; \
	    *)        target=libreoffice$(VER)-common;; \
	  esac; \
	  rm -f debian/$$p/usr/share/doc/$$p/{changelog.Debian,copyright,README.Debian}; \
	  for i in debian/$$p/usr/share/doc/$$p/*; do \
	    mkdir -p debian/$$p/usr/share/doc/$$target; \
	    mv $$i debian/$$p/usr/share/doc/$$target/; \
	  done; \
	  rmdir debian/$$p/usr/share/doc/$$p; \
	  ln -sf $$target debian/$$p/usr/share/doc/$$p; \
	  sed "s/@PKGNAME@/$$p/g;s/@PKGTARGET@/$$target/g" \
	    debian/deppackage.postinst.in >> debian/$$p.postinst; \
	done
endif
	dh_installmime -i
	dh_lintian -i
	dh_bugfiles -i -A
	dh_link -i
	dh_fixperms -i
ifeq "$(LENNY_BACKPORT)" "y"
	dh_desktop -i
endif
	dh_icons -i
	dh_installxmlcatalogs -i
ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
ifeq "$(ENABLE_MONO)" "y"
	dh_installcligac -i
endif
endif
	dh_compress -i -X.py -X.mk -X.sxd -X.xcd.sample
	dh_installdeb -i
ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
ifeq "$(ENABLE_MONO)" "y"
	dh_makeclilibs -i
	dh_clideps -i
endif
endif
	dh_gencontrol -i $(DEBHELPER_OPTIONS) \
		-Nlibreoffice$(VER)-report-builder \
		-Nlibreoffice$(VER)-wiki-publisher \
		-Nlibuno-cli-basetypes1.0-cil \
		-Nlibuno-cli-uretypes1.0-cil \
		-Nlibuno-cli-oootypes1.0-cil \
		-Nlibuno-cli-cppuhelper1.0-cil \
		-Nlibuno-cli-ure1.0-cil \
		-Nttf-opensymbol \
		-Nopenoffice.org-dtd-officedocument1.0 -- \
		-V'base-version=$(BASE_VERSION)' \
		-V'next-base-version=$(NEXT_BASE_VERSION)' \
		-V'basis-version=$(BASIS_VERSION)' \
		-V'next-basis-version=$(NEXT_BASIS_VERSION)' \
		-V'help-l10n-virtual-version=$(HELP_L10N_VIRTUAL_VERSION)' \
		-V'l10n-common-depends=$(L10N_COMMON_DEPENDS)' \
		-V'common-bsh-depends=$(COMMON_BSH_DEPENDS)' \
		-V'java-common-depends=$(JAVA_COMMON_DEPENDS)' \
		-V'java-common-java-depends=$(JAVA_COMMON_JAVA_DEPENDS)' \
		-V'java-runtime-depends=$(JAVA_RUNTIME_DEPENDS)' \
		-V'lucene-depends=$(LUCENE_DEPENDS)' \
		-V'lucene-conflicts=$(LUCENE_CONFLICTS)' \
		-V'textcat-data-recommends=$(TEXTCAT_DATA_RECOMMENDS)' \
		-V'Binary-Version=$(BINARY_VERSION)' \
		-V'ooo-binfilter-dep=$(OOO_BINFILTER_DEP)' \
		-V'dbg-dbg-suggests=$(DBG_DBG_SUGGESTS)' \
		-v$(BINARY_VERSION)
ifneq "$(PKGSOURCE)" "libreoffice$(VER)-l10n"
ifeq "$(ENABLE_MONO)" "y"
	# although this version gets increased before every OOo release
	# we need the +LibO anyway when we build milestones..
	dh_gencontrol -plibuno-cli-basetypes1.0-cil -- \
		-v$(shell grep CLI_BASETYPES_NEW_VERSION $(SOURCE_TREE)/cli_ure/version/version.txt | cut -d"=" -f2)+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
	dh_gencontrol -plibuno-cli-uretypes1.0-cil -- \
		-v$(shell grep CLI_URETYPES_NEW_VERSION $(SOURCE_TREE)/cli_ure/version/version.txt | cut -d"=" -f2)+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
	dh_gencontrol -plibuno-cli-oootypes1.0-cil -- \
		-v$(shell grep CLI_OOOTYPES_NEW_VERSION $(SOURCE_TREE)/unoil/climaker/version.txt | cut -d"=" -f2)+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
	dh_gencontrol -plibuno-cli-cppuhelper1.0-cil -- \
		-v$(shell grep CLI_CPPUHELPER_NEW_VERSION $(SOURCE_TREE)/cli_ure/version/version.txt | cut -d"=" -f2)+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
	dh_gencontrol -plibuno-cli-ure1.0-cil -- \
		-v$(shell grep CLI_URE_NEW_VERSION $(SOURCE_TREE)/cli_ure/version/version.txt | cut -d"=" -f2)+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
endif
ifeq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	dh_gencontrol -pttf-opensymbol -- \
		-v$(shell echo `echo $(BINARY_VERSION) | cut -d: -f1` + 1 | bc):$(shell fontforge -lang=ff -c 'Open($$1); Print ($$fontversion); Quit(0);' debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice/opens___.ttf)+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
endif
ifeq "$(ENABLE_MEDIAWIKI)" "y"
	dh_gencontrol -plibreoffice$(VER)-wiki-publisher -- \
		-V'mediawiki-jar-depends=$(MEDIAWIKI_JAR_DEPENDS)' \
		-V'lucene-depends=$(LUCENE_DEPENDS)' \
		-V'java-runtime-depends=$(JAVA_RUNTIME_DEPENDS)' \
		-v$(shell grep "<version" $(SOURCE_TREE)/swext/mediawiki/src/description.xml | perl -pi -e 's,<version value=\"(.*)\"/>,\1,; s/^\s+//')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
endif
ifeq "$(ENABLE_REPORTDESIGN)" "y"
	dh_gencontrol -plibreoffice$(VER)-report-builder -- \
		-V'base-version=$(BASE_VERSION)' \
		-V'report-builder-jar-depends=$(REPORT_BUILDER_JAR_DEPENDS)' \
		-V'java-runtime-depends=$(JAVA_RUNTIME_DEPENDS)' \
		-v`echo $(BINARY_VERSION) | cut -d: -f1`:$(shell grep "<version" $(SOURCE_TREE)/reportbuilder/$(shell . $(SOURCE_TREE)/*Env*.sh; echo $$OUTPATH$$PROEXT)/misc/description.xml | perl -pi -e 's,<version value=\"(.*)\"/>,\1,; s/^\s+//')+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
endif
	dh_gencontrol -popenoffice.org-dtd-officedocument1.0 -- \
		-v$(shell echo `echo $(BINARY_VERSION) | cut -d: -f1` + 1 | bc):1.0+LibO`echo $(BINARY_VERSION) | cut -d: -f2`
endif # "$(PKGSOURCE)" "libreoffice$(VER)-l10n"

	dh_md5sums -i -Xjavasettingsunopkginstall.xml
	dh_builddeb -i $(DEBHELPER_OPTIONS) $(BUILDDEB_OPTIONS)

	touch $@

binary: binary-arch binary-indep

# Get ooo-build
get-ooo-build:
	if echo $(OOO_BUILD_VERSION) | egrep -q "\."; then \
		wget http://download.go-oo.org/$(MWS)/ooo-build-$(OOO_BUILD_TARBALL_VERSION).tar.gz && \
		mv ooo-build-$(OOO_BUILD_TARBALL_VERSION).tar.gz ../libreoffice_$(UPSTREAM_VERSION).orig-ooo-build-$(OOO_BUILD_TARBALL_VERSION).tar.gz && \
		tar xfvz ooo-build-$(OOO_BUILD_TARBALL_VERSION).tar.gz && \
		mv ooo-build-$(OOO_BUILD_TARBALL_VERSION) $(OOO_BUILD_TREE); \
	else \
		if test -n "$$TMP"; then \
			TMPD=`mktemp -d -p $$TMP`; \
		else \
			TMPD=`mktemp -d`; \
		fi && \
		cd $$TMPD && pwd && \
		$(CURDIR)/$(OOO_BUILD_TREE)/bin/ooo-pack-sources --force --no-lo-pieces $(CURDIR)/$(OOO_BUILD_TREE) && \
		tar xfvz ooo-build-$(OOO_BUILD_TARBALL_VERSION).tar.gz && \
		mv ooo-build-$(OOO_BUILD_TARBALL_VERSION) $(OOO_BUILD_TREE) && \
		rm ooo-build-$(OOO_BUILD_TARBALL_VERSION).tar.gz archive/ooo-build-$(OOO_BUILD_TARBALL_VERSION).tar.gz && \
		tar cfvz $(CURDIR)/../libreoffice_$(UPSTREAM_VERSION).orig-ooo-build-$(OOO_BUILD_VERSION).tar.gz $(OOO_BUILD_TREE) && \
		rm -rf $$TMPD; \
	fi

# Get upstream external sources
get-ext-sources:
	rm -rf $(TARFIILE_LOCATION)
	mkdir -p $(TARFILE_LOCATION)
	wget http://cgit.freedesktop.org/ooo-build/bootstrap/plain/fetch_tarballs.sh?id=ooo/$(GIT_TAG) -O fetch_tarballs.sh && chmod 755 fetch_tarballs.sh && \
	wget http://cgit.freedesktop.org/ooo-build/bootstrap/plain/ooo.lst?id=ooo/$(GIT_TAG) -O ooo.lst && \
	./fetch_tarballs.sh ooo.lst; \
	rm -f fetch_tarballs.sh ooo.lst

get-orig-source:
	if ! which git >/dev/null 2>/dev/null; then \
		echo "You need git."; \
		exit 1; \
	fi; \
	if test -n "$$TMP"; then \
		TMPD=`mktemp -d -p $$TMP`; \
	else \
		TMPD=`mktemp -d`; \
	fi && \
	cd $$TMPD && \
	mkdir -p libreoffice-$(UPSTREAM_VERSION) && \
	cd libreoffice-$(UPSTREAM_VERSION) && \
		cp -ra $(CURDIR)/$(OOO_BUILD_TREE) $(OOO_BUILD_TREE); \
		cd $(OOO_BUILD_TREE) && \
			./configure --with-tag=$(TAG) --with-distro=$(PATCHSET) \
				--with-git --with-lang="$(BUILD_ISOS)" && \
			./download && \
			mkdir ../ext-sources-$(OOO_BUILD_TREE) && \
			for i in biblio.tar.bz2 extras-3.tar.bz2 ????????????????????????????????-*; do \
				mv src/$$i ../ext-sources-$(OOO_BUILD_TREE); \
			done && \
		cd .. && \
		tar cfvz $(CURDIR)/../libreoffice_$(UPSTREAM_VERSION).orig-ext-sources-$(OOO_BUILD_TREE).tar.gz ext-sources-$(OOO_BUILD_TREE) && \
		rm -rf ext-sources-$(OOO_BUILD_TREE) && \
		cd $(OOO_BUILD_TREE) && \
			./bin/ooo-pack-sources --force --no-lo-build . && \
			mv archive ../archive-$(OOO_BUILD_TREE) && \
		cd ../archive-$(OOO_BUILD_TREE) && \
		tar xfvj ooo-build-$(OOO_BUILD_TARBALL_VERSION)-libs-extern-sys.tar.bz2 && \
		for i in da_DK en_GB ru_RU; do \
			if [ "$$i" = "en_GB" ]; then j=en; else j=$$i; fi; \
			rm ooo-build-$(OOO_BUILD_TARBALL_VERSION)-libs-extern-sys/dictionaries/$$j/hyph_$${i}.dic; \
		done && \
		tar cfvj ooo-build-$(OOO_BUILD_TARBALL_VERSION)-libs-extern-sys.tar.bz2.dfsg ooo-build-$(OOO_BUILD_TARBALL_VERSION)-libs-extern-sys && \
		ln -sf ooo-build-$(OOO_BUILD_TARBALL_VERSION)-libs-extern-sys.tar.bz2.dfsg ooo-build-$(OOO_BUILD_TARBALL_VERSION)-libs-extern-sys.tar.bz2 && \
		rm -rf ooo-build-$(OOO_BUILD_TARBALL_VERSION)-libs-extern-sys && \
		cd $$TMPD/libreoffice-$(UPSTREAM_VERSION) && tar cfvz libreoffice_$(UPSTREAM_VERSION).orig-archive-$(OOO_BUILD_VERSION).tar.gz archive-$(OOO_BUILD_VERSION) && \
		rm -rf libreoffice-$(UPSTREAM_VERSION) && \
		mv libreoffice_$(UPSTREAM_VERSION).orig-archive-$(OOO_BUILD_VERSION).tar.gz $(CURDIR)/.. && \
		rm -rf $$TMPD
	if test -n "$$TMP"; then \
		TMPD=`mktemp -d -p $$TMP`; \
	else \
		TMPD=`mktemp -d`; \
	fi && \
	cd $$TMPD && \
		export TARFILE_LOCATION=`basename $(TARFILE_LOCATION)`; \
		$(CURDIR)/debian/rules get-ext-sources && \
		zip -d $$TARFILE_LOCATION/*liblayout.zip liblayout/resource/rfc1345.txt && \
		rm $$TARFILE_LOCATION/JLanguageTool* && \
		tar cfvz libreoffice_$(UPSTREAM_VERSION).orig-$$TARFILE_LOCATION.tar.gz $$TARFILE_LOCATION && \
		mv libreoffice_$(UPSTREAM_VERSION).orig-$$TARFILE_LOCATION.tar.gz $(CURDIR)/.. && \
		rm -rf $$TMPD
	# get ooo-build
	if test -n "$$TMP"; then \
		TMPD=`mktemp -d -p $$TMP`; \
	else \
		TMPD=`mktemp -d`; \
	fi && \
	if [ ! -d $(OOO_BUILD_TREE) ]; then ./debian/rules get-ooo-build; fi
	tar cfvz ../libreoffice_$(UPSTREAM_VERSION).orig-$(OOO_BUILD_TREE).tar.gz $(OOO_BUILD_TREE)

# Download the latest sources needed for ooo-build. Note that is
# might download more than actually needed here....
download: $(OOO_BUILD_TREE)/config.status
	$(OOO_BUILD_TREE)/download	

.PHONY: control
.PHONY: clean-debdir clean-instsetoo clean-objectdirs clean default configure
.PHONY: build build-indep build-arch install-arch install-indep
.PHONY: $(stampdir_targets)

# vim:set noet ai sts=8 sw=8 tw=0:
